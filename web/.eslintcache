[{"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\App.js":"1","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\history.js":"2","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\auth.js":"3","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\types.js":"4","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\PrivateRoute.js":"5","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\apis\\store.js":"6","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\SignUp.js":"7","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\SignIn.js":"8","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Checkout.js":"9","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Dashboard.js":"10","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\constants.js":"11","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\ScrollToTopOnMount.js":"12","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\utils.js":"13","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\BreadCrumbs.js":"14","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Copyright.js":"15","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Discount.js":"16","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Orders.js":"17","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Chart.js":"18","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Edit.js":"19","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\LaptopForm\\LaptopForm.jsx":"20","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ProductCard.js":"21","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\CookieConsent.js":"22","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Tab.js":"23","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\AddressDeleteDialog.js":"24","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\Search.js":"25","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Footer\\MessageForm.js":"26","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ReviewDialog.js":"27","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Product.js":"28","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\Accessory\\AccessoryForm.jsx":"29","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\AddressForm.js":"30","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\index.js":"31","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\BackToTop.js":"32","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\CartView.js":"33","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Error.js":"34","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Content.js":"35","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\UserProfile.js":"36","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\Forgot.js":"37","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\Seller.jsx":"38","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\Lists.jsx":"39","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\setting.js":"40","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\AddedToCart.js":"41","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\AlertDialog.js":"42","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\MessageDetail.js":"43","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Messages.js":"44","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\OrderDetail.js":"45","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Password.js":"46","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Footer\\Footer.js":"47","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Title.js":"48","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\LogoutAlertDialog.js":"49","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\authReducer.js":"50","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Layout.js":"51","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Cart.js":"52","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Address.js":"53","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\ListItems.js":"54","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Deposits.js":"55","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\CustomAlert.js":"56","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\index.js":"57","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\cartLocal.js":"58","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\cartReducer.js":"59","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\cart.js":"60","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Home.js":"61","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\SellerProduct.jsx":"62","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\BuyerOrders.jsx":"63","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\ProfileList.js":"64","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Orders.js":"65","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Account.js":"66","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\CheckoutStyles.js":"67","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\ResetPassword.js":"68","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\MyList.js":"69","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\AdminRoute.js":"70","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ProductList.js":"71","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Ratings.js":"72","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\SpecificList.js":"73","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\SideDrawer.js":"74","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\NavList.js":"75","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\Nav.js":"76","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\routes.js":"77","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Maintenance.js":"78","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\Hoc.js":"79"},{"size":783,"mtime":1641988943454,"results":"80","hashOfConfig":"81"},{"size":89,"mtime":1641988767187,"results":"82","hashOfConfig":"81"},{"size":2656,"mtime":1641989462032,"results":"83","hashOfConfig":"81"},{"size":457,"mtime":1641989188234,"results":"84","hashOfConfig":"81"},{"size":732,"mtime":1641992307401,"results":"85","hashOfConfig":"81"},{"size":634,"mtime":1641992282913,"results":"86","hashOfConfig":"81"},{"size":8756,"mtime":1641992041967,"results":"87","hashOfConfig":"81"},{"size":6083,"mtime":1641992115162,"results":"88","hashOfConfig":"81"},{"size":2333,"mtime":1642003838287,"results":"89","hashOfConfig":"81"},{"size":7923,"mtime":1624398392000,"results":"90","hashOfConfig":"81"},{"size":2758,"mtime":1641988798925,"results":"91","hashOfConfig":"81"},{"size":190,"mtime":1641992294867,"results":"92","hashOfConfig":"81"},{"size":536,"mtime":1641988713042,"results":"93","hashOfConfig":"81"},{"size":908,"mtime":1641992431326,"results":"94","hashOfConfig":"81"},{"size":786,"mtime":1641992390750,"results":"95","hashOfConfig":"81"},{"size":3826,"mtime":1624398706000,"results":"96","hashOfConfig":"81"},{"size":7480,"mtime":1640867333991,"results":"97","hashOfConfig":"81"},{"size":3113,"mtime":1622848462000,"results":"98","hashOfConfig":"81"},{"size":4932,"mtime":1641990705019,"results":"99","hashOfConfig":"81"},{"size":14753,"mtime":1641990318994,"results":"100","hashOfConfig":"81"},{"size":7747,"mtime":1641995098429,"results":"101","hashOfConfig":"81"},{"size":2054,"mtime":1641992420840,"results":"102","hashOfConfig":"81"},{"size":2239,"mtime":1641995615563,"results":"103","hashOfConfig":"81"},{"size":2752,"mtime":1619048274000,"results":"104","hashOfConfig":"81"},{"size":7352,"mtime":1641995680743,"results":"105","hashOfConfig":"81"},{"size":4324,"mtime":1641996290736,"results":"106","hashOfConfig":"81"},{"size":4345,"mtime":1641995532451,"results":"107","hashOfConfig":"81"},{"size":13274,"mtime":1641996533182,"results":"108","hashOfConfig":"81"},{"size":9038,"mtime":1641990436576,"results":"109","hashOfConfig":"81"},{"size":6150,"mtime":1641991672155,"results":"110","hashOfConfig":"81"},{"size":219,"mtime":1641988963568,"results":"111","hashOfConfig":"81"},{"size":1631,"mtime":1641992442837,"results":"112","hashOfConfig":"81"},{"size":480,"mtime":1641989447233,"results":"113","hashOfConfig":"81"},{"size":819,"mtime":1641992378271,"results":"114","hashOfConfig":"81"},{"size":1703,"mtime":1641989430102,"results":"115","hashOfConfig":"81"},{"size":3720,"mtime":1641990532896,"results":"116","hashOfConfig":"81"},{"size":4749,"mtime":1641992179672,"results":"117","hashOfConfig":"81"},{"size":3776,"mtime":1641990092193,"results":"118","hashOfConfig":"81"},{"size":2050,"mtime":1641990128937,"results":"119","hashOfConfig":"81"},{"size":445,"mtime":1641988747433,"results":"120","hashOfConfig":"81"},{"size":2623,"mtime":1641994791992,"results":"121","hashOfConfig":"81"},{"size":1564,"mtime":1641994800733,"results":"122","hashOfConfig":"81"},{"size":2477,"mtime":1622311552000,"results":"123","hashOfConfig":"81"},{"size":4570,"mtime":1623902170000,"results":"124","hashOfConfig":"81"},{"size":14842,"mtime":1622848106000,"results":"125","hashOfConfig":"81"},{"size":5566,"mtime":1641990589947,"results":"126","hashOfConfig":"81"},{"size":6356,"mtime":1641995811623,"results":"127","hashOfConfig":"81"},{"size":371,"mtime":1608239580000,"results":"128","hashOfConfig":"81"},{"size":1745,"mtime":1641992355260,"results":"129","hashOfConfig":"81"},{"size":719,"mtime":1641988976308,"results":"130","hashOfConfig":"81"},{"size":1444,"mtime":1641989316613,"results":"131","hashOfConfig":"81"},{"size":9027,"mtime":1642005692077,"results":"132","hashOfConfig":"81"},{"size":343,"mtime":1642003811812,"results":"133","hashOfConfig":"81"},{"size":2105,"mtime":1622854564000,"results":"134","hashOfConfig":"81"},{"size":1595,"mtime":1618876166000,"results":"135","hashOfConfig":"81"},{"size":1476,"mtime":1622055354000,"results":"136","hashOfConfig":"81"},{"size":573,"mtime":1641988754092,"results":"137","hashOfConfig":"81"},{"size":1702,"mtime":1642004779020,"results":"138","hashOfConfig":"81"},{"size":697,"mtime":1641988968499,"results":"139","hashOfConfig":"81"},{"size":662,"mtime":1641989238599,"results":"140","hashOfConfig":"81"},{"size":3460,"mtime":1641989409806,"results":"141","hashOfConfig":"81"},{"size":3767,"mtime":1641989818849,"results":"142","hashOfConfig":"81"},{"size":4687,"mtime":1641990178297,"results":"143","hashOfConfig":"81"},{"size":1926,"mtime":1641990556215,"results":"144","hashOfConfig":"81"},{"size":4101,"mtime":1641990670014,"results":"145","hashOfConfig":"81"},{"size":1785,"mtime":1641991028021,"results":"146","hashOfConfig":"81"},{"size":284,"mtime":1641991277775,"results":"147","hashOfConfig":"81"},{"size":6192,"mtime":1641992151230,"results":"148","hashOfConfig":"81"},{"size":4085,"mtime":1641992339463,"results":"149","hashOfConfig":"81"},{"size":1186,"mtime":1641992461262,"results":"150","hashOfConfig":"81"},{"size":5950,"mtime":1641995267865,"results":"151","hashOfConfig":"81"},{"size":4482,"mtime":1641995476854,"results":"152","hashOfConfig":"81"},{"size":2412,"mtime":1641995576323,"results":"153","hashOfConfig":"81"},{"size":2302,"mtime":1641995649185,"results":"154","hashOfConfig":"81"},{"size":5291,"mtime":1641995726177,"results":"155","hashOfConfig":"81"},{"size":3784,"mtime":1641995757871,"results":"156","hashOfConfig":"81"},{"size":3010,"mtime":1640901735770,"results":"157","hashOfConfig":"81"},{"size":5573,"mtime":1618876240000,"results":"158","hashOfConfig":"81"},{"size":63,"mtime":1641988758957,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5r5izf",{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"171"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"171"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"171"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"204"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"204"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"164"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"164"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"204"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"204"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"204"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"204"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\App.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\history.js",[],["334","335"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\auth.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\types.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\PrivateRoute.js",[],["336","337"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\apis\\store.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\SignUp.js",["338","339"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authSignup, authReset } from \"../../store/actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showError } from \"../../utils\";\r\nimport * as Yup from \"yup\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  div: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MyCheckbox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nconst MyTextField = ({ label, autoComplete, autoFocus, type, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  return (\r\n    <TextField\r\n      margin=\"normal\"\r\n      fullWidth\r\n      label={label}\r\n      autoFocus={autoFocus}\r\n      autoComplete={autoComplete}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      type={type}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  firstName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\")\r\n    .min(3, \"First name should be at least 3 characters long\"),\r\n  lastName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\")\r\n    .min(3, \"Last name should be at least 3 characters long\"),\r\n  email: Yup.string()\r\n    .email(\"This must be a valid email\")\r\n    .required(\"Required\")\r\n    .max(254, \"Can't be more than 254 characters\"),\r\n  phoneNumber: Yup.string()\r\n    .required(\"Required\")\r\n    .min(10, \"Phone number should be atleast of 11 numbers \"),\r\n  address: Yup.string()\r\n    .required(\"Required\")\r\n    .min(18, \"Can't be less than 18 characters\"),\r\n  password1: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Must be at least 8 characters long\")\r\n    .matches(\r\n      /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must have at least one number, one lowercase and one uppercase letter\"\r\n    ),\r\n  password2: Yup.string().oneOf(\r\n    [Yup.ref(\"password1\"), null],\r\n    \"Passwords must match\"\r\n  ),\r\n});\r\n\r\nconst SignUpForm = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const status = useSelector((state) => state.auth);\r\n  const [error, setError] = useState(null);\r\n  const { from } = location.state || { from: { pathname: \"/signin\" } };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(authReset());\r\n  }, []);\r\n\r\n  const handleSubmit = ({\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    phoneNumber,\r\n    address,\r\n    password1,\r\n    password2,\r\n    seller,\r\n  }) => {\r\n    dispatch(\r\n      authSignup(\r\n        email,\r\n        password1,\r\n        password2,\r\n        firstName,\r\n        lastName,\r\n        phoneNumber,\r\n        address,\r\n        from,\r\n        seller\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {status.error ? (\r\n            <Typography variant=\"h5\" color=\"error\">\r\n              {showError(status.error)}\r\n            </Typography>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Formik\r\n            onSubmit={handleSubmit}\r\n            validationSchema={validationSchema}\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              phoneNumber: \"\",\r\n              address: \"\",\r\n              password1: \"\",\r\n              password2: \"\",\r\n              seller: false,\r\n            }}\r\n          >\r\n            {({ values }) => (\r\n              <Form className={classes.form}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextField\r\n                      autoComplete=\"fname\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"\r\n                      label=\"First Name\"\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextField\r\n                      id=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      name=\"lastName\"\r\n                      autoComplete=\"lname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      id=\"phoneNumber\"\r\n                      label=\"Phone Number\"\r\n                      name=\"phoneNumber\"\r\n                      type=\"number\"\r\n                      autoComplete=\"phoneNumber\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      type=\"text\"\r\n                      id=\"address\"\r\n                      label=\"Your Address\"\r\n                      name=\"address\"\r\n                      autoComplete=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      name=\"password1\"\r\n                      label=\"Password\"\r\n                      type={values.show_password ? \"text\" : \"password\"}\r\n                      id=\"password1\"\r\n                      autoComplete=\"current-password\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      name=\"password2\"\r\n                      label=\"Password(again)\"\r\n                      type={values.show_password ? \"text\" : \"password\"}\r\n                      id=\"password2\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyCheckbox name=\"show_password\" label=\"Show password\" />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyCheckbox name=\"seller\" label=\"Sign up as a seller\" />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  {status.loading ? (\r\n                    <CircularProgress color=\"secondary\" />\r\n                  ) : (\r\n                    \"Sign Up\"\r\n                  )}\r\n                </Button>\r\n                {error && <FormHelperText error={true}>{error}</FormHelperText>}\r\n                <div className={classes.div}>\r\n                  <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                      <Link to=\"/signin\">Already have an account? Sign in</Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\SignIn.js",["340","341"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authLogin, authReset } from \"../../store/actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showError } from \"../../utils\";\r\nimport * as Yup from \"yup\";\r\nimport Copyright from \"../../components/Copyright\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  div: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MyCheckbox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nconst MyTextfield = ({ label, autoComplete, autoFocus, type, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n  return (\r\n    <TextField\r\n      margin=\"normal\"\r\n      fullWidth\r\n      autoComplete={autoComplete}\r\n      autoFocus={autoFocus}\r\n      label={label}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      type={type}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string()\r\n    .email(\"This must be a valid email\")\r\n    .required(\"Required\")\r\n    .max(254, \"Can't be more than 254 characters\"),\r\n  password: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"password should be 8 characters long\"),\r\n});\r\n\r\nconst SignInForm = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const status = useSelector((state) => state.auth);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(authReset());\r\n  }, []);\r\n\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const handleSubmit = ({ email, password }) => {\r\n    dispatch(authLogin(email, password, from));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {status.error ? (\r\n            <Typography variant=\"h5\" color=\"error\">\r\n              {showError(status.error)}\r\n            </Typography>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            validateOnChange={true}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({ values }) => (\r\n              <Form className={classes.form}>\r\n                <MyTextfield\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                />\r\n                <MyTextfield\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type={values.show_password ? \"text\" : \"password\"}\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                />\r\n                <MyCheckbox name=\"show_password\" label=\"Show password\" />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  {status.loading ? (\r\n                    <CircularProgress color=\"secondary\" />\r\n                  ) : (\r\n                    \"Sign In\"\r\n                  )}\r\n                </Button>\r\n                {error && <FormHelperText error={true}>{error}</FormHelperText>}\r\n                <div className={classes.div}>\r\n                  <Grid container spacing={6}>\r\n                    <Grid item xs>\r\n                      <Link to=\"/reset-password\" variant=\"body2\">\r\n                        {\"Forgot password?\"}\r\n                      </Link>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Link to=\"/signup\">\r\n                        {\"Don't have an account? Sign Up\"}\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Checkout.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Dashboard.js",[],["342","343"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\constants.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\ScrollToTopOnMount.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\utils.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\BreadCrumbs.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Copyright.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Discount.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Orders.js",["344"],"import React, { useEffect, useState } from \"react\"\r\nimport { authStore } from \"../../apis/store\"\r\nimport { orderListURL, orderFilterURL } from \"../../constants\"\r\n\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Title from \"./Title\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  row: {\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  pagination: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  control: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      paddingLeft: theme.spacing(10),\r\n      paddingRight: theme.spacing(10),\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: theme.spacing(1),\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function Orders({ state, setState }) {\r\n  const classes = useStyles()\r\n  const [orders, setOrders] = useState({\r\n    loading: true,\r\n    error: null,\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n    items: [],\r\n    status: \"All\",\r\n  })\r\n  const [page, setPage] = useState(1)\r\n\r\n  const getOrders = (url) => {\r\n    authStore\r\n      .get(url, {\r\n        params: {\r\n          status: orders.status,\r\n          orderding: \"ordered_date\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const count = Math.round(response.data.count / 10)\r\n        setOrders({\r\n          ...orders,\r\n          loading: false,\r\n          items: response.data.results,\r\n          count: count,\r\n          next: response.data.next,\r\n          previous: response.data.previous,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setOrders({\r\n          ...orders,\r\n          loading: false,\r\n          error: true,\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getAllOrders = () => {\r\n      authStore\r\n        .get(orderListURL)\r\n        .then((response) => {\r\n          const count = Math.round(response.data.count / 10)\r\n          setOrders({\r\n            ...orders,\r\n            loading: false,\r\n            items: response.data.results,\r\n            count: count,\r\n            next: response.data.next,\r\n            previous: response.data.previous,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setOrders({\r\n            ...orders,\r\n            loading: false,\r\n            error: true,\r\n          })\r\n        })\r\n    }\r\n\r\n    if (orders.status === \"All\") {\r\n      getAllOrders()\r\n    } else {\r\n      getOrders(orderFilterURL)\r\n    }\r\n  }, [orders.status])\r\n\r\n  const handleSelectChange = (e) => {\r\n    setOrders({\r\n      ...orders,\r\n      status: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value > page) {\r\n      setPage(value)\r\n      getOrders(orders.next)\r\n    } else if (value < page) {\r\n      setPage(value)\r\n      getOrders(orders.previous)\r\n    } else {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return (\r\n        <TableRow>\r\n          <TableCell align=\"center\" colSpan={5}>\r\n            <CircularProgress />\r\n          </TableCell>\r\n        </TableRow>\r\n      )\r\n    } else if (\r\n      orders.loading === false &&\r\n      orders.items !== null &&\r\n      orders.items.length === 0\r\n    ) {\r\n      return (\r\n        <TableRow>\r\n          <TableCell align=\"center\" colSpan={5}>\r\n            <Typography color=\"secondary\">No orders</Typography>\r\n          </TableCell>\r\n        </TableRow>\r\n      )\r\n    } else if (\r\n      orders.loading === false &&\r\n      orders.items !== null &&\r\n      orders.items.length > 0\r\n    ) {\r\n      return orders.items.map((order) => {\r\n        const date = new Date(order.ordered_date).toLocaleDateString(\"en-US\", {\r\n          day: \"numeric\",\r\n          month: \"short\",\r\n          year: \"numeric\",\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n        })\r\n        return (\r\n          <TableRow\r\n            key={order.id}\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                orderId: order.id,\r\n                tab: \"OrderDetail\",\r\n              })\r\n            }}\r\n            hover\r\n            className={classes.row}\r\n          >\r\n            <TableCell align=\"left\">{order.id}</TableCell>\r\n            <TableCell align=\"left\">{`${order.user.first_name} ${order.user.last_name}`}</TableCell>\r\n            <TableCell align=\"left\">{date}</TableCell>\r\n            <TableCell align=\"left\">{order.total} $</TableCell>\r\n            <TableCell align=\"left\">{order.status}</TableCell>\r\n          </TableRow>\r\n        )\r\n      })\r\n    } else {\r\n      return (\r\n        <Typography color=\"secondary\">\r\n          There was an error retrieving the data\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <Title>Orders</Title>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={classes.control}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"order-status-label\">Select status: </InputLabel>\r\n              <Select\r\n                labelId=\"order-status-label\"\r\n                id=\"order-status\"\r\n                value={orders.status}\r\n                onChange={handleSelectChange}\r\n              >\r\n                <MenuItem value=\"All\">All</MenuItem>\r\n                <MenuItem value=\"Processing\">Processing</MenuItem>\r\n                <MenuItem value=\"Dispatched\">Dispatched</MenuItem>\r\n                <MenuItem value=\"Completed\">Completed</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"spanning table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Order #</TableCell>\r\n                  <TableCell align=\"left\">Customer</TableCell>\r\n                  <TableCell align=\"left\">Date</TableCell>\r\n                  <TableCell align=\"left\">Amount</TableCell>\r\n                  <TableCell align=\"left\">Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{renderOrders()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {orders.count !== 0 ? (\r\n            <div className={classes.pagination}>\r\n              <Pagination\r\n                count={orders.count}\r\n                shape=\"rounded\"\r\n                onChange={handleChange}\r\n                page={page}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Chart.js",["345"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Edit.js",[],["346","347"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\LaptopForm\\LaptopForm.jsx",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ProductCard.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\CookieConsent.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Tab.js",["348"],"import React, { useState } from \"react\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst TabPanel = ({ children, value, index }) => {\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simpel-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tabProps = (index = 1) => {\r\n  return {\r\n    id: `tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nconst ProductTab = ({\r\n  productID,\r\n  productTitle,\r\n  description,\r\n  manufacturer_url,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"Rating, Specs Tab\"\r\n        >\r\n          <Tab label=\"Specifications\" {...tabProps(0)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <List>\r\n          <ListItem>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          </ListItem>\r\n          <ListItem>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              For more details, head over to the{\" \"}\r\n              <span>\r\n                <a target=\"_blank\" href={manufacturer_url}>\r\n                  official website {productTitle}\r\n                </a>\r\n              </span>\r\n              .\r\n            </Typography>\r\n          </ListItem>\r\n        </List>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductTab;\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\AddressDeleteDialog.js",[],["349","350"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\Search.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Footer\\MessageForm.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ReviewDialog.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Product.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\Accessory\\AccessoryForm.jsx",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\AddressForm.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\index.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\BackToTop.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\CartView.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Error.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Content.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\UserProfile.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\Forgot.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\Seller.jsx",["351"],"import React, { useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Lists from \"./Lists\";\r\nimport BuyerOrders from \"./BuyerOrders\";\r\nimport LaptopForm from \"./LaptopForm/LaptopForm\";\r\nimport SellerProduct from \"./SellerProduct\";\r\nimport AccessoryForm from \"./Accessory/AccessoryForm\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  div: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    width: \"100%\",\r\n  },\r\n  list: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UserProfile() {\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [state, setState] = useState({\r\n    option: \"loading\",\r\n    display: \"Loading\",\r\n    error: null,\r\n    user: null,\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    setState({\r\n      option: \"buyerOrders\",\r\n      display: \"Buyer Orders\",\r\n      user: token,\r\n    });\r\n    // eslint-disable-next-line()\r\n  }, []);\r\n\r\n  const renderComponent = () => {\r\n    switch (state.option) {\r\n      case \"buyerOrders\":\r\n        return (\r\n          <React.Fragment>\r\n            <BuyerOrders />\r\n          </React.Fragment>\r\n        );\r\n      case \"sellLaptop\":\r\n        return (\r\n          <React.Fragment>\r\n            <LaptopForm />\r\n          </React.Fragment>\r\n        );\r\n      case \"sellAccessories\":\r\n        return (\r\n          <React.Fragment>\r\n            <AccessoryForm />\r\n          </React.Fragment>\r\n        );\r\n\r\n      case \"sellerProduct\":\r\n        return (\r\n          <React.Fragment>\r\n            <SellerProduct />\r\n          </React.Fragment>\r\n        );\r\n      case \"loading\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant=\"body1\">Loading</Typography>\r\n            <CircularProgress color=\"primary\" />\r\n          </React.Fragment>\r\n        );\r\n      case \"error\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography component=\"p\" variant=\"body1\" color=\"error\">\r\n              An error occurred while fetching user details!\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        throw new Error(\"Unknown address\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ minHeight: \"100vh\", backgroundColor: \"white\" }}>\r\n        <CssBaseline />\r\n        <Grid container>\r\n          <Grid container item sm={12} justify=\"flex-start\">\r\n            <Box component=\"div\" mb={5} textAlign=\"left\">\r\n              <Typography variant=\"h2\" component=\"h2\">\r\n                Seller / {state.display}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item sm={12} md={4}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-label=\"account action list\"\r\n              disablePadding\r\n              className={classes.list}\r\n            >\r\n              <Lists state={state} setState={setState} />\r\n            </List>\r\n          </Grid>\r\n          <Grid container item sm={12} md={8} justify=\"center\">\r\n            <Box component=\"div\" className={classes.div}>\r\n              {renderComponent()}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\Lists.jsx",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\setting.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\AddedToCart.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\AlertDialog.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\MessageDetail.js",["352"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Messages.js",["353"],"import React, { useState, useEffect } from \"react\"\r\nimport { authStore } from \"../../apis/store\"\r\nimport { messagesURL, messageUnreadURL } from \"../../constants\"\r\n\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport Title from \"./Title\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    color: theme.palette.grey[500],\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  pagination: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}))\r\n\r\nconst Messages = ({ state, setState }) => {\r\n  const classes = useStyles()\r\n\r\n  const [messages, setMessages] = useState({\r\n    loading: true,\r\n    payload: [],\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n    unread: null,\r\n  })\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const fetchMessages = (url) => {\r\n    authStore\r\n      .get(url, {\r\n        params: {\r\n          ordering: \"read\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        authStore\r\n          .get(messageUnreadURL)\r\n          .then((res) => {\r\n            const unread = res.data.unread\r\n            const count = Math.round(response.data.count / 10)\r\n            setMessages({\r\n              ...messages,\r\n              loading: false,\r\n              payload: response.data.results,\r\n              count: count,\r\n              next: response.data.next,\r\n              previous: response.data.previous,\r\n              unread: unread,\r\n            })\r\n          })\r\n          .catch((error) => {\r\n            setMessages({\r\n              ...messages,\r\n              loading: false,\r\n            })\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        setMessages({\r\n          ...messages,\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMessages(messagesURL)\r\n  }, [])\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value > page) {\r\n      setPage(value)\r\n      fetchMessages(messages.next)\r\n    } else if (value < page) {\r\n      setPage(value)\r\n      fetchMessages(messages.previous)\r\n    } else {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const generateList = () => {\r\n    if (messages.payload && messages.payload.length === 1) {\r\n      const message = messages.payload[0]\r\n      return (\r\n        <React.Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                message: message,\r\n                tab: \"MessageDetail\",\r\n              })\r\n            }}\r\n          >\r\n            <ListItemText\r\n              primary={message.email}\r\n              className={message.read ? classes.listItem : \"\"}\r\n            />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      )\r\n    } else if (messages.payload && messages.payload.length > 1) {\r\n      return messages.payload.map((message) => {\r\n        return (\r\n          <ListItem\r\n            divider\r\n            button\r\n            key={message.id}\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                tab: \"MessageDetail\",\r\n                message: message,\r\n              })\r\n            }}\r\n          >\r\n            <ListItemText\r\n              primary={message.email}\r\n              className={message.read ? classes.listItem : \"\"}\r\n            />\r\n          </ListItem>\r\n        )\r\n      })\r\n    } else if (messages.loading === true) {\r\n      return <CircularProgress />\r\n    } else {\r\n      return (\r\n        <Typography variant=\"h4\" component=\"p\" color=\"secondary\">\r\n          You don't have any messages\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Messages</Title>\r\n      <div>\r\n        <Typography variant=\"body1\" component=\"p\">\r\n          Unread Messages: {messages.unread ? messages.unread : 0}\r\n        </Typography>\r\n      </div>\r\n      <List>{generateList()}</List>\r\n      {messages.count !== 0 ? (\r\n        <div className={classes.pagination}>\r\n          <Pagination\r\n            count={messages.count}\r\n            shape=\"rounded\"\r\n            onChange={handleChange}\r\n            page={page}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Messages\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\OrderDetail.js",["354","355"],"import React, { useEffect, useState } from \"react\"\r\n\r\nimport { authStore } from \"../../apis/store\"\r\nimport {\r\n  orderDetailURL,\r\n  orderUpdateURL,\r\n  shipmentCreateURL,\r\n  shipmentDetailURL,\r\n} from \"../../constants\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport Title from \"./Title\"\r\n\r\nimport CustomAlert from \"./CustomAlert\"\r\n\r\nconst OrderDetail = ({ id, state, setState }) => {\r\n  const [order, setOrder] = useState({\r\n    loading: true,\r\n    error: null,\r\n    data: null,\r\n  })\r\n  const [sent, setSent] = useState({\r\n    status: false,\r\n    message: \"\",\r\n  })\r\n  const [error, setError] = useState({\r\n    status: false,\r\n    message: \"\",\r\n  })\r\n  const [form, setForm] = useState({\r\n    saving: false,\r\n    error: null,\r\n    formData: {\r\n      id: \"\",\r\n      order: id,\r\n      courier_name: \"\",\r\n      tracking_id: \"\",\r\n      web_address: \"\",\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController()\r\n    const getOrderDetail = () => {\r\n      authStore\r\n        .get(orderDetailURL(id))\r\n        .then((response) => {\r\n          const orderData = response.data\r\n          setOrder({\r\n            ...order,\r\n            loading: false,\r\n            data: orderData,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setOrder({\r\n            ...order,\r\n            loading: false,\r\n            error: error,\r\n          })\r\n        })\r\n    }\r\n    getOrderDetail()\r\n\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController()\r\n    const getShipmentDetail = () => {\r\n      authStore\r\n        .get(shipmentDetailURL, {\r\n          params: {\r\n            id: id,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setForm({\r\n            ...form,\r\n            formData: {\r\n              ...response.data,\r\n            },\r\n          })\r\n        })\r\n        .catch((error) => setForm({ ...form, error: error }))\r\n    }\r\n\r\n    getShipmentDetail()\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [])\r\n\r\n  const { formData } = form\r\n\r\n  const handleChange = (e) => {\r\n    const { formData } = form\r\n    const updatedFormData = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    }\r\n    setForm({\r\n      ...form,\r\n      formData: updatedFormData,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    setForm({\r\n      ...form,\r\n      saving: true,\r\n    })\r\n    authStore\r\n      .post(shipmentCreateURL, form.formData)\r\n      .then((response) => {\r\n        setSent({\r\n          status: true,\r\n          message: \"Shipment details sent successfully!\",\r\n        })\r\n        setForm({\r\n          ...form,\r\n          saving: false,\r\n          formData: {\r\n            ...response.data,\r\n          },\r\n        })\r\n        setOrder({\r\n          ...order,\r\n          data: {\r\n            ...order.data,\r\n            status: \"Dispatched\",\r\n          },\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setError({\r\n          status: true,\r\n          message: \"Shipment detail creation failed!\",\r\n        })\r\n        setForm({\r\n          ...form,\r\n          saving: false,\r\n          error: error,\r\n        })\r\n      })\r\n  }\r\n\r\n  const handleComplete = () => {\r\n    setOrder({\r\n      ...order,\r\n      loading: true,\r\n    })\r\n    authStore\r\n      .patch(orderUpdateURL(id), { id: id, status: \"Completed\" })\r\n      .then((response) => {\r\n        setSent({\r\n          status: true,\r\n          message: \"Order status updated successfully!\",\r\n        })\r\n        setOrder({\r\n          data: response.data,\r\n          loading: false,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setError({\r\n          status: true,\r\n          message: \"Order status update failed!\",\r\n        })\r\n        setOrder({\r\n          ...order,\r\n          loading: false,\r\n          error: error,\r\n        })\r\n      })\r\n  }\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return\r\n    }\r\n\r\n    if (sent.status === true) {\r\n      setSent({\r\n        message: \"\",\r\n        status: false,\r\n      })\r\n    } else {\r\n      setError({\r\n        message: \"\",\r\n        status: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const renderItem = (item) => {\r\n    return (\r\n      <TableRow key={item.id}>\r\n        <TableCell align=\"left\">{item.item.title}</TableCell>\r\n        <TableCell align=\"left\">\r\n          {item.config\r\n            ? `${item.config.ram} RAM + ${item.config.storage}`\r\n            : \"N/A\"}\r\n        </TableCell>\r\n        <TableCell align=\"left\">{item.quantity}</TableCell>\r\n      </TableRow>\r\n    )\r\n  }\r\n\r\n  const renderShipment = () => {\r\n    return (\r\n      <List dense>\r\n        <ListItem>\r\n          <Typography variant=\"h5\" component=\"h5\">\r\n            Courier Details\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"shipment table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell style={{ fontWeight: 500 }}>\r\n                    Courier Name:\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{` ${form.formData.courier_name}`}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ fontWeight: 500 }}>\r\n                    Tracking Id:\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {` ${form.formData.tracking_id}`}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ fontWeight: 500 }}>\r\n                    Courier Website:\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{` ${form.formData.web_address}`}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </ListItem>\r\n      </List>\r\n    )\r\n  }\r\n\r\n  const renderForm = () => {\r\n    return (\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <Grid container justify=\"center\" spacing={2}>\r\n          <Grid container item xs={11} alignItems=\"start\" justify=\"flex-start\">\r\n            <Typography\r\n              component=\"p\"\r\n              variant=\"body1\"\r\n              style={{ fontWeight: 600 }}\r\n            >\r\n              Add Shipment Details:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"courierName\"\r\n              name=\"courier_name\"\r\n              label=\"Courier Name\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              value={formData.courier_name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"trackingId\"\r\n              name=\"tracking_id\"\r\n              label=\"Tracking Id\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              value={formData.tracking_id}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"webAddress\"\r\n              name=\"web_address\"\r\n              label=\"Web Address\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              value={formData.web_address}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            {form.saving ? (\r\n              <CircularProgress color=\"secondary\" />\r\n            ) : (\r\n              <CustomAlert\r\n                handleProcess={handleSubmit}\r\n                content={\r\n                  <React.Fragment>\r\n                    <p>Save the following shipment details?</p>\r\n                    {renderShipment()}\r\n                  </React.Fragment>\r\n                }\r\n                button=\"SAVE\"\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    )\r\n  }\r\n  const renderDetail = () => {\r\n    if (order.loading === true) {\r\n      return <CircularProgress />\r\n    } else if (order.data !== null) {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={12}>\r\n              <List>\r\n                <ListItem>\r\n                  <TableContainer component={Paper}>\r\n                    <Table aria-label=\"order table\">\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Order No:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {` ${order.data.id}`}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Ordered Date:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {` ${new Date(\r\n                              order.data.ordered_date\r\n                            ).toLocaleDateString(\"en-US\", {\r\n                              day: \"numeric\",\r\n                              month: \"short\",\r\n                              year: \"numeric\",\r\n                              hour: \"numeric\",\r\n                              minute: \"numeric\",\r\n                            })}`}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Username:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {` ${order.data.user.first_name} ${order.data.user.last_name}`}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Status:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {order.data.status}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography\r\n                        style={{ fontWeight: 600 }}\r\n                        variant=\"body1\"\r\n                        component=\"p\"\r\n                      >\r\n                        Items:\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <TableContainer component={Paper}>\r\n                    <Table aria-label=\"items table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Title</TableCell>\r\n                          <TableCell align=\"left\">Config</TableCell>\r\n                          <TableCell align=\"left\">Quantity</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {order.data.items.map((item) => renderItem(item))}\r\n                        <TableRow>\r\n                          <TableCell />\r\n                          <TableCell align=\"left\" style={{ fontWeight: 500 }}>\r\n                            Total Amount:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{` ${order.data.total} AED`}</TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </ListItem>\r\n              </List>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {form.formData.id !== \"\" && form.formData.id !== null\r\n                ? renderShipment()\r\n                : renderForm()}\r\n            </Grid>\r\n            {order.data.status === \"Dispatched\" ? (\r\n              <Grid item xs={12}>\r\n                {order.loading ? (\r\n                  <CircularProgress color=\"secondary\" />\r\n                ) : (\r\n                  <CustomAlert\r\n                    handleProcess={handleComplete}\r\n                    title=\"Complete Order\"\r\n                    content={<p>Set the order status as complete?</p>}\r\n                    button=\"COMPLETE ORDER\"\r\n                  />\r\n                )}\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Grid item xs={12}>\r\n              <Button\r\n                fullWidth\r\n                onClick={() => setState({ ...state, tab: \"Orders\" })}\r\n                variant=\"contained\"\r\n              >\r\n                Back\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      return <Typography>Error in fetching the data</Typography>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Order Detail</Title>\r\n      {renderDetail()}\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={sent.status}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n          {sent.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={error.status}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {error.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default OrderDetail\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Password.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Title.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\LogoutAlertDialog.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Layout.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Cart.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Address.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\ListItems.js",["356","357"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\"\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\"\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\"\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\"\r\nimport EmailIcon from \"@material-ui/icons/Email\"\r\nimport BuildIcon from \"@material-ui/icons/Build\"\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\"\r\n\r\nconst ListItems = ({ state, setState }) => {\r\n  return (\r\n    <div>\r\n      <ListItem button onClick={() => setState({ ...state, tab: \"Dashboard\" })}>\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      <ListItem button onClick={() => setState({ ...state, tab: \"Orders\" })}>\r\n        <ListItemIcon>\r\n          <ShoppingCartIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Orders\" />\r\n      </ListItem>\r\n      <ListItem button onClick={() => setState({ ...state, tab: \"Messages\" })}>\r\n        <ListItemIcon>\r\n          <EmailIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Messages\" />\r\n      </ListItem>\r\n      <ListItem button onClick={() => setState({ ...state, tab: \"Deposits\" })}>\r\n        <ListItemIcon>\r\n          <BarChartIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Deposits\" />\r\n      </ListItem>\r\n      <ListItem button onClick={() => setState({ ...state, tab: \"Discount\" })}>\r\n        <ListItemIcon>\r\n          <MoneyOffIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Discount\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        onClick={() => setState({ ...state, tab: \"Maintenance\" })}\r\n      >\r\n        <ListItemIcon>\r\n          <BuildIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Maintenance\" />\r\n      </ListItem>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListItems\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Deposits.js",["358"],"import React, {useState, useEffect} from 'react'\r\nimport { authStore } from '../../apis/store'\r\nimport { earningsURL } from '../../constants'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Title from './Title'\r\n\r\nexport default function Deposits() {\r\n    const [earnings, setEarnings] = useState({\r\n        loading: true,\r\n        error: null,\r\n        data: null\r\n    })\r\n    \r\n    useEffect(() => {\r\n        authStore.get(earningsURL('all'))\r\n        .then(response => {\r\n            setEarnings({\r\n                ...earnings,\r\n                loading: false,\r\n                data: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            setEarnings({\r\n                ...earnings,\r\n                error: error\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    const renderEarnings = () => {\r\n        if(earnings.loading === true) {\r\n            return <CircularProgress />\r\n        } else if(earnings.loading === false && earnings.data !== null) {\r\n            return (\r\n                <Typography component=\"p\" variant=\"h4\">\r\n                    {earnings.data.earnings} AED\r\n                </Typography>\r\n            )\r\n        } else {\r\n            return (\r\n                <Typography component=\"p\" variant=\"h4\">\r\n                    An error has occurred!\r\n                </Typography>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Total Earnings</Title>\r\n            {renderEarnings()}\r\n        </React.Fragment>\r\n    )\r\n}","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\CustomAlert.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\index.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\cartLocal.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\cartReducer.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\cart.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Home.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\SellerProduct.jsx",["359"],"import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  noSpace: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n}));\r\n\r\nconst SellerProduct = () => {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState({\r\n    error: null,\r\n    loading: true,\r\n    payload: null,\r\n  });\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    authStore\r\n      .get(\"/api/v1/getsellerproducts\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        setOrders({ ...orders, payload: response.data, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        setOrders({ ...orders, error: error.response, loading: false });\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return <CircularProgress />;\r\n    } else if (orders.error && orders.error.status === 500) {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          There was an error loading the data: ( &nbsp; {orders.error.data}{\" \"}\r\n        </Typography>\r\n      );\r\n    } else if (orders.payload !== null && orders.payload.length > 0) {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow className={classes.noSpace}>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell align=\"left\"> Title </TableCell>\r\n                <TableCell align=\"left\"> Price </TableCell>\r\n                <TableCell align=\"left\"> Brand </TableCell>\r\n                <TableCell align=\"left\"> Color </TableCell>\r\n                <TableCell align=\"left\"> Details </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.payload.map((item, i) => (\r\n                <TableRow\r\n                  key={orders.payload[i]._id}\r\n                  id={orders.payload[i]._id}\r\n                  className={classes.noSpace}\r\n                >\r\n                  <TableCell align=\"left\">{item.productType}</TableCell>\r\n                  <TableCell align=\"left\">{item.title}</TableCell>\r\n                  <TableCell align=\"left\">{item.price}</TableCell>\r\n                  <TableCell align=\"left\">{item.brand}</TableCell>\r\n                  <TableCell align=\"left\">{item.color}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.processorName} {item.ram} {item.storage}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    } else {\r\n      return <Typography variant=\"body1\">You haven't Post Products</Typography>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" component=\"h5\">\r\n        Your Products\r\n      </Typography>\r\n      <br />\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          {renderOrders()}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SellerProduct;\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\BuyerOrders.jsx",["360"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\ProfileList.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Orders.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Account.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\CheckoutStyles.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\ResetPassword.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\MyList.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\AdminRoute.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ProductList.js",["361"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { store } from \"../../apis/store\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport _ from \"lodash\";\r\nimport ScrollToTopOnMount from \"../ScrollToTopOnMount\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BreadCrumbs from \"../BreadCrumbs\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    grid: {\r\n      marginTop: theme.spacing(4),\r\n      display: \"none\",\r\n    },\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  list: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n  card: {\r\n    marginTop: theme.spacing(1),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  breadcrumbs: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  container: {\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProductList = (props) => {\r\n  const classes = useStyles();\r\n  const product_type = props.match.params.product;\r\n  const [state, setState] = useState({\r\n    products: [],\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n    list: {\r\n      brands: null,\r\n      processors: null,\r\n      screenSizes: null,\r\n      categories: null,\r\n    },\r\n    filters: [],\r\n    hideList: true,\r\n    loading: true,\r\n    sort: \"price\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    const ac = new AbortController();\r\n    return () => {\r\n      ac.abort();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    const getSpecialProducts = () => {\r\n      store\r\n        .get(\"/api/v1/params/products\", {\r\n          params: {\r\n            product_type: product_type,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          let products = response.data;\r\n          let count = Math.round(response.data.count / 10);\r\n          let next = response.data.next;\r\n          let previous = response.data.previous;\r\n\r\n          setState({\r\n            ...state,\r\n            products: products,\r\n            count: count,\r\n            next: next,\r\n            previous: previous,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            loading: false,\r\n          });\r\n        });\r\n    };\r\n    getSpecialProducts();\r\n    return () => {\r\n      ac.abort();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [state.filters, state.sort]);\r\n\r\n  const generateCards = () => {\r\n    if (state?.products?.length > 0) {\r\n      return state?.products?.map((product) => {\r\n        return (\r\n          <Grid\r\n            key={product._id}\r\n            item\r\n            align=\"center\"\r\n            xs={12}\r\n            sm={6}\r\n            lg={4}\r\n            md={4}\r\n            className={classes.card}\r\n          >\r\n            <ProductCard product={product} />\r\n          </Grid>\r\n        );\r\n      });\r\n    } else {\r\n      return <CircularProgress />;\r\n    }\r\n  };\r\n\r\n  const generateHeader = () => {\r\n    const heading =\r\n      product_type.charAt(0).toUpperCase() + product_type.slice(1);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"h1\" variant=\"h2\">\r\n            {product_type === \"Laptop\"\r\n              ? `${heading}s`\r\n              : `${heading.slice(0, 8)}ies`}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} container className={classes.breadcrumbs}>\r\n          <BreadCrumbs>\r\n            <Link to={`/products/${product_type}`}>{heading}</Link>\r\n          </BreadCrumbs>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      <Container maxWidth=\"lg\">\r\n        <Box component=\"div\" mb={{ md: 4 }}>\r\n          <Grid container spacing={2}>\r\n            {generateHeader()}\r\n          </Grid>\r\n        </Box>\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            lg={3}\r\n            className={state.hideList ? classes.grid : \"\"}\r\n          >\r\n            <Box component=\"div\" className={classes.list}></Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={12} lg={9}>\r\n            {state?.products?.length > 0 ? (\r\n              <React.Fragment>\r\n                <Grid container spacing={4} justify=\"flex-end\"></Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  className={classes.container}\r\n                >\r\n                  {state.loading ? (\r\n                    <Grid item xs={12}>\r\n                      <CircularProgress />\r\n                    </Grid>\r\n                  ) : (\r\n                    generateCards()\r\n                  )}\r\n                </Grid>\r\n              </React.Fragment>\r\n            ) : state.loading ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <Typography variant=\"h6\" component=\"p\">\r\n                No products available\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Ratings.js",["362","363"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\SpecificList.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\SideDrawer.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\NavList.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\Nav.js",["364"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\routes.js",["365","366"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Maintenance.js",["367"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\Hoc.js",[],{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","replacedBy":"371"},{"ruleId":"368","replacedBy":"372"},{"ruleId":"370","replacedBy":"373"},{"ruleId":"374","severity":1,"message":"375","line":111,"column":17,"nodeType":"376","messageId":"377","endLine":111,"endColumn":25},{"ruleId":"378","severity":1,"message":"379","line":117,"column":6,"nodeType":"380","endLine":117,"endColumn":8,"suggestions":"381"},{"ruleId":"374","severity":1,"message":"375","line":92,"column":17,"nodeType":"376","messageId":"377","endLine":92,"endColumn":25},{"ruleId":"378","severity":1,"message":"379","line":97,"column":6,"nodeType":"380","endLine":97,"endColumn":8,"suggestions":"382"},{"ruleId":"368","replacedBy":"383"},{"ruleId":"370","replacedBy":"384"},{"ruleId":"378","severity":1,"message":"385","line":115,"column":6,"nodeType":"380","endLine":115,"endColumn":21,"suggestions":"386"},{"ruleId":"378","severity":1,"message":"387","line":68,"column":6,"nodeType":"380","endLine":68,"endColumn":8,"suggestions":"388"},{"ruleId":"368","replacedBy":"389"},{"ruleId":"370","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":72,"column":20,"nodeType":"393","endLine":72,"endColumn":35},{"ruleId":"368","replacedBy":"394"},{"ruleId":"370","replacedBy":"395"},{"ruleId":"378","severity":1,"message":"396","line":51,"column":6,"nodeType":"380","endLine":51,"endColumn":8,"suggestions":"397"},{"ruleId":"378","severity":1,"message":"398","line":27,"column":6,"nodeType":"380","endLine":27,"endColumn":8,"suggestions":"399"},{"ruleId":"378","severity":1,"message":"400","line":82,"column":6,"nodeType":"380","endLine":82,"endColumn":8,"suggestions":"401"},{"ruleId":"378","severity":1,"message":"402","line":83,"column":6,"nodeType":"380","endLine":83,"endColumn":8,"suggestions":"403"},{"ruleId":"378","severity":1,"message":"404","line":109,"column":6,"nodeType":"380","endLine":109,"endColumn":8,"suggestions":"405"},{"ruleId":"374","severity":1,"message":"406","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":14},{"ruleId":"374","severity":1,"message":"407","line":10,"column":8,"nodeType":"376","messageId":"377","endLine":10,"endColumn":18},{"ruleId":"378","severity":1,"message":"408","line":31,"column":8,"nodeType":"380","endLine":31,"endColumn":10,"suggestions":"409"},{"ruleId":"374","severity":1,"message":"410","line":29,"column":9,"nodeType":"376","messageId":"377","endLine":29,"endColumn":14},{"ruleId":"378","severity":1,"message":"387","line":44,"column":6,"nodeType":"380","endLine":44,"endColumn":8,"suggestions":"411"},{"ruleId":"374","severity":1,"message":"412","line":5,"column":8,"nodeType":"376","messageId":"377","endLine":5,"endColumn":9},{"ruleId":"374","severity":1,"message":"413","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":15},{"ruleId":"374","severity":1,"message":"414","line":3,"column":10,"nodeType":"376","messageId":"377","endLine":3,"endColumn":20},{"ruleId":"374","severity":1,"message":"415","line":70,"column":7,"nodeType":"376","messageId":"377","endLine":70,"endColumn":17},{"ruleId":"374","severity":1,"message":"416","line":4,"column":8,"nodeType":"376","messageId":"377","endLine":4,"endColumn":18},{"ruleId":"374","severity":1,"message":"417","line":13,"column":8,"nodeType":"376","messageId":"377","endLine":13,"endColumn":17},{"ruleId":"378","severity":1,"message":"418","line":53,"column":8,"nodeType":"380","endLine":53,"endColumn":10,"suggestions":"419"},"no-native-reassign",["420"],"no-negated-in-lhs",["421"],["420"],["421"],"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["422"],["423"],["420"],["421"],"React Hook useEffect has missing dependencies: 'getOrders' and 'orders'. Either include them or remove the dependency array. You can also do a functional update 'setOrders(o => ...)' if you only need 'orders' in the 'setOrders' call.",["424"],"React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array. You can also do a functional update 'setOrders(o => ...)' if you only need 'orders' in the 'setOrders' call.",["425"],["420"],["421"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["420"],["421"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["426"],"React Hook useEffect has a missing dependency: 'message.id'. Either include it or remove the dependency array.",["427"],"React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["428"],"React Hook useEffect has missing dependencies: 'id' and 'order'. Either include them or remove the dependency array. You can also do a functional update 'setOrder(o => ...)' if you only need 'order' in the 'setOrder' call.",["429"],"React Hook useEffect has missing dependencies: 'form' and 'id'. Either include them or remove the dependency array. You can also do a functional update 'setForm(f => ...)' if you only need 'form' in the 'setForm' call.",["430"],"'Link' is defined but never used.","'AddBoxIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'earnings'. Either include it or remove the dependency array. You can also do a functional update 'setEarnings(e => ...)' if you only need 'earnings' in the 'setEarnings' call.",["431"],"'token' is assigned a value but never used.",["432"],"'_' is defined but never used.","'store' is defined but never used.","'ratingsURL' is defined but never used.","'updateCart' is assigned a value but never used.","'AdminRoute' is defined but never used.","'Dashboard' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["433"],"no-global-assign","no-unsafe-negation",{"desc":"434","fix":"435"},{"desc":"434","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"439","fix":"453"},{"desc":"454","fix":"455"},"Update the dependencies array to be: [dispatch]",{"range":"456","text":"457"},{"range":"458","text":"457"},"Update the dependencies array to be: [getOrders, orders, orders.status]",{"range":"459","text":"460"},"Update the dependencies array to be: [orders]",{"range":"461","text":"462"},"Update the dependencies array to be: [token]",{"range":"463","text":"464"},"Update the dependencies array to be: [message.id]",{"range":"465","text":"466"},"Update the dependencies array to be: [fetchMessages]",{"range":"467","text":"468"},"Update the dependencies array to be: [id, order]",{"range":"469","text":"470"},"Update the dependencies array to be: [form, id]",{"range":"471","text":"472"},"Update the dependencies array to be: [earnings]",{"range":"473","text":"474"},{"range":"475","text":"462"},"Update the dependencies array to be: [state]",{"range":"476","text":"477"},[3721,3723],"[dispatch]",[2937,2939],[3212,3227],"[getOrders, orders, orders.status]",[1913,1915],"[orders]",[1522,1524],"[token]",[837,839],"[message.id]",[2148,2150],"[fetchMessages]",[2289,2291],"[id, order]",[2835,2837],"[form, id]",[863,865],"[earnings]",[1476,1478],[1568,1570],"[state]"]