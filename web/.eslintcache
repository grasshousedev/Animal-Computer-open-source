[{"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\history.js":"1","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\theme.js":"2","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\routes.js":"3","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\Hoc.js":"4","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\authReducer.js":"5","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Layout.js":"6","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\Forgot.js":"7","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\UserProfile.js":"8","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\SignIn.js":"9","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Content.js":"10","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\Seller.jsx":"11","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\utils.js":"12","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\CookieConsent.js":"13","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Copyright.js":"14","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\Nav.js":"15","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\MessageDetail.js":"16","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Footer\\MessageForm.js":"17","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Deposits.js":"18","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Chart.js":"19","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Address.js":"20","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Payment.js":"21","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Password.js":"22","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Edit.js":"23","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\MyList.js":"24","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\CheckoutStyles.js":"25","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\AddressDeleteDialog.js":"26","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ReviewDialog.js":"27","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Orders.js":"28","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\Lists.jsx":"29","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\BuyerOrders.jsx":"30","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\index.js":"31","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\BackToTop.js":"32","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\PrivateRoute.js":"33","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Product.js":"34","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\ResetPassword.js":"35","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\cartLocal.js":"36","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\SpecificList.js":"37","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\LaptopForm\\LaptopForm.jsx":"38","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\Google.js":"39","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\ListItems.js":"40","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\OrderDetail.js":"41","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\Search.js":"42","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Title.js":"43","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\LogoutAlertDialog.js":"44","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\auth.js":"45","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\CartView.js":"46","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\AdminRoute.js":"47","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\SignUp.js":"48","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\ScrollToTopOnMount.js":"49","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\BreadCrumbs.js":"50","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Cart.js":"51","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Address.js":"52","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Maintenance.js":"53","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Messages.js":"54","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\AlertDialog.js":"55","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\cartReducer.js":"56","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Error.js":"57","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ProductList.js":"58","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\cart.js":"59","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Account.js":"60","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\ProfileList.js":"61","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Tab.js":"62","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Ratings.js":"63","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\NavList.js":"64","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Home.js":"65","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\AddressForm.js":"66","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Footer\\Footer.js":"67","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\CustomAlert.js":"68","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\types.js":"69","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\apis\\store.js":"70","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\AddedToCart.js":"71","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Orders.js":"72","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\index.js":"73","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Dashboard.js":"74","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\constants.js":"75","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\SideDrawer.js":"76","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Review.js":"77","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\setting.js":"78","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Discount.js":"79","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ProductCard.js":"80","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\SellerProduct.jsx":"81","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\App.js":"82","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Checkout.js":"83"},{"size":87,"mtime":1608072038000,"results":"84","hashOfConfig":"85"},{"size":409,"mtime":1622311526000,"results":"86","hashOfConfig":"85"},{"size":3010,"mtime":1640901735770,"results":"87","hashOfConfig":"85"},{"size":57,"mtime":1619733924000,"results":"88","hashOfConfig":"85"},{"size":710,"mtime":1639735024715,"results":"89","hashOfConfig":"85"},{"size":4628,"mtime":1640731308365,"results":"90","hashOfConfig":"85"},{"size":4712,"mtime":1622928274000,"results":"91","hashOfConfig":"85"},{"size":4502,"mtime":1640903004484,"results":"92","hashOfConfig":"93"},{"size":6656,"mtime":1640881305624,"results":"94","hashOfConfig":"93"},{"size":1650,"mtime":1622858716000,"results":"95","hashOfConfig":"85"},{"size":4779,"mtime":1640728614003,"results":"96","hashOfConfig":"93"},{"size":613,"mtime":1639682683745,"results":"97","hashOfConfig":"85"},{"size":2000,"mtime":1622875432000,"results":"98","hashOfConfig":"85"},{"size":779,"mtime":1622396934000,"results":"99","hashOfConfig":"85"},{"size":3828,"mtime":1640901753360,"results":"100","hashOfConfig":"93"},{"size":2477,"mtime":1622311552000,"results":"101","hashOfConfig":"85"},{"size":4241,"mtime":1623722600000,"results":"102","hashOfConfig":"85"},{"size":1595,"mtime":1618876166000,"results":"103","hashOfConfig":"85"},{"size":3113,"mtime":1622848462000,"results":"104","hashOfConfig":"85"},{"size":9288,"mtime":1640372340190,"results":"105","hashOfConfig":"85"},{"size":8268,"mtime":1622825514000,"results":"106","hashOfConfig":"85"},{"size":5568,"mtime":1640960761851,"results":"107","hashOfConfig":"85"},{"size":5040,"mtime":1640960849206,"results":"108","hashOfConfig":"85"},{"size":5378,"mtime":1618875948000,"results":"109","hashOfConfig":"85"},{"size":282,"mtime":1622311532000,"results":"110","hashOfConfig":"85"},{"size":2752,"mtime":1619048274000,"results":"111","hashOfConfig":"85"},{"size":5359,"mtime":1618875768000,"results":"112","hashOfConfig":"85"},{"size":4945,"mtime":1640612966958,"results":"113","hashOfConfig":"85"},{"size":1936,"mtime":1640609300667,"results":"114","hashOfConfig":"93"},{"size":4770,"mtime":1640959710319,"results":"115","hashOfConfig":"85"},{"size":563,"mtime":1640902634321,"results":"116","hashOfConfig":"85"},{"size":1765,"mtime":1619734314000,"results":"117","hashOfConfig":"93"},{"size":784,"mtime":1639757441770,"results":"118","hashOfConfig":"85"},{"size":17287,"mtime":1640455979493,"results":"119","hashOfConfig":"85"},{"size":6151,"mtime":1622330748000,"results":"120","hashOfConfig":"85"},{"size":2334,"mtime":1640456082431,"results":"121","hashOfConfig":"85"},{"size":2453,"mtime":1640189815647,"results":"122","hashOfConfig":"85"},{"size":16555,"mtime":1640962828226,"results":"123","hashOfConfig":"85"},{"size":2870,"mtime":1622762482000,"results":"124","hashOfConfig":"85"},{"size":2105,"mtime":1622854564000,"results":"125","hashOfConfig":"85"},{"size":14842,"mtime":1622848106000,"results":"126","hashOfConfig":"85"},{"size":7356,"mtime":1640893419262,"results":"127","hashOfConfig":"85"},{"size":371,"mtime":1608239580000,"results":"128","hashOfConfig":"93"},{"size":1977,"mtime":1619368540000,"results":"129","hashOfConfig":"85"},{"size":6230,"mtime":1640881231429,"results":"130","hashOfConfig":"85"},{"size":566,"mtime":1617863532000,"results":"131","hashOfConfig":"85"},{"size":1142,"mtime":1639408834076,"results":"132","hashOfConfig":"85"},{"size":9168,"mtime":1640880794414,"results":"133","hashOfConfig":"85"},{"size":184,"mtime":1622311554000,"results":"134","hashOfConfig":"85"},{"size":961,"mtime":1617863068000,"results":"135","hashOfConfig":"85"},{"size":13905,"mtime":1640732411724,"results":"136","hashOfConfig":"85"},{"size":10679,"mtime":1622499994000,"results":"137","hashOfConfig":"85"},{"size":5573,"mtime":1618876240000,"results":"138","hashOfConfig":"85"},{"size":4570,"mtime":1623902170000,"results":"139","hashOfConfig":"85"},{"size":1549,"mtime":1623030296000,"results":"140","hashOfConfig":"93"},{"size":689,"mtime":1623901790000,"results":"141","hashOfConfig":"85"},{"size":894,"mtime":1617856060000,"results":"142","hashOfConfig":"93"},{"size":14767,"mtime":1640795188967,"results":"143","hashOfConfig":"85"},{"size":945,"mtime":1640344926528,"results":"144","hashOfConfig":"85"},{"size":2179,"mtime":1639758172475,"results":"145","hashOfConfig":"85"},{"size":2141,"mtime":1640903006993,"results":"146","hashOfConfig":"85"},{"size":2468,"mtime":1640204187519,"results":"147","hashOfConfig":"85"},{"size":4338,"mtime":1622870584000,"results":"148","hashOfConfig":"85"},{"size":5295,"mtime":1640902601256,"results":"149","hashOfConfig":"93"},{"size":3576,"mtime":1640189873877,"results":"150","hashOfConfig":"93"},{"size":8734,"mtime":1640964234209,"results":"151","hashOfConfig":"85"},{"size":6339,"mtime":1623909746000,"results":"152","hashOfConfig":"93"},{"size":1476,"mtime":1622055354000,"results":"153","hashOfConfig":"85"},{"size":446,"mtime":1623901782000,"results":"154","hashOfConfig":"85"},{"size":636,"mtime":1639608820487,"results":"155","hashOfConfig":"85"},{"size":2660,"mtime":1623085638000,"results":"156","hashOfConfig":"85"},{"size":7480,"mtime":1640867333991,"results":"157","hashOfConfig":"85"},{"size":215,"mtime":1622763902000,"results":"158","hashOfConfig":"93"},{"size":7923,"mtime":1624398392000,"results":"159","hashOfConfig":"85"},{"size":2888,"mtime":1640950984545,"results":"160","hashOfConfig":"85"},{"size":2288,"mtime":1623023528000,"results":"161","hashOfConfig":"93"},{"size":5596,"mtime":1623719280000,"results":"162","hashOfConfig":"93"},{"size":445,"mtime":1640101565700,"results":"163","hashOfConfig":"85"},{"size":3826,"mtime":1624398706000,"results":"164","hashOfConfig":"85"},{"size":5921,"mtime":1640777219734,"results":"165","hashOfConfig":"85"},{"size":3941,"mtime":1640729106377,"results":"166","hashOfConfig":"85"},{"size":768,"mtime":1640902669598,"results":"167","hashOfConfig":"85"},{"size":10167,"mtime":1640351593155,"results":"168","hashOfConfig":"85"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5r5izf",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"189"},"11rhco2",{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"189"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"189"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"200"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"189"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"200"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"176"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"200"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"200"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"176"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"176"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"176"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"200"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"200"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"176"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"176"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"179"},"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\history.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\theme.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\routes.js",["357","358"],"import React from \"react\";\r\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport AdminRoute from \"./components/AdminRoute\";\r\n\r\nimport Hoc from \"./Hoc\";\r\nimport SignIn from \"./containers/Auth/SignIn\";\r\nimport SignUp from \"./containers/Auth/SignUp\";\r\nimport Forgot from \"./containers/Auth/Forgot\";\r\nimport Product from \"./components/Product/Product\";\r\nimport ProductList from \"./components/Product/ProductList\";\r\nimport ResetPassword from \"./containers/Auth/ResetPassword\";\r\nimport Dashboard from \"./containers/Admin/Dashboard\";\r\nimport Checkout from \"./containers/Checkout/Checkout\";\r\nimport UserProfile from \"./containers/Profile/UserProfile\";\r\nimport CartView from \"./containers/CartView\";\r\nimport Home from \"./containers/Home\";\r\nimport Content from \"./containers/Content\";\r\nimport Layout from \"./containers/Layout\";\r\nimport Error from \"./components/Error\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Seller from \"./containers/Seller/Seller\";\r\n\r\nconst BaseRouter = withRouter(({ location }) => {\r\n  const token = useSelector((state) => state.auth.token);\r\n  // console.log(token);\r\n  return (\r\n    <Hoc>\r\n      {/* {location.pathname !== \"/dashboard\" ? ( */}\r\n      <Layout>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/error\" exact component={Error} />\r\n          <Route path=\"/cart\" exact component={CartView} />\r\n          <Route\r\n            path=\"/products/:product\"\r\n            exact\r\n            render={(props) => (\r\n              <ProductList key={props.location.key} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/product/:slug\"\r\n            exact\r\n            render={(props) => <Product key={props.location.key} {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/page/:content\"\r\n            exact\r\n            render={(props) => <Content key={props.location.key} {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/reset/:uid/:token\"\r\n            exact\r\n            render={(props) => (\r\n              <ResetPassword key={props.location.key} {...props} />\r\n            )}\r\n          />\r\n          <PrivateRoute path=\"/checkout\" exact component={Checkout} />\r\n          <PrivateRoute path=\"/account\" exact component={UserProfile} />\r\n          {!token && (\r\n            <>\r\n              <Route path=\"/signin\" exact component={SignIn} />\r\n              <Route path=\"/signup\" exact component={SignUp} />\r\n              <Route path=\"/reset-password\" exact component={Forgot} />\r\n            </>\r\n          )}\r\n          {token?.seller && <Route path=\"/seller\" exact component={Seller} />}\r\n          <Route render={() => <Redirect to=\"/\" />} />\r\n        </Switch>\r\n      </Layout>\r\n      {/* ) : (\r\n        <React.Fragment>\r\n          <AdminRoute path=\"/dashboard\" exact component={Dashboard} />\r\n        </React.Fragment>\r\n      )} */}\r\n    </Hoc>\r\n  );\r\n});\r\n\r\nexport default BaseRouter;\r\n",["359","360"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\Hoc.js",[],["361","362"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Layout.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\Forgot.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\UserProfile.js",["363","364","365","366"],"import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport { userDetailsURL } from \"../../constants\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Edit from \"./Edit\";\r\nimport Account from \"./Account\";\r\nimport Orders from \"./Orders\";\r\nimport Address from \"./Address\";\r\nimport Password from \"./Password\";\r\nimport ProfileList from \"./ProfileList\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  div: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    width: \"100%\",\r\n  },\r\n  list: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UserProfile() {\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const [state, setState] = useState({\r\n    option: \"loading\",\r\n    display: \"Loading\",\r\n    error: null,\r\n    user: null,\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    // const getUser = () => {\r\n    //   authStore\r\n    //     .get(userDetailsURL)\r\n    //     .then((response) => {\r\n    //       setState({\r\n    //         option: \"account\",\r\n    //         display: \"Account Details\",\r\n    //         user: response.data,\r\n    //       })\r\n    //     })\r\n    //     .catch((error) => setState({ ...state, error: error, option: \"error\" }))\r\n    // }\r\n    setState({\r\n      option: \"account\",\r\n      display: \"Account Details\",\r\n      user: token,\r\n    });\r\n\r\n    // getUser()\r\n  }, []);\r\n\r\n  const renderComponent = () => {\r\n    switch (state.option) {\r\n      case \"account\":\r\n        return (\r\n          <React.Fragment>\r\n            <Account state={state} />\r\n          </React.Fragment>\r\n        );\r\n      case \"orders\":\r\n        return (\r\n          <React.Fragment>\r\n            <Orders />\r\n          </React.Fragment>\r\n        );\r\n      case \"edit\":\r\n        return (\r\n          <React.Fragment>\r\n            <Edit state={state} setState={setState} />\r\n          </React.Fragment>\r\n        );\r\n      // case \"address\":\r\n      //   return (\r\n      //     <React.Fragment>\r\n      //       {/* <Address user={state.user} /> */}\r\n      //       <Typography variant=\"h5\" component=\"h5\" >We Have Your Address</Typography>\r\n      //     </React.Fragment>\r\n      //   );\r\n      case \"password\":\r\n        return (  \r\n          <React.Fragment>\r\n            <Password state={state} />\r\n          </React.Fragment>\r\n        );\r\n      case \"loading\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant=\"body1\">Loading</Typography>\r\n            <CircularProgress color=\"primary\" />\r\n          </React.Fragment>\r\n        );\r\n      case \"error\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography component=\"p\" variant=\"body1\" color=\"error\">\r\n              An error occurred while fetching user details!\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        throw new Error(\"Unknown address\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ minHeight: \"100vh\", backgroundColor: \"white\" }}>\r\n        <CssBaseline />\r\n        <Grid container>\r\n          <Grid container item sm={12} justify=\"flex-start\">\r\n            <Box component=\"div\" mb={5} textAlign=\"left\">\r\n              <Typography variant=\"h2\" component=\"h2\">\r\n                User Profile / {state.display}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item sm={12} md={4}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-label=\"account action list\"\r\n              disablePadding\r\n              className={classes.list}\r\n            >\r\n              <ProfileList state={state} setState={setState} />\r\n            </List>\r\n          </Grid>\r\n          <Grid container item sm={12} md={8} justify=\"center\">\r\n            <Box component=\"div\" className={classes.div}>\r\n              {renderComponent()}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n",["367","368"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\SignIn.js",["369","370","371"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authLogin, authReset } from \"../../store/actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showError } from \"../../utils\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Copyright from \"../../components/Copyright\";\r\nimport Google from \"./Google\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  div: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MyCheckbox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nconst MyTextfield = ({ label, autoComplete, autoFocus, type, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n  return (\r\n    <TextField\r\n      margin=\"normal\"\r\n      fullWidth\r\n      autoComplete={autoComplete}\r\n      autoFocus={autoFocus}\r\n      label={label}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      type={type}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string()\r\n    .email(\"This must be a valid email\")\r\n    .required(\"Required\")\r\n    .max(254, \"Can't be more than 254 characters\"),\r\n  password: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"password should be 8 characters long\"),\r\n});\r\n\r\nconst SignInForm = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const status = useSelector((state) => state.auth);\r\n  // This error variable is for google login error\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(authReset());\r\n  }, []);\r\n\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const handleSubmit = ({ email, password }) => {\r\n    dispatch(authLogin(email, password, from));\r\n  };\r\n  // const handleSubmit = ({ email, password, remember }) => {\r\n  //   dispatch(authLogin(email, password, from, remember))\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {status.error ? (\r\n            <Typography variant=\"h5\" color=\"error\">\r\n              {showError(status.error)}\r\n            </Typography>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            // initialValues={{ email: \"\", password: \"\", remember: \"\" }}\r\n            validateOnChange={true}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({ values }) => (\r\n              <Form className={classes.form}>\r\n                <MyTextfield\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                />\r\n                <MyTextfield\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type={values.show_password ? \"text\" : \"password\"}\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                />\r\n                <MyCheckbox name=\"show_password\" label=\"Show password\" />\r\n                {/* <MyCheckbox label=\"Remember me\" name=\"remember\" /> */}\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  {status.loading ? (\r\n                    <CircularProgress color=\"secondary\" />\r\n                  ) : (\r\n                    \"Sign In\"\r\n                  )}\r\n                </Button>\r\n                {/* <Google\r\n                  from={from}\r\n                  remember={values.remember}\r\n                  setError={setError}\r\n                  error={error}\r\n                /> */}\r\n                {error && <FormHelperText error={true}>{error}</FormHelperText>}\r\n                <div className={classes.div}>\r\n                  <Grid container spacing={6}>\r\n                    <Grid item xs>\r\n                      <Link to=\"/reset-password\" variant=\"body2\">\r\n                        {\"Forgot password?\"}\r\n                      </Link>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Link to=\"/signup\">\r\n                        {\"Don't have an account? Sign Up\"}\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Content.js",["372"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\Seller.jsx",["373"],"import React, { useState, useEffect } from \"react\";\r\n// import { authStore } from \"../../apis/store\";\r\n// import { userDetailsURL } from \"../../constants\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// import Edit from \"./Edit\";\r\n// import Account from \"./Account\";\r\n// import Orders from \"./Orders\";\r\n// import Address from \"./Address\";\r\n// import Password from \"./Password\";\r\n// import ProfileList from \"../Profile/ProfileList\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Lists from \"./Lists\";\r\nimport BuyerOrders from \"./BuyerOrders\";\r\nimport LaptopForm from \"./LaptopForm/LaptopForm\";\r\nimport SellerProduct from \"./SellerProduct\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  div: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    width: \"100%\",\r\n  },\r\n  list: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UserProfile() {\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const [state, setState] = useState({\r\n    option: \"loading\",\r\n    display: \"Loading\",\r\n    error: null,\r\n    user: null,\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    // const getUser = () => {\r\n    //   authStore\r\n    //     .get(userDetailsURL)\r\n    //     .then((response) => {\r\n    //       setState({\r\n    //         option: \"account\",\r\n    //         display: \"Account Details\",\r\n    //         user: response.data,\r\n    //       })\r\n    //     })\r\n    //     .catch((error) => setState({ ...state, error: error, option: \"error\" }))\r\n    // }\r\n    setState({\r\n      option: \"buyerOrders\",\r\n      display: \"Buyer Orders\",\r\n      user: token,\r\n    });\r\n\r\n    // getUser()\r\n  }, []);\r\n\r\n  const renderComponent = () => {\r\n    switch (state.option) {\r\n      case \"buyerOrders\":\r\n        return (\r\n          <React.Fragment>\r\n            {/* <Account state={state} /> <h1>Buyer Orders</h1> */}\r\n            <BuyerOrders />\r\n          </React.Fragment>\r\n        );\r\n      case \"sellLaptop\":\r\n        return (\r\n          <React.Fragment>\r\n            {/* <Orders /> <h1>Sell Laptop</h1> */}\r\n            <LaptopForm />\r\n          </React.Fragment>\r\n        );\r\n      case \"sellAccessories\":\r\n        return (\r\n          <React.Fragment>\r\n            {/* <Edit state={state} setState={setState} /> */}{\" \"}\r\n            <Typography variant=\"h5\" component=\"h5\">\r\n              Sell Accessories\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n\r\n      case \"sellerProduct\":\r\n        return (\r\n          <React.Fragment>\r\n            {/* <Password state={state} /> <h1>Your Products</h1> */}\r\n            <SellerProduct />\r\n          </React.Fragment>\r\n        );\r\n      case \"loading\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant=\"body1\">Loading</Typography>\r\n            <CircularProgress color=\"primary\" />\r\n          </React.Fragment>\r\n        );\r\n      case \"error\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography component=\"p\" variant=\"body1\" color=\"error\">\r\n              An error occurred while fetching user details!\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        throw new Error(\"Unknown address\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ minHeight: \"100vh\", backgroundColor: \"white\" }}>\r\n        <CssBaseline />\r\n        <Grid container>\r\n          <Grid container item sm={12} justify=\"flex-start\">\r\n            <Box component=\"div\" mb={5} textAlign=\"left\">\r\n              <Typography variant=\"h2\" component=\"h2\">\r\n                Seller / {state.display}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item sm={12} md={4}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-label=\"account action list\"\r\n              disablePadding\r\n              className={classes.list}\r\n            >\r\n              <Lists state={state} setState={setState} />\r\n            </List>\r\n          </Grid>\r\n          <Grid container item sm={12} md={8} justify=\"center\">\r\n            <Box component=\"div\" className={classes.div}>\r\n              {renderComponent()}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\utils.js",[],["374","375"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\CookieConsent.js",["376"],"import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Cookies from \"js-cookie\"\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nconst CookieConsent = () => {\r\n  const [state, setState] = useState({\r\n    visible: false,\r\n    acceptOnScrollPercentage: 25,\r\n  })\r\n\r\n  const handleAccept = () => {\r\n    Cookies.set(\"AlamalConsentCookies\", \"Given\", { expires: 365 })\r\n    setState({\r\n      ...state,\r\n      visible: false,\r\n    })\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    const rootNode = document.documentElement || document.body\r\n\r\n    if (rootNode) {\r\n      const percentage =\r\n        (rootNode.scrollTop / (rootNode.scrollHeight - rootNode.clientHeight)) *\r\n        100\r\n\r\n      if (percentage > state.acceptOnScrollPercentage) {\r\n        handleAccept()\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll)\r\n\r\n    if (Cookies.get(\"AlamalConsentCookies\") === undefined) {\r\n      setState({\r\n        ...state,\r\n        visible: true,\r\n      })\r\n    }\r\n    return () => window.removeEventListener(\"scroll\", handleScroll)\r\n  }, [])\r\n\r\n  const action = (\r\n    <Button color=\"secondary\" size=\"small\" key=\"accept\" onClick={handleAccept}>\r\n      Accept\r\n    </Button>\r\n  )\r\n\r\n  const message = (\r\n    <React.Fragment>\r\n      <Typography varaint=\"subtitle1\" component=\"p\">\r\n        This site uses cookies to improve the user experience.\r\n      </Typography>\r\n      <Link to=\"/page/cookies\" target=\"_blank\" style={{ color: \"white\" }}>\r\n        <Typography varaint=\"subtitle1\" component=\"p\">\r\n          Read cookie policy\r\n        </Typography>\r\n      </Link>\r\n    </React.Fragment>\r\n  )\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n      open={state.visible}\r\n      message={message}\r\n      action={action}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CookieConsent\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Copyright.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\Nav.js",["377"],"import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { getCart } from \"../../cartLocal\"\r\n\r\nimport SideDrawer from \"./SideDrawer\"\r\nimport NavList from \"./NavList\"\r\nimport Search from \"./Search\"\r\nimport weblogo from \"../../logo.png\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Hidden from \"@material-ui/core/Hidden\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Badge from \"@material-ui/core/Badge\"\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navDisplayFlex: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(1),\r\n    paddingLeft: \"20px\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  logo: {\r\n    maxHeight: 60,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      maxHeight: 50,\r\n    },\r\n  },\r\n  logoButton: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: 0,\r\n      margin: 0,\r\n    },\r\n  },\r\n  div: {\r\n    color: \"#E5E5E5\",\r\n    textTransform: \"none\",\r\n  },\r\n  first: {\r\n    fontSize: \"0.90rem\",\r\n  },\r\n  second: {\r\n    fontSize: \"0.50rem\",\r\n  },\r\n}))\r\n\r\nconst Nav = () => {\r\n  const classes = useStyles()\r\n  const token = localStorage.getItem(\"token\")\r\n  let cart = useSelector((state) =>\r\n    state.cart && state.cart.shoppingCart ? state.cart.shoppingCart.items : null\r\n  )\r\n  // Only for updating upon fetch cart\r\n  let updateCart = useSelector((state) => state.cart)\r\n  if (!token) {\r\n    cart = getCart()\r\n  }\r\n\r\n  return (\r\n    <div className=\"NavBar\" style={{ marginBottom: \"100px\" }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar className={classes.navDisplayFlex}>\r\n          <Link to=\"/\" className={classes.linkText}>\r\n            <Box className={classes.box} component=\"div\">\r\n              <img\r\n                className={classes.logo}\r\n                alt=\"Site logo\"\r\n                src={weblogo}\r\n              />\r\n              <div className={classes.div}>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color=\"secondary\"\r\n                  className={classes.first}\r\n                >\r\n                  ALAMAL COMPUTERS\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" className={classes.second}>\r\n                  Computers and Mobile Phones Trading\r\n                </Typography>\r\n              </div>\r\n            </Box>\r\n          </Link>\r\n\r\n          <Hidden lgUp>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Link to=\"/cart\">\r\n                <IconButton>\r\n                  <Badge\r\n                    badgeContent={cart ? cart.length : null}\r\n                    color=\"secondary\"\r\n                  >\r\n                    <ShoppingCartOutlinedIcon style={{ color: \"white\" }} />\r\n                  </Badge>\r\n                </IconButton>\r\n              </Link>\r\n              <SideDrawer />\r\n            </div>\r\n          </Hidden>\r\n          <Hidden mdDown>\r\n            <div className={classes.navDisplayFlex}>\r\n              <Search />\r\n              <NavList cart={cart} />\r\n            </div>\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\MessageDetail.js",["378"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Footer\\MessageForm.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Deposits.js",["379"],"import React, {useState, useEffect} from 'react'\r\nimport { authStore } from '../../apis/store'\r\nimport { earningsURL } from '../../constants'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Title from './Title'\r\n\r\nexport default function Deposits() {\r\n    const [earnings, setEarnings] = useState({\r\n        loading: true,\r\n        error: null,\r\n        data: null\r\n    })\r\n    \r\n    useEffect(() => {\r\n        authStore.get(earningsURL('all'))\r\n        .then(response => {\r\n            setEarnings({\r\n                ...earnings,\r\n                loading: false,\r\n                data: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            setEarnings({\r\n                ...earnings,\r\n                error: error\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    const renderEarnings = () => {\r\n        if(earnings.loading === true) {\r\n            return <CircularProgress />\r\n        } else if(earnings.loading === false && earnings.data !== null) {\r\n            return (\r\n                <Typography component=\"p\" variant=\"h4\">\r\n                    {earnings.data.earnings} AED\r\n                </Typography>\r\n            )\r\n        } else {\r\n            return (\r\n                <Typography component=\"p\" variant=\"h4\">\r\n                    An error has occurred!\r\n                </Typography>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Total Earnings</Title>\r\n            {renderEarnings()}\r\n        </React.Fragment>\r\n    )\r\n}","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Chart.js",["380"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Address.js",["381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport { useButtonStyles } from \"./CheckoutStyles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   listItem: {\r\n//     padding: theme.spacing(1, 0),\r\n//   },\r\n//   total: {\r\n//     fontWeight: 700,\r\n//   },\r\n//   title: {\r\n//     marginTop: theme.spacing(2),\r\n//   },\r\n// }))\r\n\r\nexport default function Address() {\r\n  //   {\r\n  //   checkoutState,\r\n  //   setCheckoutState,\r\n  //   options,\r\n  //   user,\r\n  //   checkoutData,\r\n  //   setCheckoutData,\r\n  // }\r\n  // const buttonClasses = useButtonStyles();\r\n\r\n  // const formRef = useRef(null)\r\n  // const [state, setState] = useState({\r\n  //   error: null,\r\n  //   saving: false,\r\n  //   success: false,\r\n  //   options: null,\r\n  //   formData: {\r\n  //     id: \"\",\r\n  //     user: \"\",\r\n  //     first_name: \"\",\r\n  //     last_name: \"\",\r\n  //     phone_number: \"\",\r\n  //     address_type: \"Shipping\",\r\n  //     street_address: \"\",\r\n  //     apartment_address: \"\",\r\n  //     city: \"\",\r\n  //     state: \"\",\r\n  //     country: \"UAE\",\r\n  //     zip: \"\",\r\n  //     is_default: true,\r\n  //   },\r\n  // })\r\n\r\n  // const firstItem = {\r\n  //   id: \"\",\r\n  //   user: \"\",\r\n  //   first_name: \"\",\r\n  //   last_name: \"\",\r\n  //   phone_number: \"\",\r\n  //   address_type: \"Shipping\",\r\n  //   street_address: \"\",\r\n  //   apartment_address: \"\",\r\n  //   city: \"\",\r\n  //   state: \"\",\r\n  //   country: \"Pak\",\r\n  //   zip: \"\",\r\n  //   is_default: true,\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   if (user) {\r\n  //     setState({\r\n  //       ...state,\r\n  //       formData: {\r\n  //         ...state.formData,\r\n  //         first_name: user.first_name,\r\n  //         last_name: user.last_name,\r\n  //         phone_number: user.phone_number || \"\",\r\n  //         user: user.id,\r\n  //       },\r\n  //     })\r\n  //   }\r\n  // }, [user])\r\n\r\n  // useEffect(() => {\r\n  //   window.scrollTo(0, 0)\r\n  //   if (options) {\r\n  //     const addresses = options.filter(\r\n  //       (item) => item.address_type === \"Shipping\"\r\n  //     )\r\n  //     if (!checkoutData.shippingDetail) {\r\n  //       if (addresses && addresses.length >= 1) {\r\n  //         const defaultAddress = addresses.find(\r\n  //           (element) => element.is_default === true\r\n  //         )\r\n  //         if (defaultAddress || defaultAddress !== undefined) {\r\n  //           setState({\r\n  //             ...state,\r\n  //             options: addresses,\r\n  //             formData: {\r\n  //               ...state.formData,\r\n  //               ...defaultAddress,\r\n  //             },\r\n  //           })\r\n  //         } else {\r\n  //           setState({\r\n  //             ...state,\r\n  //             options: addresses,\r\n  //             formData: {\r\n  //               ...state.formData,\r\n  //               ...addresses[0],\r\n  //             },\r\n  //           })\r\n  //         }\r\n  //       }\r\n  //     } else {\r\n  //       setState({\r\n  //         ...state,\r\n  //         options: addresses,\r\n  //         formData: {\r\n  //           ...checkoutData.shippingDetail,\r\n  //         },\r\n  //       })\r\n  //     }\r\n  //   } else {\r\n  //     if (checkoutData.shippingDetail) {\r\n  //       setState({\r\n  //         ...state,\r\n  //         formData: {\r\n  //           ...checkoutData.shippingDetail,\r\n  //         },\r\n  //       })\r\n  //     }\r\n  //   }\r\n  // }, [options])\r\n\r\n  // const handleSelect = (e) => {\r\n  //   if (e.target.value === \"i\") {\r\n  //     setState({\r\n  //       ...state,\r\n  //       formData: {\r\n  //         ...firstItem,\r\n  //       },\r\n  //     })\r\n  //   } else {\r\n  //     const selectedObject = state.options.find(\r\n  //       (obj) => obj.id === e.target.value\r\n  //     )\r\n  //     setState({\r\n  //       ...state,\r\n  //       formData: {\r\n  //         ...selectedObject,\r\n  //       },\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // const handleCheckout = (data) => {\r\n  //   if (checkoutState.useBilling === true) {\r\n  //     let billingData = {\r\n  //       ...data,\r\n  //       id: \"\",\r\n  //       address_type: \"Billing\",\r\n  //     }\r\n  //     setCheckoutData({\r\n  //       ...checkoutData,\r\n  //       shippingDetail: data,\r\n  //       billingDetail: billingData,\r\n  //       selectedShippingAddress: data.id,\r\n  //     })\r\n  //   } else {\r\n  //     setCheckoutData({\r\n  //       ...checkoutData,\r\n  //       shippingDetail: data,\r\n  //       selectedShippingAddress: data.id,\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // const handleNext = () => {\r\n  //   const values = formRef.current.submitForm()\r\n  //   values.then((response) => {\r\n  //     handleCheckout(response)\r\n  //     setCheckoutState({\r\n  //       ...checkoutState,\r\n  //       activeStep: checkoutState.activeStep + 1,\r\n  //     })\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <AddressForm />\r\n        </Grid>\r\n      </Grid>\r\n      {/* <List disablePadding>\r\n          {products.map((product) => (\r\n            <ListItem className={classes.listItem} key={product.id}>\r\n              <ListItemText\r\n                primary={<React.Fragment>{product.item.title}</React.Fragment>}\r\n              />\r\n              <Typography variant=\"body2\">\r\n                {product.quantity} x {getPrice(product)} AED\r\n              </Typography>\r\n            </ListItem>\r\n          ))}\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemText\r\n              primary={\r\n                <Typography variant=\"subtitle1\" className={classes.total}>\r\n                  Shipping\r\n                </Typography>\r\n              }\r\n            />\r\n            <Typography variant=\"subtitle1\">{shipping} AED</Typography>\r\n          </ListItem>\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemText\r\n              primary={\r\n                <Typography variant=\"subtitle1\" className={classes.total}>\r\n                  Total\r\n                </Typography>\r\n              }\r\n            />\r\n            <Typography variant=\"subtitle1\">{total} AED</Typography>\r\n          </ListItem>\r\n        </List> \r\n       <Grid item xs={12}>\r\n        <Typography variant=\"body1\" component=\"p\" color=\"primary\">\r\n          An error occurred while fetching addresses\r\n        </Typography>\r\n      </Grid> \r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Address\r\n      </Typography> \r\n      <Grid container spacing={3}>\r\n        {/* {state.error && (\r\n          <Typography variant=\"body1\" component=\"p\" color=\"error\">\r\n            An error occurred while fetching addresses.\r\n          </Typography>\r\n        )} \r\n        {state.options && state.options.length > 0 ? (\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel shrink id=\"select-address\">\r\n                Saved Addresses\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"select-address\"\r\n                value={state.formData.id}\r\n                onChange={handleSelect}\r\n              >\r\n                <MenuItem key={\"\" + Math.random()} value={\"i\"}>\r\n                  Create New\r\n                </MenuItem>\r\n                {state.options.map((address) => {\r\n                  return (\r\n                    <MenuItem key={address.id} value={address.id}>\r\n                      {address.street_address}\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        ) : (\r\n          \"\"\r\n        )} \r\n        <Grid item xs={12}>\r\n          {/* <AddressForm address={state.formData} formRef={formRef} /> \r\n          <AddressForm />\r\n        </Grid>\r\n         <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"secondary\"\r\n                name=\"use_billing\"\r\n                checked={\r\n                  checkoutState.useBilling ? checkoutState.useBilling : false\r\n                }\r\n              />\r\n            }\r\n            label=\"Use the same address for billing?\"\r\n            onChange={() => {\r\n              setCheckoutState({\r\n                ...checkoutState,\r\n                useBilling: !checkoutState.useBilling,\r\n              })\r\n            }}\r\n          />\r\n        </Grid> \r\n        <Grid item xs={12}></Grid> \r\n         <Grid item xs={12}>\r\n          <div className={buttonClasses.buttons}>\r\n            <Button\r\n              // onClick={handleNext}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={buttonClasses.button}\r\n            >\r\n              submit\r\n            </Button>\r\n          </div>\r\n        </Grid> \r\n      </Grid>*/}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Payment.js",["396","397"],"import React, { useState, useEffect, useRef } from \"react\"\r\nimport { useButtonStyles } from \"./CheckoutStyles\"\r\nimport AddressForm from \"./AddressForm\"\r\n\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport FormLabel from \"@material-ui/core/FormControl\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\r\nimport Radio from \"@material-ui/core/Radio\"\r\n\r\nexport default function Payment({\r\n  checkoutState,\r\n  setCheckoutState,\r\n  options,\r\n  user,\r\n  checkoutData,\r\n  setCheckoutData,\r\n}) {\r\n  const buttonClasses = useButtonStyles()\r\n  const formRef = useRef(null)\r\n  const [state, setState] = useState({\r\n    error: null,\r\n    saving: false,\r\n    success: false,\r\n    options: null,\r\n    formData: {\r\n      id: \"\",\r\n      user: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      phone_number: \"\",\r\n      address_type: \"Billing\",\r\n      street_address: \"\",\r\n      apartment_address: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n      zip: \"\",\r\n      is_default: true,\r\n    },\r\n  })\r\n\r\n  const firstItem = {\r\n    id: \"\",\r\n    user: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    phone_number: \"\",\r\n    address_type: \"Billing\",\r\n    street_address: \"\",\r\n    apartment_address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    country: \"\",\r\n    zip: \"\",\r\n    is_default: true,\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setState({\r\n        ...state,\r\n        formData: {\r\n          ...state.formData,\r\n          first_name: user.first_name,\r\n          last_name: user.last_name,\r\n          phone_number: user.phone_number,\r\n          user: user.id,\r\n        },\r\n      })\r\n    }\r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    if (options) {\r\n      const addresses = options.filter(\r\n        (item) => item.address_type === \"Billing\"\r\n      )\r\n      if (checkoutData.billingDetail === null) {\r\n        if (addresses && addresses.length >= 1) {\r\n          const defaultAddress = addresses.find(\r\n            (element) => element.is_default === true\r\n          )\r\n          if (defaultAddress) {\r\n            setState({\r\n              ...state,\r\n              options: addresses,\r\n              formData: {\r\n                ...state.formData,\r\n                ...defaultAddress,\r\n              },\r\n            })\r\n          } else {\r\n            setState({\r\n              ...state,\r\n              options: addresses,\r\n              formData: {\r\n                ...state.formData,\r\n                ...addresses[0],\r\n              },\r\n            })\r\n          }\r\n        }\r\n      } else {\r\n        setState({\r\n          ...state,\r\n          options: addresses,\r\n          formData: {\r\n            ...checkoutData.billingDetail,\r\n          },\r\n        })\r\n      }\r\n    } else {\r\n      if (checkoutData.billingDetail) {\r\n        setState({\r\n          ...state,\r\n          formData: {\r\n            ...checkoutData.billingDetail,\r\n          },\r\n        })\r\n      }\r\n    }\r\n  }, [options])\r\n\r\n  const handleCheckout = (billingData) => {\r\n    if (checkoutState.useBilling === false) {\r\n      setCheckoutData({\r\n        ...checkoutData,\r\n        billingDetail: billingData,\r\n        selectedBillingAddress: billingData.id,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSelect = (e) => {\r\n    if (e.target.value === \"i\") {\r\n      setState({\r\n        ...state,\r\n        formData: {\r\n          ...firstItem,\r\n        },\r\n      })\r\n    } else {\r\n      const selectedObject = state.options.find(\r\n        (obj) => obj.id === e.target.value\r\n      )\r\n      setState({\r\n        ...state,\r\n        formData: {\r\n          ...selectedObject,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleNext = () => {\r\n    if (checkoutState.useBilling === false) {\r\n      let billingData = null\r\n      const values = formRef.current.submitForm()\r\n      values.then((response) => {\r\n        billingData = response\r\n        handleCheckout(billingData)\r\n        setCheckoutState({\r\n          ...checkoutState,\r\n          activeStep: checkoutState.activeStep + 1,\r\n        })\r\n      })\r\n    } else {\r\n      setCheckoutState({\r\n        ...checkoutState,\r\n        activeStep: checkoutState.activeStep + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  const renderPayment = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Payment method\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                border: \"1px solid black\",\r\n                borderRadius: \"5px\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Payment Option:</FormLabel>\r\n                <RadioGroup\r\n                  aria-label=\"paymentOption\"\r\n                  name=\"paymentOption1\"\r\n                  value={\"cod\"}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"cod\"\r\n                    control={<Radio />}\r\n                    label=\"Cash on Delivery\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </div>\r\n          </Grid>\r\n          {checkoutState.useBilling === true ? (\r\n            \"\"\r\n          ) : (\r\n            <React.Fragment>\r\n              {state.options && state.options.length > 0 ? (\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel shrink id=\"select-address\">\r\n                      Saved Addresses\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"select-address\"\r\n                      id=\"select-address-label\"\r\n                      value={state.formData.id}\r\n                      onChange={handleSelect}\r\n                    >\r\n                      <MenuItem key={\"\" + Math.random()} value={\"i\"}>\r\n                        {\"Create New\"}\r\n                      </MenuItem>\r\n                      {state.options.map((address) => {\r\n                        return (\r\n                          <MenuItem key={address.id} value={address.id}>\r\n                            {address.street_address}\r\n                          </MenuItem>\r\n                        )\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Billing Address\r\n                </Typography>\r\n              </Grid>\r\n              {state.error && (\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"body1\" component=\"p\" color=\"error\">\r\n                    An error occurred while fetching addresses\r\n                  </Typography>\r\n                </Grid>\r\n              )}\r\n              <Grid item xs={12}>\r\n                <AddressForm address={state.formData} formRef={formRef} />\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <div className={buttonClasses.buttons}>\r\n              <Button\r\n                onClick={() =>\r\n                  setCheckoutState({\r\n                    ...checkoutState,\r\n                    activeStep: checkoutState.activeStep - 1,\r\n                  })\r\n                }\r\n                className={buttonClasses.button}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                onClick={handleNext}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={buttonClasses.button}\r\n              >\r\n                Next\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  return <React.Fragment>{renderPayment()}</React.Fragment>\r\n}\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Password.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Edit.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\MyList.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\CheckoutStyles.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\AddressDeleteDialog.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ReviewDialog.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Orders.js",["398"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\Lists.jsx",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\BuyerOrders.jsx",["399"],"import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  noSpace: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n}));\r\nconst BuyerOrders = () => {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState({\r\n    error: null,\r\n    loading: true,\r\n    payload: null,\r\n  });\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    authStore\r\n      .get(\"/api/v1/getclientorders\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setOrders({ ...orders, payload: response.data, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        setOrders({ ...orders, error: error.response, loading: false });\r\n        // console.log(error.response.status);\r\n        // console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return <CircularProgress />;\r\n    } else if (orders.error && orders.error.status === 500) {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          There was an error loading the data: ( &nbsp; {orders.error.data}{\" \"}\r\n        </Typography>\r\n      );\r\n    } else if (orders.payload !== null && orders.payload.length > 0) {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow className={classes.noSpace}>\r\n                <TableCell>Client Name</TableCell>\r\n                <TableCell align=\"left\"> Phone Number </TableCell>\r\n                <TableCell align=\"left\"> Delivery Address </TableCell>\r\n                <TableCell align=\"left\"> Google Pin Location </TableCell>\r\n                <TableCell align=\"left\"> Products </TableCell>\r\n                <TableCell align=\"left\"> Quantity </TableCell>\r\n                <TableCell align=\"left\"> Total </TableCell>\r\n                <TableCell align=\"left\">Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.payload.map((item, i) => (\r\n                <TableRow\r\n                  key={orders.payload[i]._id}\r\n                  id={orders.payload[i]._id}\r\n                  className={classes.noSpace}\r\n                >\r\n                  <TableCell align=\"left\">\r\n                    {item.firstName} {item.lastName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{item.phoneNumber}</TableCell>\r\n                  <TableCell align=\"left\">{item.deliveryAddress}</TableCell>\r\n                  <TableCell align=\"left\">{item.googleLocation}</TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart\r\n                      .filter((element) => element.authorId === token.id)\r\n                      .map((params) => `${params.title}, `)}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart\r\n                      .filter((element) => element.authorId === token.id)\r\n                      .map((params) => `${params.quantity}, `)}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart\r\n                      .filter((element) => element.authorId === token.id)\r\n                      .map((params) => `${params.price} $ `)}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <strong>{item.status}</strong>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    } else {\r\n      return <Typography variant=\"body1\">You haven't got any order</Typography>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" component=\"h5\">\r\n        Buyer Orders\r\n      </Typography>\r\n      <br />\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          {renderOrders()}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BuyerOrders;\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\index.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\BackToTop.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\PrivateRoute.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Product.js",["400","401","402","403","404","405"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { store, authStore } from \"../../apis/store\";\r\nimport { addToCartURL } from \"../../constants\";\r\nimport { fetchCart } from \"../../store/actions/cart\";\r\nimport { createCartItem } from \"../../cartLocal\";\r\nimport BreadCrumbs from \"../BreadCrumbs\";\r\nimport AlertDialog from \"./AlertDialog\";\r\nimport AddedToCart from \"./AddedToCart\";\r\nimport Slider from \"infinite-react-carousel\";\r\nimport history from \"../../history\";\r\nimport Cart from \"../../containers/Cart\";\r\n\r\nimport ProductTab from \"./Tab\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { showError } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    maxWidth: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  slider: {\r\n    maxHeight: \"400px\",\r\n  },\r\n  discount: {\r\n    textDecoration: \"line-through\",\r\n    color: theme.palette.grey[600],\r\n  },\r\n  addToCart: {\r\n    paddingTop: theme.spacing(2),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Product(props) {\r\n  // console.log(props.match.params.slug);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  let cart = useSelector((state) => state.cart);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [state, setState] = useState({\r\n    product: null,\r\n    price: null,\r\n    discountPrice: null,\r\n    option: null,\r\n    error: null,\r\n  });\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialog, setDialog] = useState({\r\n    render: false,\r\n  });\r\n\r\n  console.log(\"State: \", state);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    const getProduct = () => {\r\n      store\r\n        .get(\r\n          \"/api/v1/product\",\r\n          {\r\n            params: props.match.params.slug,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setState({\r\n              ...state,\r\n              product: response.data,\r\n              option: response.data._id,\r\n              price: response.data.price,\r\n              discountPrice: response.data.discountPrice,\r\n            });\r\n          } else {\r\n            setState({\r\n              ...state,\r\n              product: response.data,\r\n              option: 0,\r\n              price: response.data.price,\r\n              discountPrice: response.data.discountPrice,\r\n            });\r\n            if (response.data.quantity > 0) {\r\n              setDisabled(false);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setState({ ...state, error });\r\n        });\r\n    };\r\n    getProduct();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleDisabled = () => {\r\n      if (state.product) {\r\n        // if (state.product.productType === \"Accessory\") {\r\n        //   state.product.quantity > 0 ? setDisabled(false) : setDisabled(true);\r\n        // } else\r\n        if (state.product.productType === \"Laptop\") {\r\n          // if (state.product.config.length > 0) {\r\n          //   const answer = state.product.config.find(\r\n          //     (element) => element.id === parseInt(state.option)\r\n          //   );\r\n          //   if (answer && answer.quantity > 0) {\r\n          //     setDisabled(false);\r\n          //   }\r\n          // if (state.product > 0) {\r\n          // const answer = state.option;\r\n          // if (answer && answer.quantity > 0) {\r\n          // if (answer > 0) {\r\n          if (state.option) {\r\n            setDisabled(false);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    handleDisabled();\r\n    // eslint-disable-next-line\r\n  }, [state.option]);\r\n\r\n  // Slider\r\n  const generateImages = () => {\r\n    if (state.product.imageURL1) {\r\n      return [\r\n        state.product.imageURL1,\r\n        state.product.imageURL2,\r\n        state.product.imageURL3,\r\n        state.product.imageURL4,\r\n      ].map((image, id) => (\r\n        <img key={id} className={classes.img} src={image} alt=\"Product\" />\r\n      ));\r\n    } else {\r\n      return (\r\n        <img\r\n          className={classes.img}\r\n          src={\"/static/assets/image-missing-icon.png\"}\r\n          alt=\"missing product\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n  const simpleSlider = () => (\r\n    <Slider dots className={classes.slider}>\r\n      {generateImages()}\r\n    </Slider>\r\n  );\r\n\r\n  const generateDetails = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary={\r\n              <Typography variant=\"h6\">\r\n                Processor:\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                  {` ${state.product.processorName} ${\r\n                    state.product.processorDetail\r\n                      ? state.product.processorDetail\r\n                      : \"\"\r\n                  }`}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary={\r\n              <Typography variant=\"h6\">\r\n                Display:\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                  {` ${state.product.display} ${\r\n                    state.product.displayDetails\r\n                      ? state.product.displayDetails\r\n                      : \"\"\r\n                  }`}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n          />\r\n        </ListItem>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  // const handleChange = (e) => {\r\n  // const config = state.product.config.find(\r\n  //   (element) => element.id === parseInt(e.target.value)\r\n  // );\r\n  // setState({\r\n  //   ...state,\r\n  //   option: parseInt(e.target.value),\r\n  //   price: config.price,\r\n  //   discount_price: config.discount_price,\r\n  // });\r\n  // };\r\n\r\n  const renderConfigs = () => {\r\n    if (state.product) {\r\n      // if (state.product) {\r\n      return (\r\n        <ListItem>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Configurations</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"config\"\r\n              name=\"config\"\r\n              // value={parseInt(state.option)}\r\n              value={state.option}\r\n              // onChange={handleChange}\r\n            >\r\n              {state.product.ram ? (\r\n                <React.Fragment>\r\n                  {/* {state.product.config.map((config) => { */}\r\n                  {/* return ( */}\r\n                  <FormControlLabel\r\n                    value={state.option}\r\n                    control={\r\n                      <Radio\r\n                      // disabled=\"false\"\r\n                      />\r\n                    }\r\n                    label={`${state.product.ram} RAM + ${state.product.storage} STORAGE`}\r\n                    key={state.option}\r\n                  />\r\n                  {/* ); */}\r\n                  {/* })} */}\r\n                </React.Fragment>\r\n              ) : (\r\n                \"Out of Stock\"\r\n              )}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </ListItem>\r\n      );\r\n      // }\r\n      // else {\r\n      //   const config = state.product.config[0];\r\n      //   return (\r\n      //     <ListItem>\r\n      //       <FormControl component=\"fieldset\">\r\n      //         <FormLabel component=\"legend\">Configurations</FormLabel>\r\n      //         <RadioGroup\r\n      //           aria-label=\"config\"\r\n      //           name=\"config\"\r\n      //           value={state.option}\r\n      //           onChange={handleChange}\r\n      //         >\r\n      //           <FormControlLabel\r\n      //             value={config.id}\r\n      //             control={\r\n      //               <Radio disabled={config.quantity === 0 ? true : false} />\r\n      //             }\r\n      //             label={`${config.ram} RAM + ${config.storage} STORAGE`}\r\n      //           />\r\n      //         </RadioGroup>\r\n      //       </FormControl>\r\n      //     </ListItem>\r\n      //   );\r\n      // }\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const renderPrice = (discountPrice, price) => {\r\n    return (\r\n      <React.Fragment>\r\n        {discountPrice ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\">\r\n              <Box\r\n                fontWeight=\"fontWeightBold\"\r\n                fontSize=\"1.25rem\"\r\n                component=\"span\"\r\n              >\r\n                Price:{\" \"}\r\n              </Box>{\" \"}\r\n              {discountPrice} AED &nbsp;\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.discount}>\r\n              {price} AED\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            <Box\r\n              fontWeight=\"fontWeightBold\"\r\n              fontSize=\"1.25rem\"\r\n              component=\"span\"\r\n            >\r\n              Price:{\" \"}\r\n            </Box>\r\n            {price} AED\r\n          </Typography>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  // Cart Section\r\n\r\n  const renderDialog = () => {\r\n    const onCheckout = () => {\r\n      setDialog({\r\n        render: false,\r\n      });\r\n      history.push(\"/checkout\");\r\n    };\r\n\r\n    const onDismiss = () => {\r\n      setDialog({\r\n        render: false,\r\n      });\r\n    };\r\n    return (\r\n      <AlertDialog\r\n        content={<Cart onDismiss={onDismiss} />}\r\n        handleDone={onCheckout}\r\n        handleDismiss={onDismiss}\r\n        title={\"Cart\"}\r\n        action=\"\"\r\n        dismiss=\"\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const addToCart = (slug) => {\r\n    // const token = localStorage.getItem(\"token\");\r\n    // if (token) {\r\n    // if (token) {\r\n    // authStore\r\n    //   .post(addToCartURL, { slug, config: state.option })\r\n    //   .then((res) => {\r\n    //     dispatch(fetchCart());\r\n    // if (window.screen.width > 960) {\r\n    //   setDialog({\r\n    //     render: true,\r\n    //   });\r\n    // } else {\r\n    //   setDialogOpen(true);\r\n    // }\r\n    // })\r\n    // .catch((err) => {\r\n    // if (\r\n    //   cart !== null &&\r\n    //   cart.shoppingCart !== undefined &&\r\n    //   cart.shoppingCart.items.length > 0\r\n    // ) {\r\n    //   setDialog({ render: true });\r\n    // }\r\n    // setState({ ...state, error: err });\r\n    // setOpen(true);\r\n    // });\r\n    // } else {\r\n    createCartItem(state.product, state.option);\r\n    if (window.screen.width > 960) {\r\n      setDialog({\r\n        render: true,\r\n      });\r\n    } else {\r\n      setDialogOpen(true);\r\n    }\r\n    // dispatch(fetchCart());\r\n    // }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const renderProduct = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Box py={3}>\r\n          <BreadCrumbs>\r\n            <Link to={`/products/${state.product.productType}`}>\r\n              {state.product.productType.charAt(0).toUpperCase() +\r\n                state.product.productType.slice(1)}\r\n            </Link>\r\n            <Link to={`/product/${props.match.params.slug}`}>\r\n              {state.product.title}\r\n            </Link>\r\n          </BreadCrumbs>\r\n        </Box>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3} lg={4}>\r\n            {simpleSlider()}\r\n          </Grid>\r\n          <Grid item xs={12} sm={9} lg={8}>\r\n            <List dense>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"h2\" component=\"h1\">\r\n                      {state.product.title}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n\r\n              {/* {state.product.part_number ? (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"subtitle1\" component=\"p\">\r\n                        <span style={{ fontWeight: 500 }}>Model:</span>\r\n                        {` ${state.product.part_number}`}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n              <ListItem>\r\n                <Rating\r\n                  name=\"read-only\"\r\n                  // value={state.product.rating.average}\r\n                  value={0}\r\n                  readOnly\r\n                  precision={0.5}\r\n                />\r\n                {/* <span>({state.product.rating.length})</span> */}\r\n                <span>({0})</span>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={renderPrice(state.discountPrice, state.price)}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"body1\" component=\"p\">\r\n                      {state.product.description}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n\r\n              {state.product.color ? (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"h6\">\r\n                        Color:\r\n                        <Typography variant=\"body1\" component=\"span\">\r\n                          {` ${state.product.color}`}\r\n                        </Typography>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {state.product && state.product.productType === \"Laptop\"\r\n                ? generateDetails()\r\n                : \"\"}\r\n              {state.product && state.product.productType === \"Laptop\"\r\n                ? renderConfigs()\r\n                : \"\"}\r\n              <Divider variant=\"middle\" />\r\n              <ListItem>\r\n                <div className={classes.addToCart}>\r\n                  {state.product.quantity === 0 ? (\r\n                    <Typography variant=\"subtitle1\" component=\"p\">\r\n                      Out of stock\r\n                    </Typography>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => addToCart(state.option)}\r\n                    disabled={disabled}\r\n                    className={classes.selector}\r\n                  >\r\n                    Add To Cart\r\n                  </Button>\r\n                </div>\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={4}>\r\n          <ProductTab\r\n            // productID={state.product.id}\r\n            productID={state.option}\r\n            productTitle={state.product.title}\r\n            description={state.product.description}\r\n            manufacturer_url={state.product.manufacturer_url}\r\n          />\r\n        </Box>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <AddedToCart open={dialogOpen} setOpen={setDialogOpen} />\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={open}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {showError(state.error)}\r\n          </Alert>\r\n        </Snackbar>\r\n        {dialog.render ? renderDialog() : \"\"}\r\n        {state.product ? (\r\n          renderProduct()\r\n        ) : state.error ? (\r\n          <Typography varaint=\"body1\" component=\"p\" color=\"error\">\r\n            Error in fetching the data\r\n          </Typography>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\ResetPassword.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\cartLocal.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\SpecificList.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\LaptopForm\\LaptopForm.jsx",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\Google.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\ListItems.js",["406","407"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\OrderDetail.js",["408","409"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\Search.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Title.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\LogoutAlertDialog.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\auth.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\CartView.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\AdminRoute.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Auth\\SignUp.js",["410","411","412"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authSignup, authReset } from \"../../store/actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showError } from \"../../utils\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Google from \"./Google\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  div: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MyCheckbox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nconst MyTextField = ({ label, autoComplete, autoFocus, type, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  return (\r\n    <TextField\r\n      margin=\"normal\"\r\n      fullWidth\r\n      label={label}\r\n      autoFocus={autoFocus}\r\n      autoComplete={autoComplete}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      type={type}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  firstName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\")\r\n    .min(3, \"First name should be at least 3 characters long\"),\r\n  lastName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\")\r\n    .min(3, \"Last name should be at least 3 characters long\"),\r\n  email: Yup.string()\r\n    .email(\"This must be a valid email\")\r\n    .required(\"Required\")\r\n    .max(254, \"Can't be more than 254 characters\"),\r\n  phoneNumber: Yup.string()\r\n    .required(\"Required\")\r\n    .min(10, \"Phone number should be atleast of 11 numbers \"),\r\n  address: Yup.string()\r\n    .required(\"Required\")\r\n    .min(18, \"Can't be less than 18 characters\"),\r\n  password1: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Must be at least 8 characters long\")\r\n    .matches(\r\n      /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must have at least one number, one lowercase and one uppercase letter\"\r\n    ),\r\n  password2: Yup.string().oneOf(\r\n    [Yup.ref(\"password1\"), null],\r\n    \"Passwords must match\"\r\n  ),\r\n});\r\n\r\nconst SignUpForm = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const status = useSelector((state) => state.auth);\r\n  const [error, setError] = useState(null);\r\n  const { from } = location.state || { from: { pathname: \"/signin\" } };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(authReset());\r\n  }, []);\r\n\r\n  const handleSubmit = ({\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    phoneNumber,\r\n    address,\r\n    password1,\r\n    password2,\r\n    seller,\r\n  }) => {\r\n    dispatch(\r\n      authSignup(\r\n        email,\r\n        password1,\r\n        password2,\r\n        firstName,\r\n        lastName,\r\n        phoneNumber,\r\n        address,\r\n        from,\r\n        seller\r\n      )\r\n    );\r\n    console.log(\r\n      email,\r\n      password1,\r\n      password2,\r\n      firstName,\r\n      lastName,\r\n      phoneNumber,\r\n      address,\r\n      from,\r\n      seller\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {status.error ? (\r\n            <Typography variant=\"h5\" color=\"error\">\r\n              {showError(status.error)}\r\n            </Typography>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Formik\r\n            onSubmit={handleSubmit}\r\n            validationSchema={validationSchema}\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              phoneNumber: \"\",\r\n              address: \"\",\r\n              password1: \"\",\r\n              password2: \"\",\r\n              seller: false,\r\n            }}\r\n          >\r\n            {({ values }) => (\r\n              <Form className={classes.form}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextField\r\n                      autoComplete=\"fname\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"\r\n                      label=\"First Name\"\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextField\r\n                      id=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      name=\"lastName\"\r\n                      autoComplete=\"lname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      id=\"phoneNumber\"\r\n                      label=\"Phone Number\"\r\n                      name=\"phoneNumber\"\r\n                      type=\"number\"\r\n                      autoComplete=\"phoneNumber\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      type=\"text\"\r\n                      id=\"address\"\r\n                      label=\"Your Address\"\r\n                      name=\"address\"\r\n                      autoComplete=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      name=\"password1\"\r\n                      label=\"Password\"\r\n                      type={values.show_password ? \"text\" : \"password\"}\r\n                      id=\"password1\"\r\n                      autoComplete=\"current-password\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      name=\"password2\"\r\n                      label=\"Password(again)\"\r\n                      type={values.show_password ? \"text\" : \"password\"}\r\n                      id=\"password2\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyCheckbox name=\"show_password\" label=\"Show password\" />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyCheckbox name=\"seller\" label=\"Sign up as a seller\" />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  {status.loading ? (\r\n                    <CircularProgress color=\"secondary\" />\r\n                  ) : (\r\n                    \"Sign Up\"\r\n                  )}\r\n                </Button>\r\n                {/* <Google\r\n                  from={from}\r\n                  setError={setError}\r\n                  remember={values.remember}\r\n                  error={error}\r\n                /> */}\r\n                {error && <FormHelperText error={true}>{error}</FormHelperText>}\r\n                <div className={classes.div}>\r\n                  <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                      <Link to=\"/signin\">Already have an account? Sign in</Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\ScrollToTopOnMount.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\BreadCrumbs.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Cart.js",["413","414","415","416","417","418"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Address.js",["419"],"import React, { useState, useEffect, useRef } from \"react\"\r\nimport _ from \"lodash\"\r\n\r\nimport { authStore } from \"../../apis/store\"\r\nimport {\r\n  addressURL,\r\n  addressCreateURL,\r\n  addressUpdateURL,\r\n  addressDeleteURL,\r\n} from \"../../constants\"\r\nimport { showError } from \"../../utils\"\r\nimport AddressForm from \"../Checkout/AddressForm\"\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport AddressDeleteDialog from \"./AddressDeleteDialog\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport FormLabel from \"@material-ui/core/FormLabel\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport Radio from \"@material-ui/core/Radio\"\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nconst Address = ({ user }) => {\r\n  const classes = useStyles()\r\n\r\n  const formRef = useRef(null)\r\n  const [state, setState] = useState({\r\n    error: null,\r\n    saving: false,\r\n    success: false,\r\n    edit: false,\r\n    create: false,\r\n    addresses: null,\r\n    formData: {\r\n      id: \"\",\r\n      user: user.id,\r\n      first_name: user.first_name,\r\n      last_name: user.last_name,\r\n      phone_number: user.phone_number || \"\",\r\n      address_type: \"Shipping\",\r\n      street_address: \"\",\r\n      apartment_address: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      country: \"UAE\",\r\n      zip: \"\",\r\n      is_default: false,\r\n    },\r\n  })\r\n\r\n  const onCreateSubmit = () => {\r\n    const values = formRef.current.submitForm()\r\n    values.then((data) => {\r\n      authStore\r\n        .post(addressCreateURL, data)\r\n        .then((response) => {\r\n          setState({\r\n            ...state,\r\n            success: true,\r\n            saving: false,\r\n            create: false,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            error: error,\r\n          })\r\n        })\r\n    })\r\n  }\r\n\r\n  const handleEditAddress = (address) => {\r\n    setState({\r\n      ...state,\r\n      edit: true,\r\n      formData: address,\r\n    })\r\n  }\r\n\r\n  const onEditSubmit = () => {\r\n    const values = formRef.current.submitForm()\r\n    values.then((data) => {\r\n      authStore\r\n        .patch(addressUpdateURL(data.id), data)\r\n        .then((response) => {\r\n          setState({\r\n            ...state,\r\n            success: true,\r\n            saving: false,\r\n            edit: false,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            error: error,\r\n          })\r\n        })\r\n    })\r\n  }\r\n\r\n  const onDelete = (id) => {\r\n    setState({ ...state, saving: true })\r\n    authStore\r\n      .delete(addressDeleteURL(id))\r\n      .then((response) => {\r\n        setState({ ...state, saving: false })\r\n      })\r\n      .catch((error) => setState({ ...state, saving: false, error: error }))\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({\r\n      ...state,\r\n      formData: {\r\n        ...formRef.current.values,\r\n        address_type: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getAddresses = async () => {\r\n      const response = await authStore.get(addressURL)\r\n      setState({\r\n        ...state,\r\n        addresses: response.data,\r\n      })\r\n    }\r\n    getAddresses()\r\n  }, [state.saving, state.edit, state.create])\r\n\r\n  const renderAddress = (item) => {\r\n    return (\r\n      <TableRow key={item.id}>\r\n        <TableCell align=\"left\">{`${item.apartment_address} ${item.street_address}`}</TableCell>\r\n        <TableCell align=\"left\">{item.address_type}</TableCell>\r\n        <TableCell align=\"right\">\r\n          <IconButton onClick={() => handleEditAddress(item)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          <AddressDeleteDialog onDelete={() => onDelete(item.id)} />\r\n        </TableCell>\r\n      </TableRow>\r\n    )\r\n  }\r\n\r\n  const renderComponents = () => {\r\n    if (state.edit === true) {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">Edit Address</Typography>\r\n            <AddressForm formRef={formRef} address={state.formData} />\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel componenet=\"legend\" className={classes.formLabel}>\r\n                Address Type\r\n              </FormLabel>\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                name=\"address_type\"\r\n                value={state.formData.address_type}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Shipping\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Shipping\"\r\n                  labelPlacement=\"top\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Billing\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Billing\"\r\n                  labelPlacement=\"top\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <Button\r\n              fullWidth\r\n              className={classes.submit}\r\n              onClick={onEditSubmit}\r\n              variant=\"contained\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            className={classes.submit}\r\n            onClick={() =>\r\n              setState({\r\n                ...state,\r\n                edit: false,\r\n                formData: {\r\n                  ...state.formData,\r\n                  id: \"\",\r\n                  address_type: \"Shipping\",\r\n                  street_address: \"\",\r\n                  apartment_address: \"\",\r\n                  city: \"\",\r\n                  state: \"\",\r\n                  country: \"\",\r\n                  zip: \"\",\r\n                  is_default: false,\r\n                },\r\n              })\r\n            }\r\n            variant=\"contained\"\r\n          >\r\n            Back\r\n          </Button>\r\n        </React.Fragment>\r\n      )\r\n    } else if (state.create === true) {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">Create Address</Typography>\r\n            <AddressForm formRef={formRef} address={state.formData} />\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel componenet=\"legend\" className={classes.formLabel}>\r\n                Address Type\r\n              </FormLabel>\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                name=\"address_type\"\r\n                value={state.formData.address_type}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Shipping\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Shipping\"\r\n                  labelPlacement=\"top\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Billing\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Billing\"\r\n                  labelPlacement=\"top\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <Button\r\n              fullWidth\r\n              className={classes.submit}\r\n              onClick={onCreateSubmit}\r\n              variant=\"contained\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            className={classes.submit}\r\n            onClick={() => setState({ ...state, create: false })}\r\n            variant=\"contained\"\r\n          >\r\n            Back\r\n          </Button>\r\n        </React.Fragment>\r\n      )\r\n    } else if (!_.isEmpty(state.addresses)) {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid item xs={12}>\r\n            {_.isEmpty(state.addresses) ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <React.Fragment>\r\n                <TableContainer component={Paper}>\r\n                  <Table className={classes.table} aria-label=\"spanning table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Address</TableCell>\r\n                        <TableCell align=\"left\">Address Type</TableCell>\r\n                        <TableCell />\r\n                        <TableCell />\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {state.addresses.map((item) => renderAddress(item))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </React.Fragment>\r\n            )}\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            color=\"primary\"\r\n            onClick={() => setState({ ...state, create: true })}\r\n          >\r\n            Create a new Address\r\n          </Button>\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid item xs={12}>\r\n            No addresses added yet.\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            color=\"primary\"\r\n            onClick={() => setState({ ...state, create: true })}\r\n          >\r\n            Create a new Address\r\n          </Button>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      {state.error ? (\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body1\" component=\"p\" color=\"error\">\r\n            {showError(state.error)}\r\n          </Typography>\r\n        </Grid>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {renderComponents()}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Address\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Maintenance.js",["420"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Messages.js",["421"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\AlertDialog.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\cartReducer.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Error.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ProductList.js",["422","423","424","425","426","427","428","429","430","431","432","433","434","435"],"import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { store, productApi } from \"../../apis/store\"\r\nimport {\r\n  brandsURL,\r\n  specialURL,\r\n  filterURL,\r\n  processorsURL,\r\n  displaysURL,\r\n  categoriesURL,\r\n} from \"../../constants\"\r\nimport ProductCard from \"./ProductCard\"\r\nimport _ from \"lodash\"\r\nimport ScrollToTopOnMount from \"../ScrollToTopOnMount\"\r\n\r\nimport MyList from \"../MyList\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Hidden from \"@material-ui/core/Hidden\"\r\nimport BreadCrumbs from \"../BreadCrumbs\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport { Box, FormControl, InputLabel, Typography } from \"@material-ui/core\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    grid: {\r\n      marginTop: theme.spacing(4),\r\n      display: \"none\",\r\n    },\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  list: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n  card: {\r\n    marginTop: theme.spacing(1),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  breadcrumbs: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  container: {\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  },\r\n}))\r\n\r\nconst ProductList = (props) => {\r\n  const classes = useStyles()\r\n  const product_type = props.match.params.product\r\n  // console.log(product_type)\r\n  const [state, setState] = useState({\r\n    products: [],\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n    list: {\r\n      brands: null,\r\n      processors: null,\r\n      screenSizes: null,\r\n      categories: null,\r\n    },\r\n    filters: [],\r\n    hideList: true,\r\n    loading: true,\r\n    sort: \"price\",\r\n  })\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const fetchItems = (url) => {\r\n    let products = null\r\n    let count = 1\r\n    let next = null\r\n    let previous = null\r\n    setState({ ...state, loading: true })\r\n    store\r\n      .get(url, {\r\n        params: {\r\n          ordering: state.sort,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        products = response.data.results\r\n        count = Math.round(response.data.count / 10)\r\n        next = response.data.next\r\n        previous = response.data.previous\r\n        setState({\r\n          ...state,\r\n          products: products,\r\n          count: count,\r\n          next: next,\r\n          previous: previous,\r\n          loading: false,\r\n        })\r\n      })\r\n      .catch((error) => setState({ ...state, loading: false }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    const ac = new AbortController()\r\n\r\n    let brands = null\r\n    let processors = null\r\n    let displays = null\r\n    let categories = null\r\n\r\n    const getLaptopFilters = () => {\r\n      store\r\n        .get(brandsURL(product_type))\r\n        .then((response) => {\r\n          brands = response.data.brands\r\n          processors = []\r\n          displays = []\r\n\r\n          return store.get(processorsURL)\r\n        })\r\n        .then((response) => {\r\n          for (let item in response.data) {\r\n            processors.push(response.data[item].name)\r\n          }\r\n          return store.get(displaysURL)\r\n        })\r\n        .then((response) => {\r\n          for (let item in response.data) {\r\n            displays.push(response.data[item].name)\r\n          }\r\n          return store.get(specialURL, {\r\n            params: {\r\n              product_type: product_type,\r\n              ordering: state.sort,\r\n            },\r\n          })\r\n        })\r\n        .then((response) => {\r\n          let products = response.data.results\r\n          let count = Math.round(response.data.count / 10)\r\n          let next = response.data.next\r\n          let previous = response.data.previous\r\n\r\n          setState({\r\n            ...state,\r\n            products: products,\r\n            count: count,\r\n            next: next,\r\n            previous: previous,\r\n            loading: false,\r\n            list: {\r\n              brands: brands,\r\n              processors: processors,\r\n              screenSizes: displays,\r\n            },\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            loading: false,\r\n          })\r\n        })\r\n    }\r\n\r\n    const getAccessoryFilters = () => {\r\n      store\r\n        .get(brandsURL(product_type))\r\n        .then((response) => {\r\n          brands = response.data.brands\r\n          categories = []\r\n          return store.get(categoriesURL)\r\n        })\r\n        .then((response) => {\r\n          for (let item in response.data) {\r\n            categories.push(response.data[item].name)\r\n          }\r\n          return store.get(specialURL, {\r\n            params: {\r\n              product_type: product_type,\r\n              ordering: state.sort,\r\n            },\r\n          })\r\n        })\r\n        .then((response) => {\r\n          let products = response.data.results\r\n          let count = Math.round(response.data.count / 10)\r\n          let next = response.data.next\r\n          let previous = response.data.previous\r\n\r\n          setState({\r\n            ...state,\r\n            products: products,\r\n            count: count,\r\n            next: next,\r\n            previous: previous,\r\n            loading: false,\r\n            list: {\r\n              ...state.list,\r\n              brands: brands,\r\n              categories: categories,\r\n            },\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            loading: false,\r\n          })\r\n        })\r\n    }\r\n\r\n    if (product_type === \"Laptop\") {\r\n      getLaptopFilters()\r\n    } else {\r\n      getAccessoryFilters()\r\n    }\r\n\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController()\r\n\r\n    const getSpecialProducts = () => {\r\n      store\r\n        // .get(specialURL, {\r\n        .get(\"/api/v1/params/products\", {\r\n          params: {\r\n            product_type: product_type,\r\n            // ordering: state.sort,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          let products = response.data\r\n          let count = Math.round(response.data.count / 10)\r\n          let next = response.data.next\r\n          let previous = response.data.previous\r\n\r\n          setState({\r\n            ...state,\r\n            products: products,\r\n            count: count,\r\n            next: next,\r\n            previous: previous,\r\n            loading: false,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            loading: false,\r\n          })\r\n        })\r\n    }\r\n      getSpecialProducts();\r\n\r\n    // const getProducts = () => {\r\n    //   let products = null\r\n    //   let count = 1\r\n    //   let next = null\r\n    //   let previous = null\r\n    //   if (Object.keys(state.filters).length > 0) {\r\n    //     let params = {\r\n    //       processors: [],\r\n    //       screenSizes: [],\r\n    //       categories: [],\r\n    //       brands: [],\r\n    //     }\r\n    //     for (const key in state.filters) {\r\n    //       if (state.filters[key] !== false) {\r\n    //         if (product_type === \"Laptop\") {\r\n    //           if (state.list.processors.includes(key)) {\r\n    //             params.processors.push(key)\r\n    //           } else if (state.list.screenSizes.includes(key)) {\r\n    //             params.screenSizes.push(key)\r\n    //           } else {\r\n    //             params.brands.push(key)\r\n    //           }\r\n    //         } else {\r\n    //           if (state.list.categories.includes(key)) {\r\n    //             params.categories.push(key)\r\n    //           } else {\r\n    //             params.brands.push(key)\r\n    //           }\r\n    //         }\r\n    //       } else {\r\n    //         delete state.filters[key]\r\n    //       }\r\n    //     }\r\n    //     setState({\r\n    //       ...state,\r\n    //       loading: true,\r\n    //     })\r\n    //     if (_.isEmpty(state.filters)) {\r\n    //       getSpecialProducts()\r\n    //     } else {\r\n    //       productApi\r\n    //         .get(filterURL, {\r\n    //           params: {\r\n    //             ...params,\r\n    //             ordering: state.sort,\r\n    //           },\r\n    //         })\r\n    //         .then((response) => {\r\n    //           products = response.data.results\r\n    //           count = Math.round(response.data.count / 10)\r\n    //           next = response.data.next\r\n    //           previous = response.data.previous\r\n    //           setState({\r\n    //             ...state,\r\n    //             products: products,\r\n    //             count: count,\r\n    //             next: next,\r\n    //             previous: previous,\r\n    //             loading: false,\r\n    //           })\r\n    //         })\r\n    //         .catch((error) => setState({ ...state, loading: false }))\r\n    //     }\r\n    //   } else {\r\n    //     getSpecialProducts()\r\n    //   }\r\n    // }\r\n\r\n    // getProducts()\r\n\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [state.filters, state.sort])\r\n\r\n  const generateCards = () => {\r\n    if (state?.products?.length > 0) {\r\n      return state?.products?.map((product) => {\r\n        return (\r\n          <Grid\r\n            key={product._id}\r\n            item\r\n            align=\"center\"\r\n            xs={12}\r\n            sm={6}\r\n            lg={4}\r\n            md={4}\r\n            className={classes.card}\r\n          >\r\n            <ProductCard product={product} />\r\n          </Grid>\r\n        )\r\n      })\r\n    } else {\r\n      return <CircularProgress />\r\n    }\r\n  }\r\n\r\n  const generateHeader = () => {\r\n    const heading = product_type.charAt(0).toUpperCase() + product_type.slice(1)\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"h1\" variant=\"h2\">\r\n            {product_type === \"Laptop\"\r\n              ? `${heading}s`\r\n              : `${heading.slice(0, 8)}ies`}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} container className={classes.breadcrumbs}>\r\n          <BreadCrumbs>\r\n            <Link to={`/products/${product_type}`}>{heading}</Link>\r\n          </BreadCrumbs>\r\n        </Grid>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value > page) {\r\n      setPage(value)\r\n      fetchItems(state.next)\r\n    } else if (value < page) {\r\n      setPage(value)\r\n      fetchItems(state.previous)\r\n    } else {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const handleSort = (event) => {\r\n    setState({\r\n      ...state,\r\n      sort: event.target.value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      <Container maxWidth=\"lg\">\r\n        <Box component=\"div\" mb={{ md: 4 }}>\r\n          <Grid container spacing={2}>\r\n            {generateHeader()}\r\n          </Grid>\r\n        </Box>\r\n        <Grid container>\r\n          {/* <Hidden lgUp>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                onClick={() =>\r\n                  setState({ ...state, hideList: !state.hideList })\r\n                }\r\n              >\r\n                Filters\r\n              </Button>\r\n            </Grid>\r\n          </Hidden> */}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            lg={3}\r\n            className={state.hideList ? classes.grid : \"\"}\r\n          >\r\n            <Box component=\"div\" className={classes.list}>\r\n              <MyList data={state.list} setState={setState} state={state} />\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={12} lg={9}>\r\n            {state?.products?.length > 0 ? (\r\n              <React.Fragment>\r\n                <Grid container spacing={4} justify=\"flex-end\">\r\n                  {/* <Grid item xs={12} md={6} lg={4}>\r\n                    <FormControl>\r\n                      <InputLabel id=\"sort-by\">Sort By:</InputLabel>\r\n                      <Select\r\n                        labelId=\"sort-by-label\"\r\n                        id=\"sort-by\"\r\n                        value={state.sort}\r\n                        onChange={handleSort}\r\n                      >\r\n                        <MenuItem value=\"price\">Price: Low to High</MenuItem>\r\n                        <MenuItem value=\"-price\">Price: High to Low</MenuItem>\r\n                        <MenuItem value=\"title\">Alphabetically: A - Z</MenuItem>\r\n                        <MenuItem value=\"-title\">\r\n                          Alphabetically: Z - A\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  className={classes.container}\r\n                >\r\n                  {state.loading ? (\r\n                    <Grid item xs={12}>\r\n                      <CircularProgress />\r\n                    </Grid>\r\n                  ) : (\r\n                    generateCards()\r\n                  )}\r\n                </Grid>\r\n                {/* {state.count !== 0 ? (\r\n                  <div className={classes.root}>\r\n                    <Pagination\r\n                      count={\r\n                        state.count === state.products.length ? 1 : state.count\r\n                      }\r\n                      shape=\"rounded\"\r\n                      onChange={handleChange}\r\n                      page={page}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )} */}\r\n              </React.Fragment>\r\n            ) : state.loading ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <Typography variant=\"h6\" component=\"p\">\r\n                No products available\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ProductList\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\cart.js",["436","437"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\Account.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Profile\\ProfileList.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Tab.js",["438","439"],"import React, { useState } from \"react\";\r\nimport Ratings from \"./Ratings\";\r\n\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst TabPanel = ({ children, value, index }) => {\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simpel-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tabProps = (index = 1) => {\r\n  return {\r\n    id: `tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nconst ProductTab = ({\r\n  productID,\r\n  productTitle,\r\n  description,\r\n  manufacturer_url,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"Rating, Specs Tab\"\r\n        >\r\n          <Tab label=\"Specifications\" {...tabProps(0)} />\r\n          {/* <Tab label=\"Reviews\" {...tabProps(1)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <List>\r\n          <ListItem>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          </ListItem>\r\n          <ListItem>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              For more details, head over to the{\" \"}\r\n              <span>\r\n                <a target=\"_blank\" href={manufacturer_url}>\r\n                  official website {productTitle}\r\n                </a>\r\n              </span>\r\n              .\r\n            </Typography>\r\n          </ListItem>\r\n        </List>\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={1}>\r\n        <Ratings productID={productID} title={productTitle} />\r\n      </TabPanel> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductTab;\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\Ratings.js",["440"],"import React, { useState, useEffect } from \"react\"\r\nimport { store } from \"../../apis/store\"\r\nimport { ratingsURL } from \"../../constants\"\r\nimport ReviewDialog from \"./ReviewDialog\"\r\n\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CircularPrograss from \"@material-ui/core/CircularProgress\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Rating from \"@material-ui/lab/Rating\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport { Box } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pagination: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}))\r\n\r\nconst Ratings = ({ productID, title }) => {\r\n  const classes = useStyles()\r\n  const [ratings, setRatings] = useState({\r\n    loading: true,\r\n    payload: [],\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n  })\r\n  const [page, setPage] = useState(1)\r\n  const getRatings = () => {\r\n    store\r\n      .get(ratingsURL, {\r\n        params: {\r\n          product_id: productID,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const count = Math.round(response.data.count / 10)\r\n        setRatings({\r\n          ...ratings,\r\n          loading: false,\r\n          payload: response.data.results,\r\n          count: count,\r\n          next: response.data.next,\r\n          previous: response.data.previous,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setRatings({\r\n          ...ratings,\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRatings()\r\n  }, [ratings.loading])\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value > page) {\r\n      setPage(value)\r\n      getRatings(ratings.next)\r\n    } else if (value < page) {\r\n      setPage(value)\r\n      getRatings(ratings.previous)\r\n    } else {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const renderSingleRating = (rating) => {\r\n    return (\r\n      <List key={rating.id}>\r\n        <ListItem>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {rating.name}\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Rating name=\"read-only\" value={rating.stars} readOnly />\r\n        </ListItem>\r\n        <ListItem>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {new Date(rating.added).toLocaleDateString(\"en-US\", {\r\n              day: \"numeric\",\r\n              month: \"short\",\r\n              year: \"numeric\",\r\n              hour: \"numeric\",\r\n              minute: \"numeric\",\r\n            })}\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {rating.content}\r\n          </Typography>\r\n        </ListItem>\r\n        <Divider />\r\n      </List>\r\n    )\r\n  }\r\n\r\n  const renderRatings = () => {\r\n    if (ratings.loading === true) {\r\n      return <CircularPrograss />\r\n    } else if (ratings.payload && ratings.payload.length === 1) {\r\n      const rating = ratings.payload[0]\r\n      return <React.Fragment>{renderSingleRating(rating)}</React.Fragment>\r\n    } else if (ratings.payload && ratings.payload.length === 0) {\r\n      return (\r\n        <Box p={4}>\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            No reviews yet\r\n          </Typography>\r\n        </Box>\r\n      )\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          {ratings.payload.map((rating) => renderSingleRating(rating))}\r\n          {ratings.count !== 0 ? (\r\n            <div className={classes.pagination}>\r\n              <Pagination\r\n                count={ratings.count}\r\n                shape=\"rounded\"\r\n                onChange={handleChange}\r\n                page={page}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        {renderRatings()}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <ReviewDialog\r\n          title={title}\r\n          id={productID}\r\n          setRatings={setRatings}\r\n          ratings={ratings}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Ratings\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\NavList.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Home.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\AddressForm.js",["441","442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\CustomAlert.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\actions\\types.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\apis\\store.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\AddedToCart.js",["456"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Orders.js",["457"],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\store\\reducers\\index.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Dashboard.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\constants.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Nav\\SideDrawer.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Review.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\setting.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Admin\\Discount.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\components\\Product\\ProductCard.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Seller\\SellerProduct.jsx",["458","459"],"import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  noSpace: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n}));\r\nconst SellerProduct = () => {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState({\r\n    error: null,\r\n    loading: true,\r\n    payload: null,\r\n  });\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    authStore\r\n      .get(\"/api/v1/getsellerproducts\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setOrders({ ...orders, payload: response.data, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        setOrders({ ...orders, error: error.response, loading: false });\r\n        // console.log(error.response.status);\r\n        // console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return <CircularProgress />;\r\n    } else if (orders.error && orders.error.status === 500) {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          There was an error loading the data: ( &nbsp; {orders.error.data}{\" \"}\r\n        </Typography>\r\n      );\r\n    } else if (orders.payload !== null && orders.payload.length > 0) {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow className={classes.noSpace}>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell align=\"left\"> Title </TableCell>\r\n                <TableCell align=\"left\"> Price </TableCell>\r\n                <TableCell align=\"left\"> Brand </TableCell>\r\n                <TableCell align=\"left\"> Color </TableCell>\r\n                <TableCell align=\"left\"> Details </TableCell>\r\n                {/* <TableCell align=\"left\"> Total </TableCell>\r\n                <TableCell align=\"left\">Status</TableCell> */}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.payload.map((item, i) => (\r\n                <TableRow\r\n                  key={orders.payload[i]._id}\r\n                  id={orders.payload[i]._id}\r\n                  className={classes.noSpace}\r\n                >\r\n                  <TableCell align=\"left\">{item.productType}</TableCell>\r\n                  <TableCell align=\"left\">{item.title}</TableCell>\r\n                  <TableCell align=\"left\">{item.price}</TableCell>\r\n                  <TableCell align=\"left\">{item.brand}</TableCell>\r\n                  <TableCell align=\"left\">{item.color}</TableCell>\r\n                  <TableCell align=\"left\">{item.processorName} {item.ram} {item.storage}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    } else {\r\n      return <Typography variant=\"body1\">You haven't Post Products</Typography>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" component=\"h5\">\r\n        Your Products\r\n      </Typography>\r\n      <br />\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          {renderOrders()}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SellerProduct;\r\n","C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\App.js",[],"C:\\Users\\tanveer\\Desktop\\dev project\\web\\src\\containers\\Checkout\\Checkout.js",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport {\r\n  addressURL,\r\n  addressUpdateURL,\r\n  addressCreateURL,\r\n  checkoutURL,\r\n  userDetailsURL,\r\n} from \"../../constants\";\r\nimport { clearCart } from \"../../store/actions/cart\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Address from \"./Address\";\r\nimport Payment from \"./Payment\";\r\nimport Review from \"./Review\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\n// const steps = [\"Shipping address\", \"Payment details\", \"Review your order\"]\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const [state, setState] = useState({\r\n    error: null,\r\n    loading: false,\r\n    useBilling: true,\r\n    activeStep: 0,\r\n    order: null,\r\n  });\r\n  const [user, setUser] = useState(null);\r\n  const [options, setOptions] = useState(null);\r\n  const [checkoutData, setCheckoutData] = useState({\r\n    selectedBillingAddress: null,\r\n    selectedShippingAddress: null,\r\n    shippingDetail: null,\r\n    billingDetail: null,\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   const getUser = () => {\r\n  //     authStore\r\n  //       .get(userDetailsURL)\r\n  //       .then((response) => setUser(response.data))\r\n  //       .catch((error) => error)\r\n  //   }\r\n  //   const getAddresses = () => {\r\n  //     authStore\r\n  //       .get(addressURL)\r\n  //       .then((response) => {\r\n  //         setOptions(response.data)\r\n  //       })\r\n  //       .catch((error) => error)\r\n  //   }\r\n  //   getAddresses()\r\n  //   getUser()\r\n  // }, [])\r\n\r\n  // const handleEdit = (data) => {\r\n  //   return authStore.patch(addressUpdateURL(data.id), data)\r\n  // }\r\n\r\n  // const handleCreate = (data) => {\r\n  //   return authStore.post(addressCreateURL, data)\r\n  // }\r\n\r\n  // const handleBilling = (data) => {\r\n  //   if (\r\n  //     data.selectedBillingAddress !== null &&\r\n  //     data.selectedBillingAddress !== \"\"\r\n  //   ) {\r\n  //     return handleEdit(data.billingDetail)\r\n  //   } else {\r\n  //     return handleCreate(data.billingDetail)\r\n  //   }\r\n  // }\r\n\r\n  // const checkout = () => {\r\n  //   let payload = {\r\n  //     selectedShippingAddress: null,\r\n  //     selectedBillingAddress: null,\r\n  //     shippingDetail: checkoutData.shippingDetail,\r\n  //     billingDetail: checkoutData.billingDetail,\r\n  //   }\r\n\r\n  //   payload.selectedShippingAddress = Cookies.get(\"shipping\")\r\n  //   payload.selectedBillingAddress = Cookies.get(\"billing\")\r\n  //   Cookies.remove(\"shipping\")\r\n  //   Cookies.remove(\"billing\")\r\n  //   authStore\r\n  //     .post(checkoutURL, payload)\r\n  //     .then((response) => {\r\n  //       dispatch(clearCart())\r\n  //       setState({\r\n  //         ...state,\r\n  //         activeStep: 3,\r\n  //         loading: false,\r\n  //         order: response.data,\r\n  //       })\r\n  //     })\r\n  //     .catch((error) =>\r\n  //       setState({\r\n  //         ...state,\r\n  //         activeStep: 3,\r\n  //         loading: false,\r\n  //         error: error,\r\n  //       })\r\n  //     )\r\n  // }\r\n\r\n  // const handleSubmit = () => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     activeStep: 3,\r\n  //     loading: true,\r\n  //   })\r\n  //   if (\r\n  //     checkoutData.selectedShippingAddress !== null &&\r\n  //     checkoutData.selectedShippingAddress !== \"\"\r\n  //   ) {\r\n  //     handleEdit(checkoutData.shippingDetail)\r\n  //       .then((response) => {\r\n  //         Cookies.set(\"shipping\", response.data.id, { expires: 1 })\r\n  //         return handleBilling(checkoutData)\r\n  //       })\r\n  //       .then((response) => {\r\n  //         Cookies.set(\"billing\", response.data.id, { expires: 1 })\r\n  //         checkout()\r\n  //       })\r\n  //       .catch((error) =>\r\n  //         setState({\r\n  //           ...state,\r\n  //           activeStep: 3,\r\n  //           error: error,\r\n  //         })\r\n  //       )\r\n  //   } else {\r\n  //     handleCreate(checkoutData.shippingDetail)\r\n  //       .then((response) => {\r\n  //         Cookies.set(\"shipping\", response.data.id, { expires: 1 })\r\n  //         return handleBilling(checkoutData)\r\n  //       })\r\n  //       .then((response) => {\r\n  //         Cookies.set(\"billing\", response.data.id, { expires: 1 })\r\n  //         checkout()\r\n  //       })\r\n  //       .catch((error) =>\r\n  //         setState({\r\n  //           ...state,\r\n  //           activeStep: 3,\r\n  //           error: error,\r\n  //         })\r\n  //       )\r\n  //   }\r\n  // }\r\n\r\n  // const getStepContent = (step) => {\r\n  //   switch (step) {\r\n  //     case 0:\r\n  //       return (\r\n  //         <Address\r\n  //           user={user}\r\n  //           options={options}\r\n  //           checkoutState={state}\r\n  //           setCheckoutState={setState}\r\n  //           checkoutData={checkoutData}\r\n  //           setCheckoutData={setCheckoutData}\r\n  //         />\r\n  //       )\r\n  //     case 1:\r\n  //       return (\r\n  //         <Payment\r\n  //           user={user}\r\n  //           options={options}\r\n  //           checkoutState={state}\r\n  //           setCheckoutState={setState}\r\n  //           checkoutData={checkoutData}\r\n  //           setCheckoutData={setCheckoutData}\r\n  //         />\r\n  //       )\r\n  //     case 2:\r\n  //       return (\r\n  //         <Review\r\n  //           data={checkoutData}\r\n  //           shoppingCart={cart.shoppingCart}\r\n  //           state={state}\r\n  //           setState={setState}\r\n  //           handleSubmit={handleSubmit}\r\n  //         />\r\n  //       )\r\n  //     default:\r\n  //       throw new Error(\"Unknown step\")\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Address\r\n              user={user}\r\n              options={options}\r\n              checkoutState={state}\r\n              setCheckoutState={setState}\r\n              checkoutData={checkoutData}\r\n              setCheckoutData={setCheckoutData}\r\n            />\r\n          </React.Fragment>\r\n          {/* <Stepper activeStep={state.activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper> */}\r\n          {/* <React.Fragment>\r\n            {state.activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                {state.loading === true ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <React.Fragment>\r\n                    {state.error ? (\r\n                      <React.Fragment>\r\n                        <Typography variant=\"body1\" component=\"p\" color=\"error\">\r\n                          An error occurred during checkout, so your order could\r\n                          not be completed.\r\n                        </Typography>\r\n                        <Link to=\"/\" className={classes.linkText}>\r\n                          <Box p={4}>\r\n                            <Button variant=\"contained\">\r\n                              Continue Shopping\r\n                            </Button>\r\n                          </Box>\r\n                        </Link>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      <React.Fragment>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                          Thank you for your order.\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\">\r\n                          Your order number is #{\" \"}\r\n                          {state.order ? state.order.id : \"\"}. We have emailed\r\n                          your order confirmation, and will send you an update\r\n                          when your order has shipped.\r\n                        </Typography>\r\n                        <Link to=\"/\" className={classes.linkText}>\r\n                          <Box p={4}>\r\n                            <Button variant=\"contained\">\r\n                              Continue Shopping\r\n                            </Button>\r\n                          </Box>\r\n                        </Link>\r\n                      </React.Fragment>\r\n                    )}\r\n                  </React.Fragment>\r\n                )}\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(state.activeStep)}\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment> */}\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n",{"ruleId":"482","severity":1,"message":"483","line":4,"column":8,"nodeType":"484","messageId":"485","endLine":4,"endColumn":18},{"ruleId":"482","severity":1,"message":"486","line":13,"column":8,"nodeType":"484","messageId":"485","endLine":13,"endColumn":17},{"ruleId":"487","replacedBy":"488"},{"ruleId":"489","replacedBy":"490"},{"ruleId":"487","replacedBy":"491"},{"ruleId":"489","replacedBy":"492"},{"ruleId":"482","severity":1,"message":"493","line":2,"column":10,"nodeType":"484","messageId":"485","endLine":2,"endColumn":19},{"ruleId":"482","severity":1,"message":"494","line":3,"column":10,"nodeType":"484","messageId":"485","endLine":3,"endColumn":24},{"ruleId":"482","severity":1,"message":"495","line":16,"column":8,"nodeType":"484","messageId":"485","endLine":16,"endColumn":15},{"ruleId":"496","severity":1,"message":"497","line":69,"column":6,"nodeType":"498","endLine":69,"endColumn":8,"suggestions":"499"},{"ruleId":"487","replacedBy":"500"},{"ruleId":"489","replacedBy":"501"},{"ruleId":"482","severity":1,"message":"502","line":10,"column":8,"nodeType":"484","messageId":"485","endLine":10,"endColumn":14},{"ruleId":"482","severity":1,"message":"503","line":96,"column":17,"nodeType":"484","messageId":"485","endLine":96,"endColumn":25},{"ruleId":"496","severity":1,"message":"504","line":101,"column":6,"nodeType":"498","endLine":101,"endColumn":8,"suggestions":"505"},{"ruleId":"496","severity":1,"message":"506","line":44,"column":6,"nodeType":"498","endLine":44,"endColumn":8,"suggestions":"507"},{"ruleId":"496","severity":1,"message":"497","line":74,"column":6,"nodeType":"498","endLine":74,"endColumn":8,"suggestions":"508"},{"ruleId":"487","replacedBy":"509"},{"ruleId":"489","replacedBy":"510"},{"ruleId":"496","severity":1,"message":"511","line":47,"column":6,"nodeType":"498","endLine":47,"endColumn":8,"suggestions":"512"},{"ruleId":"482","severity":1,"message":"513","line":72,"column":7,"nodeType":"484","messageId":"485","endLine":72,"endColumn":17},{"ruleId":"496","severity":1,"message":"514","line":27,"column":6,"nodeType":"498","endLine":27,"endColumn":8,"suggestions":"515"},{"ruleId":"496","severity":1,"message":"516","line":31,"column":8,"nodeType":"498","endLine":31,"endColumn":10,"suggestions":"517"},{"ruleId":"496","severity":1,"message":"518","line":68,"column":6,"nodeType":"498","endLine":68,"endColumn":8,"suggestions":"519"},{"ruleId":"482","severity":1,"message":"520","line":1,"column":17,"nodeType":"484","messageId":"485","endLine":1,"endColumn":25},{"ruleId":"482","severity":1,"message":"521","line":1,"column":27,"nodeType":"484","messageId":"485","endLine":1,"endColumn":36},{"ruleId":"482","severity":1,"message":"522","line":1,"column":38,"nodeType":"484","messageId":"485","endLine":1,"endColumn":44},{"ruleId":"482","severity":1,"message":"523","line":3,"column":10,"nodeType":"484","messageId":"485","endLine":3,"endColumn":25},{"ruleId":"482","severity":1,"message":"524","line":6,"column":8,"nodeType":"484","messageId":"485","endLine":6,"endColumn":24},{"ruleId":"482","severity":1,"message":"525","line":7,"column":8,"nodeType":"484","messageId":"485","endLine":7,"endColumn":16},{"ruleId":"482","severity":1,"message":"526","line":8,"column":8,"nodeType":"484","messageId":"485","endLine":8,"endColumn":18},{"ruleId":"482","severity":1,"message":"527","line":9,"column":8,"nodeType":"484","messageId":"485","endLine":9,"endColumn":19},{"ruleId":"482","severity":1,"message":"528","line":10,"column":8,"nodeType":"484","messageId":"485","endLine":10,"endColumn":14},{"ruleId":"482","severity":1,"message":"529","line":11,"column":8,"nodeType":"484","messageId":"485","endLine":11,"endColumn":16},{"ruleId":"482","severity":1,"message":"530","line":12,"column":8,"nodeType":"484","messageId":"485","endLine":12,"endColumn":18},{"ruleId":"482","severity":1,"message":"531","line":13,"column":8,"nodeType":"484","messageId":"485","endLine":13,"endColumn":14},{"ruleId":"482","severity":1,"message":"532","line":15,"column":10,"nodeType":"484","messageId":"485","endLine":15,"endColumn":20},{"ruleId":"482","severity":1,"message":"533","line":16,"column":10,"nodeType":"484","messageId":"485","endLine":16,"endColumn":14},{"ruleId":"482","severity":1,"message":"534","line":16,"column":16,"nodeType":"484","messageId":"485","endLine":16,"endColumn":24},{"ruleId":"496","severity":1,"message":"535","line":78,"column":6,"nodeType":"498","endLine":78,"endColumn":12,"suggestions":"536"},{"ruleId":"496","severity":1,"message":"537","line":130,"column":6,"nodeType":"498","endLine":130,"endColumn":15,"suggestions":"538"},{"ruleId":"496","severity":1,"message":"518","line":41,"column":6,"nodeType":"498","endLine":41,"endColumn":8,"suggestions":"539"},{"ruleId":"496","severity":1,"message":"518","line":46,"column":6,"nodeType":"498","endLine":46,"endColumn":8,"suggestions":"540"},{"ruleId":"482","severity":1,"message":"493","line":4,"column":17,"nodeType":"484","messageId":"485","endLine":4,"endColumn":26},{"ruleId":"482","severity":1,"message":"541","line":5,"column":10,"nodeType":"484","messageId":"485","endLine":5,"endColumn":22},{"ruleId":"482","severity":1,"message":"542","line":6,"column":10,"nodeType":"484","messageId":"485","endLine":6,"endColumn":19},{"ruleId":"482","severity":1,"message":"543","line":64,"column":9,"nodeType":"484","messageId":"485","endLine":64,"endColumn":17},{"ruleId":"482","severity":1,"message":"544","line":65,"column":7,"nodeType":"484","messageId":"485","endLine":65,"endColumn":11},{"ruleId":"482","severity":1,"message":"545","line":66,"column":9,"nodeType":"484","messageId":"485","endLine":66,"endColumn":14},{"ruleId":"482","severity":1,"message":"546","line":2,"column":10,"nodeType":"484","messageId":"485","endLine":2,"endColumn":14},{"ruleId":"482","severity":1,"message":"547","line":10,"column":8,"nodeType":"484","messageId":"485","endLine":10,"endColumn":18},{"ruleId":"496","severity":1,"message":"548","line":83,"column":6,"nodeType":"498","endLine":83,"endColumn":8,"suggestions":"549"},{"ruleId":"496","severity":1,"message":"550","line":109,"column":6,"nodeType":"498","endLine":109,"endColumn":8,"suggestions":"551"},{"ruleId":"482","severity":1,"message":"502","line":23,"column":8,"nodeType":"484","messageId":"485","endLine":23,"endColumn":14},{"ruleId":"482","severity":1,"message":"503","line":114,"column":17,"nodeType":"484","messageId":"485","endLine":114,"endColumn":25},{"ruleId":"496","severity":1,"message":"504","line":120,"column":6,"nodeType":"498","endLine":120,"endColumn":8,"suggestions":"552"},{"ruleId":"482","severity":1,"message":"553","line":2,"column":10,"nodeType":"484","messageId":"485","endLine":2,"endColumn":21},{"ruleId":"482","severity":1,"message":"493","line":5,"column":10,"nodeType":"484","messageId":"485","endLine":5,"endColumn":19},{"ruleId":"482","severity":1,"message":"554","line":7,"column":10,"nodeType":"484","messageId":"485","endLine":7,"endColumn":27},{"ruleId":"482","severity":1,"message":"555","line":7,"column":29,"nodeType":"484","messageId":"485","endLine":7,"endColumn":46},{"ruleId":"482","severity":1,"message":"556","line":19,"column":8,"nodeType":"484","messageId":"485","endLine":19,"endColumn":24},{"ruleId":"496","severity":1,"message":"557","line":80,"column":6,"nodeType":"498","endLine":80,"endColumn":8,"suggestions":"558"},{"ruleId":"496","severity":1,"message":"535","line":155,"column":6,"nodeType":"498","endLine":155,"endColumn":46,"suggestions":"559"},{"ruleId":"496","severity":1,"message":"535","line":53,"column":8,"nodeType":"498","endLine":53,"endColumn":10,"suggestions":"560"},{"ruleId":"496","severity":1,"message":"561","line":82,"column":6,"nodeType":"498","endLine":82,"endColumn":8,"suggestions":"562"},{"ruleId":"482","severity":1,"message":"563","line":3,"column":17,"nodeType":"484","messageId":"485","endLine":3,"endColumn":27},{"ruleId":"482","severity":1,"message":"564","line":7,"column":3,"nodeType":"484","messageId":"485","endLine":7,"endColumn":12},{"ruleId":"482","severity":1,"message":"565","line":13,"column":8,"nodeType":"484","messageId":"485","endLine":13,"endColumn":9},{"ruleId":"482","severity":1,"message":"566","line":20,"column":8,"nodeType":"484","messageId":"485","endLine":20,"endColumn":14},{"ruleId":"482","severity":1,"message":"527","line":23,"column":15,"nodeType":"484","messageId":"485","endLine":23,"endColumn":26},{"ruleId":"482","severity":1,"message":"530","line":23,"column":28,"nodeType":"484","messageId":"485","endLine":23,"endColumn":38},{"ruleId":"482","severity":1,"message":"567","line":24,"column":8,"nodeType":"484","messageId":"485","endLine":24,"endColumn":18},{"ruleId":"482","severity":1,"message":"531","line":25,"column":8,"nodeType":"484","messageId":"485","endLine":25,"endColumn":14},{"ruleId":"482","severity":1,"message":"528","line":26,"column":8,"nodeType":"484","messageId":"485","endLine":26,"endColumn":14},{"ruleId":"482","severity":1,"message":"529","line":27,"column":8,"nodeType":"484","messageId":"485","endLine":27,"endColumn":16},{"ruleId":"496","severity":1,"message":"568","line":249,"column":6,"nodeType":"498","endLine":249,"endColumn":8,"suggestions":"569"},{"ruleId":"496","severity":1,"message":"568","line":360,"column":6,"nodeType":"498","endLine":360,"endColumn":33,"suggestions":"570"},{"ruleId":"482","severity":1,"message":"571","line":406,"column":9,"nodeType":"484","messageId":"485","endLine":406,"endColumn":21},{"ruleId":"482","severity":1,"message":"572","line":418,"column":9,"nodeType":"484","messageId":"485","endLine":418,"endColumn":19},{"ruleId":"482","severity":1,"message":"493","line":2,"column":10,"nodeType":"484","messageId":"485","endLine":2,"endColumn":19},{"ruleId":"482","severity":1,"message":"573","line":3,"column":10,"nodeType":"484","messageId":"485","endLine":3,"endColumn":25},{"ruleId":"482","severity":1,"message":"574","line":2,"column":8,"nodeType":"484","messageId":"485","endLine":2,"endColumn":15},{"ruleId":"575","severity":1,"message":"576","line":75,"column":20,"nodeType":"577","endLine":75,"endColumn":35},{"ruleId":"496","severity":1,"message":"578","line":63,"column":6,"nodeType":"498","endLine":63,"endColumn":23,"suggestions":"579"},{"ruleId":"482","severity":1,"message":"527","line":7,"column":8,"nodeType":"484","messageId":"485","endLine":7,"endColumn":19},{"ruleId":"482","severity":1,"message":"524","line":8,"column":8,"nodeType":"484","messageId":"485","endLine":8,"endColumn":24},{"ruleId":"482","severity":1,"message":"525","line":9,"column":8,"nodeType":"484","messageId":"485","endLine":9,"endColumn":16},{"ruleId":"482","severity":1,"message":"528","line":10,"column":8,"nodeType":"484","messageId":"485","endLine":10,"endColumn":14},{"ruleId":"482","severity":1,"message":"529","line":11,"column":8,"nodeType":"484","messageId":"485","endLine":11,"endColumn":16},{"ruleId":"482","severity":1,"message":"530","line":12,"column":8,"nodeType":"484","messageId":"485","endLine":12,"endColumn":18},{"ruleId":"482","severity":1,"message":"580","line":16,"column":10,"nodeType":"484","messageId":"485","endLine":16,"endColumn":21},{"ruleId":"482","severity":1,"message":"581","line":18,"column":8,"nodeType":"484","messageId":"485","endLine":18,"endColumn":15},{"ruleId":"482","severity":1,"message":"582","line":19,"column":8,"nodeType":"484","messageId":"485","endLine":19,"endColumn":13},{"ruleId":"482","severity":1,"message":"583","line":85,"column":9,"nodeType":"484","messageId":"485","endLine":85,"endColumn":14},{"ruleId":"482","severity":1,"message":"584","line":101,"column":7,"nodeType":"484","messageId":"485","endLine":101,"endColumn":22},{"ruleId":"482","severity":1,"message":"585","line":102,"column":7,"nodeType":"484","messageId":"485","endLine":102,"endColumn":16},{"ruleId":"482","severity":1,"message":"586","line":103,"column":7,"nodeType":"484","messageId":"485","endLine":103,"endColumn":21},{"ruleId":"482","severity":1,"message":"587","line":104,"column":7,"nodeType":"484","messageId":"485","endLine":104,"endColumn":15},{"ruleId":"482","severity":1,"message":"588","line":105,"column":7,"nodeType":"484","messageId":"485","endLine":105,"endColumn":18},{"ruleId":"482","severity":1,"message":"589","line":6,"column":10,"nodeType":"484","messageId":"485","endLine":6,"endColumn":14},{"ruleId":"496","severity":1,"message":"590","line":115,"column":6,"nodeType":"498","endLine":115,"endColumn":21,"suggestions":"591"},{"ruleId":"482","severity":1,"message":"545","line":29,"column":9,"nodeType":"484","messageId":"485","endLine":29,"endColumn":14},{"ruleId":"496","severity":1,"message":"518","line":46,"column":6,"nodeType":"498","endLine":46,"endColumn":8,"suggestions":"592"},{"ruleId":"482","severity":1,"message":"521","line":1,"column":27,"nodeType":"484","messageId":"485","endLine":1,"endColumn":36},{"ruleId":"482","severity":1,"message":"546","line":3,"column":10,"nodeType":"484","messageId":"485","endLine":3,"endColumn":14},{"ruleId":"482","severity":1,"message":"493","line":4,"column":10,"nodeType":"484","messageId":"485","endLine":4,"endColumn":19},{"ruleId":"482","severity":1,"message":"593","line":6,"column":3,"nodeType":"484","messageId":"485","endLine":6,"endColumn":13},{"ruleId":"482","severity":1,"message":"594","line":7,"column":3,"nodeType":"484","messageId":"485","endLine":7,"endColumn":19},{"ruleId":"482","severity":1,"message":"595","line":8,"column":3,"nodeType":"484","messageId":"485","endLine":8,"endColumn":19},{"ruleId":"482","severity":1,"message":"596","line":9,"column":3,"nodeType":"484","messageId":"485","endLine":9,"endColumn":14},{"ruleId":"482","severity":1,"message":"494","line":10,"column":3,"nodeType":"484","messageId":"485","endLine":10,"endColumn":17},{"ruleId":"482","severity":1,"message":"597","line":12,"column":10,"nodeType":"484","messageId":"485","endLine":12,"endColumn":19},{"ruleId":"482","severity":1,"message":"598","line":13,"column":8,"nodeType":"484","messageId":"485","endLine":13,"endColumn":15},{"ruleId":"482","severity":1,"message":"599","line":18,"column":8,"nodeType":"484","messageId":"485","endLine":18,"endColumn":15},{"ruleId":"482","severity":1,"message":"600","line":19,"column":8,"nodeType":"484","messageId":"485","endLine":19,"endColumn":12},{"ruleId":"482","severity":1,"message":"601","line":20,"column":8,"nodeType":"484","messageId":"485","endLine":20,"endColumn":17},{"ruleId":"482","severity":1,"message":"531","line":22,"column":8,"nodeType":"484","messageId":"485","endLine":22,"endColumn":14},{"ruleId":"482","severity":1,"message":"602","line":24,"column":8,"nodeType":"484","messageId":"485","endLine":24,"endColumn":15},{"ruleId":"482","severity":1,"message":"603","line":25,"column":8,"nodeType":"484","messageId":"485","endLine":25,"endColumn":14},{"ruleId":"482","severity":1,"message":"556","line":26,"column":8,"nodeType":"484","messageId":"485","endLine":26,"endColumn":24},{"ruleId":"482","severity":1,"message":"604","line":27,"column":10,"nodeType":"484","messageId":"485","endLine":27,"endColumn":13},{"ruleId":"482","severity":1,"message":"543","line":73,"column":9,"nodeType":"484","messageId":"485","endLine":73,"endColumn":17},{"ruleId":"482","severity":1,"message":"544","line":74,"column":9,"nodeType":"484","messageId":"485","endLine":74,"endColumn":13},{"ruleId":"482","severity":1,"message":"605","line":82,"column":16,"nodeType":"484","messageId":"485","endLine":82,"endColumn":23},{"ruleId":"482","severity":1,"message":"606","line":83,"column":19,"nodeType":"484","messageId":"485","endLine":83,"endColumn":29},"no-unused-vars","'AdminRoute' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","no-native-reassign",["607"],"no-negated-in-lhs",["608"],["607"],["608"],"'authStore' is defined but never used.","'userDetailsURL' is defined but never used.","'Address' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["609"],["607"],["608"],"'Google' is defined but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["610"],"React Hook useEffect has a missing dependency: 'content'. Either include it or remove the dependency array.",["611"],["612"],["607"],["608"],"React Hook useEffect has missing dependencies: 'handleScroll' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["613"],"'updateCart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'message.id'. Either include it or remove the dependency array.",["614"],"React Hook useEffect has a missing dependency: 'earnings'. Either include it or remove the dependency array. You can also do a functional update 'setEarnings(e => ...)' if you only need 'earnings' in the 'setEarnings' call.",["615"],"React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array. You can also do a functional update 'setOrders(o => ...)' if you only need 'orders' in the 'setOrders' call.",["616"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useButtonStyles' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'InputLabel' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["617"],"React Hook useEffect has missing dependencies: 'checkoutData.billingDetail' and 'state'. Either include them or remove the dependency array. If 'setState' needs the current value of 'checkoutData.billingDetail', you can also switch to useReducer instead of useState and read 'checkoutData.billingDetail' in the reducer.",["618"],["619"],["620"],"'addToCartURL' is defined but never used.","'fetchCart' is defined but never used.","'dispatch' is assigned a value but never used.","'cart' is assigned a value but never used.","'token' is assigned a value but never used.","'Link' is defined but never used.","'AddBoxIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'order'. Either include them or remove the dependency array. You can also do a functional update 'setOrder(o => ...)' if you only need 'order' in the 'setOrder' call.",["621"],"React Hook useEffect has missing dependencies: 'form' and 'id'. Either include them or remove the dependency array. You can also do a functional update 'setForm(f => ...)' if you only need 'form' in the 'setForm' call.",["622"],["623"],"'useSelector' is defined but never used.","'removeFromCartURL' is defined but never used.","'quantityUpdateURL' is defined but never used.","'CircularProgress' is defined but never used.","React Hook useEffect has a missing dependency: 'cart'. Either include it or remove the dependency array.",["624"],["625"],["626"],"React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["627"],"'productApi' is defined but never used.","'filterURL' is defined but never used.","'_' is defined but never used.","'Hidden' is defined but never used.","'Pagination' is defined but never used.","React Hook useEffect has missing dependencies: 'product_type' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["628"],["629"],"'handleChange' is assigned a value but never used.","'handleSort' is assigned a value but never used.","'orderSummaryURL' is defined but never used.","'Ratings' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has a missing dependency: 'getRatings'. Either include it or remove the dependency array.",["630"],"'useDispatch' is defined but never used.","'baseURL' is defined but never used.","'axios' is defined but never used.","'check' is assigned a value but never used.","'deliveryAddress' is assigned a value but never used.","'firstName' is assigned a value but never used.","'googleLocation' is assigned a value but never used.","'lastName' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'blue' is defined but never used.","React Hook useEffect has missing dependencies: 'getOrders' and 'orders'. Either include them or remove the dependency array. You can also do a functional update 'setOrders(o => ...)' if you only need 'orders' in the 'setOrders' call.",["631"],["632"],"'addressURL' is defined but never used.","'addressUpdateURL' is defined but never used.","'addressCreateURL' is defined but never used.","'checkoutURL' is defined but never used.","'clearCart' is defined but never used.","'Cookies' is defined but never used.","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'Payment' is defined but never used.","'Review' is defined but never used.","'Box' is defined but never used.","'setUser' is assigned a value but never used.","'setOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"637","fix":"638"},{"desc":"633","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"646","fix":"652"},{"desc":"646","fix":"653"},{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"635","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"646","fix":"675"},"Update the dependencies array to be: [token]",{"range":"676","text":"677"},"Update the dependencies array to be: [dispatch]",{"range":"678","text":"679"},"Update the dependencies array to be: [content]",{"range":"680","text":"681"},{"range":"682","text":"677"},"Update the dependencies array to be: [handleScroll, state]",{"range":"683","text":"684"},"Update the dependencies array to be: [message.id]",{"range":"685","text":"686"},"Update the dependencies array to be: [earnings]",{"range":"687","text":"688"},"Update the dependencies array to be: [orders]",{"range":"689","text":"690"},"Update the dependencies array to be: [state, user]",{"range":"691","text":"692"},"Update the dependencies array to be: [checkoutData.billingDetail, options, state]",{"range":"693","text":"694"},{"range":"695","text":"690"},{"range":"696","text":"690"},"Update the dependencies array to be: [id, order]",{"range":"697","text":"698"},"Update the dependencies array to be: [form, id]",{"range":"699","text":"700"},{"range":"701","text":"679"},"Update the dependencies array to be: [cart]",{"range":"702","text":"703"},"Update the dependencies array to be: [state.saving, state.edit, state.create, state]",{"range":"704","text":"705"},"Update the dependencies array to be: [state]",{"range":"706","text":"707"},"Update the dependencies array to be: [fetchMessages]",{"range":"708","text":"709"},"Update the dependencies array to be: [product_type, state]",{"range":"710","text":"711"},"Update the dependencies array to be: [product_type, state, state.filters, state.sort]",{"range":"712","text":"713"},"Update the dependencies array to be: [getRatings, ratings.loading]",{"range":"714","text":"715"},"Update the dependencies array to be: [getOrders, orders, orders.status]",{"range":"716","text":"717"},{"range":"718","text":"690"},[1950,1952],"[token]",[3025,3027],"[dispatch]",[1125,1127],"[content]",[2181,2183],[1226,1228],"[handleScroll, state]",[837,839],"[message.id]",[863,865],"[earnings]",[1913,1915],"[orders]",[1985,1991],"[state, user]",[3292,3301],"[checkoutData.billingDetail, options, state]",[1459,1461],[1559,1561],[2289,2291],"[id, order]",[2835,2837],"[form, id]",[3757,3759],[2642,2644],"[cart]",[4068,4108],"[state.saving, state.edit, state.create, state]",[1568,1570],"[state]",[2148,2150],"[fetchMessages]",[6465,6467],"[product_type, state]",[9713,9740],"[product_type, state, state.filters, state.sort]",[1753,1770],"[getRatings, ratings.loading]",[3212,3227],"[getOrders, orders, orders.status]",[1563,1565]]