{"version":3,"sources":["setting.js","constants.js","apis/store.js","history.js","store/actions/types.js","store/actions/auth.js","theme.js","components/BackToTop.js","components/PrivateRoute.js","Hoc.js","utils.js","components/Copyright.js","containers/Auth/SignIn.js","containers/Auth/SignUp.js","containers/Auth/Forgot.js","store/actions/cart.js","cartLocal.js","components/BreadCrumbs.js","components/Product/AlertDialog.js","components/Product/AddedToCart.js","components/ScrollToTopOnMount.js","containers/Cart.js","components/Product/Ratings.js","components/Product/Tab.js","components/Product/Product.js","components/Product/ProductCard.js","components/MyList.js","components/Product/ProductList.js","containers/Auth/ResetPassword.js","containers/Admin/OrderDetail.js","containers/Admin/Orders.js","containers/Admin/Messages.js","containers/Admin/Maintenance.js","containers/Admin/Discount.js","containers/Admin/Dashboard.js","containers/Checkout/CheckoutStyles.js","containers/Checkout/AddressForm.js","containers/Checkout/Address.js","containers/Checkout/Review.js","containers/Checkout/Checkout.js","containers/Profile/Edit.js","containers/Profile/Account.js","containers/Profile/Orders.js","containers/Profile/Address.js","containers/Profile/Password.js","containers/Profile/ProfileList.js","containers/Profile/UserProfile.js","containers/CartView.js","components/Product/SpecificList.js","containers/Home.js","containers/Content.js","components/Footer/MessageForm.js","components/Footer/Footer.js","components/LogoutAlertDialog.js","components/Nav/NavList.js","components/Nav/Search.js","components/Nav/SideDrawer.js","logo.png","components/Nav/Nav.js","components/CookieConsent.js","containers/Layout.js","components/Error.js","containers/Seller/Lists.jsx","containers/Seller/BuyerOrders.jsx","containers/Seller/LaptopForm/LaptopForm.jsx","containers/Seller/SellerProduct.jsx","containers/Seller/Seller.jsx","routes.js","App.js","store/reducers/authReducer.js","store/reducers/cartReducer.js","store/reducers/index.js","index.js"],"names":["baseURL","window","location","hostname","split","endpoint","brandsURL","product","productURL","slug","specialURL","store","axios","create","authStore","paramsSerializer","params","Qs","stringify","arrayFormat","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","createBrowserHistory","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_RESET","CART_START","CART_SUCCESS","CART_FAIL","CART_CLEAR","authStart","type","authSuccess","payload","authFail","authReset","theme","createMuiTheme","palette","primary","main","secondary","contrastText","typography","h2","fontSize","useStyles","makeStyles","toTop","zIndex","position","bottom","backgroundColor","color","transition","breakpoints","up","right","BackToTop","showBelow","classes","useState","show","setShow","handleScroll","pageYOffset","useEffect","addEventListener","removeEventListener","IconButton","onClick","top","behavior","className","aria-label","component","PrivateRoute","Component","rest","useSelector","state","auth","render","props","pathname","to","from","Hoc","children","showError","response","data","linkText","textDecoration","cursor","Copyright","style","padding","Typography","variant","align","Date","getFullYear","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","width","submit","div","MyCheckbox","label","useField","field","FormControlLabel","control","Checkbox","MyTextfield","autoComplete","autoFocus","meta","errorText","touched","TextField","fullWidth","helperText","required","validationSchema","Yup","email","max","password","min","SignInForm","dispatch","useDispatch","status","scrollTo","Fragment","Container","maxWidth","CssBaseline","Avatar","onSubmit","post","withCredentials","then","res","history","push","catch","err","authLogin","initialValues","validateOnChange","values","id","name","show_password","Button","loading","CircularProgress","FormHelperText","Grid","container","item","xs","Box","mt","MyTextField","firstName","lastName","phoneNumber","address","password1","matches","password2","oneOf","SignUpForm","seller","authSignup","console","log","sm","justify","inputProps","Forgot","sending","sent","setState","handleEmailSubmit","shape","renderForm","p","enableReinitialize","fetchCart","cartSuccess","clearCart","cart","loadCart","cartJSON","JSON","parse","e","saveCart","setItem","getCart","link","text","IconBreadcrumbs","Breadcrumbs","icon","React","Children","toArray","map","cloneElement","dialog","AlertDialog","title","content","handleDone","handleDismiss","action","dismiss","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","buttons","justifyContent","checkmarkCircle","strokeDasharray","strokeDashoffset","strokeWidth","strokeMiterlimit","stroke","fill","animation","checkmark","height","borderRadius","boxShadow","checkmarkCheck","transformOrigin","strokeFashoffset","transform","AddedToCart","xmlns","viewBox","cx","cy","r","d","ScrollToTopOnMount","table","minWidth","textTransform","actions","items","minHeight","image","maxHeight","Cart","onDismiss","message","handleSnackbarClose","event","reason","handleRemove","option","cartIndex","findIndex","cartItem","parseInt","splice","removeCartItem","quantityUpdate","quantity","updateQuantity","handleChange","value","target","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","length","total","forEach","price","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","order_item","Hidden","smDown","src","alt","ram","storage","onChange","defaultValue","size","fontWeight","Link","renderCart","pagination","root","flexGrow","background","TabPanel","index","role","hidden","tabProps","ProductTab","productID","productTitle","description","manufacturer_url","setValue","AppBar","Tabs","newValue","Tab","List","ListItem","href","img","slider","discount","grey","addToCart","paddingTop","down","Product","discountPrice","disabled","setDisabled","dialogOpen","setDialogOpen","setDialog","get","match","_id","productType","imageURL1","authorId","createCartItem","screen","renderDialog","py","charAt","toUpperCase","slice","lg","dots","imageURL2","imageURL3","imageURL4","dense","ListItemText","Rating","readOnly","precision","processorName","processorDetail","displayDetails","FormControl","FormLabel","RadioGroup","Radio","Divider","selector","renderProduct","varaint","media","cardActions","cardContent","overflowY","listStyleType","overflow","whiteSpace","textOverflow","ProductCard","renderPrice","Card","CardActionArea","CardContent","gutterBottom","Truncate","lines","textAlign","ellipsis","listStyle","paddingLeft","processorDetail_","CardActions","nested","CustomizedListItem","heading","handleCheck","filters","checked","button","stopPropagation","Collapse","in","timeout","unmountOnExit","disablePadding","cat","ListItemIcon","edge","disableRipple","MyList","Object","keys","key","marginBottom","grid","ProductList","product_type","products","count","next","previous","list","brands","processors","screenSizes","categories","hideList","sort","ac","AbortController","displays","ordering","results","Math","round","abort","mb","md","breadcrumbs","generateHeader","direction","card","generateCards","new_password1","new_password2","ResetPassword","uid","success","handleTokenSubmit","row","paddingBottom","paddingRight","listItem","flexWrap","textField","marginLeft","marginRight","toolbar","toolbarIcon","mixins","appBar","drawer","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","drawerPaperClose","overflowX","appBarSpacer","inline","fixedHeight","detail","read","useButtonStyles","deliveryAddress","googleLocation","AddressForm","setCart","buttonClasses","Address","layout","stepper","Checkout","useBilling","activeStep","order","user","options","selectedBillingAddress","selectedShippingAddress","shippingDetail","billingDetail","checkoutData","setCheckoutData","Paper","checkoutState","setCheckoutState","Edit","saving","formData","details","setDetails","updatedFormData","preventDefault","handleSubmit","Account","scope","Orders","orders","setOrders","changeStatus","elementId","parentElement","orderId","result","innerText","i","arrayOfCart","element","Password","setPassword","oldPassword","newPassword1","newPassword2","resetForm","setSubmitting","old_password","errors","isSubmitting","ProfileList","UserProfile","Error","renderComponent","CartView","SpecificList","left","Item","imageURL","Home","setHeaders","autoplay","autoplaySpeed","arrows","mainDiv","Terms","terms","setTerms","contentURL","borderBottomColor","borderColor","input","CssTextField","withStyles","EmailForm","setData","InputProps","InputLabelProps","multiline","footer","Footer","MessageForm","LogoutAlertDialog","handleLogout","DialogContentText","navDisplayFlex","NavList","handleLogoutClick","mdUp","substr","mdDown","Badge","badgeContent","signedIn","search","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","Search","anchor","setResult","setLoading","term","setTerm","resultStyle","setResultStyle","timeoutId","setTimeout","clearTimeout","renderListItem","resultContent","discount_price","borderTop","InputBase","placeholder","onFocus","onBlur","innerDiv","searchDiv","SideDrawer","toggleDrawer","Drawer","box","logo","logoButton","first","second","Nav","shoppingCart","Toolbar","weblogo","lgUp","CookieConsent","visible","acceptOnScrollPercentage","handleAccept","Cookies","set","expires","rootNode","document","documentElement","body","scrollTop","scrollHeight","clientHeight","undefined","pageContainer","contentWrap","Layout","Lists","noSpace","BuyerOrders","filter","LaptopForm","myAlert","setMyAlert","productImages","setProductImages","formik","useFormik","brand","FormData","append","method","url","Boolean","InputLabel","Select","labelId","MenuItem","accept","multiple","newImage","files","prevImage","SellerProduct","BaseRouter","withRouter","path","exact","Content","SignIn","SignUp","Seller","App","ThemeProvider","INITIAL_STATE","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.501ccd01.chunk.js","sourcesContent":["let API_SERVER_VAL = \"\";\r\nconst dev = \"http://localhost:5000\";\r\nconst baseURL =\r\n  window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n\r\nswitch (process.env.NODE_ENV) {\r\n  case \"development\":\r\n    API_SERVER_VAL = baseURL;\r\n    break;\r\n  case \"production\":\r\n    API_SERVER_VAL = baseURL;\r\n    break;\r\n  default:\r\n    API_SERVER_VAL = baseURL;\r\n    break;\r\n}\r\n\r\nexport const API_SERVER = API_SERVER_VAL;\r\nexport default baseURL;\r\n","import { API_SERVER } from \"./setting\";\r\n\r\n// const apiURL = \"/api\"\r\n// export const endpoint = `${API_SERVER}${apiURL}`\r\n\r\nexport const endpoint = API_SERVER;\r\n\r\nexport const googleLogin = `/rest-auth/google/`;\r\nexport const addToCartURL = `/add-to-cart/`;\r\nexport const removeFromCartURL = (id) => `/remove-from-cart/${id}/delete/`;\r\nexport const orderSummaryURL = `/order-summary/`;\r\nexport const orderUserListURL = `/api/v1/user/orders/`;\r\nexport const addressURL = `/addresses/`;\r\nexport const addressCreateURL = `/addresses/create/`;\r\nexport const addressUpdateURL = (id) => `/addresses/${id}/update/`;\r\nexport const addressDeleteURL = (id) => `/addresses/${id}/delete/`;\r\nexport const userDetailsURL = `/user-details/`;\r\nexport const updateUserURL = `/api/v1/user/update`;\r\nexport const changePasswordURL = `/api/v1/user/passwordupdate`;\r\nexport const resetPasswordURL = `/rest-auth/password/reset/`;\r\nexport const confirmResetURL = `/rest-auth/password/reset/confirm/`;\r\nexport const brandsURL = (product) => `/brands/${product}/`;\r\nexport const processorsURL = `/processors/`;\r\nexport const displaysURL = `/displays/`;\r\nexport const categoriesURL = `/categories/`;\r\nexport const earningsURL = (when) => `/earnings/${when}/`;\r\nexport const messageCreateURL = `/messages/create/`;\r\nexport const contentURL = (content) => `/content/${content}/`;\r\nexport const checkoutURL = `/checkout/`;\r\nexport const specificListURL = (label) => `/list/${label}/`;\r\nexport const productURL = (slug) => `/product/${slug}/`;\r\nexport const productsListURL = (product_type) => `/products/${product_type}/`;\r\nexport const quantityUpdateURL = `/order/quantity/`;\r\nexport const ratingsURL = `/ratings/`;\r\nexport const ratingCreateURL = `/ratings/create/`;\r\nexport const searchURL = `/api/v1/search/products`;\r\nexport const filterURL = `/filter/products`;\r\n// export const specialURL = `/special/products`;\r\nexport const specialURL = `/api/v1/special/products`;\r\nexport const countriesURL = `/countries/`;\r\nexport const headersURL = `/api/v1/auth/headers`;\r\n\r\n// Admin specific\r\nexport const orderListURL = `/orders/`;\r\nexport const orderFilterURL = `/orders/filter`;\r\nexport const orderDetailURL = (id) => `/order/${id}/`;\r\nexport const orderUpdateURL = (id) => `/order/${id}/update/`;\r\nexport const shipmentDetailURL = `/shipment`;\r\nexport const shipmentCreateURL = `/shipment/create/`;\r\nexport const messagesURL = `/messages/`;\r\nexport const messageUpdateURL = (id) => `/messages/${id}/update/`;\r\nexport const messageUnreadURL = `/messages/unread/`;\r\nexport const notificationsURL = `/notifications/`;\r\nexport const notificationUpdateURL = (id) => `/notifications/${id}/update/`;\r\nexport const notificationUpdateAllURL = `/notifications/update/all`;\r\nexport const maintenanceUpdateURL = `/maintenance/1/update/`;\r\nexport const maintenanceURL = `/maintenance/`;\r\nexport const discountURL = `/discount/`;","import axios from \"axios\";\r\nimport { endpoint } from \"../constants\";\r\nimport Qs from \"qs\";\r\n\r\n\r\nexport const store = axios.create({\r\n  baseURL: endpoint,\r\n});\r\n\r\nexport const authStore = axios.create({\r\n  baseURL: endpoint,\r\n});\r\n\r\nexport const productApi = axios.create({\r\n  baseURL: endpoint,\r\n  paramsSerializer: (params) => Qs.stringify(params, { arrayFormat: \"repeat\" }),\r\n});\r\n\r\nauthStore.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Token ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();","export const AUTH_START = \"AUTH_START\"\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\r\nexport const AUTH_FAIL = \"AUTH_FAIL\"\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\r\nexport const AUTH_RESET = \"AUTH_RESET\"\r\n\r\nexport const CART_START = \"CART_START\"\r\nexport const CART_SUCCESS = \"CART_SUCCESS\"\r\nexport const CART_FAIL = \"CART_FAIL\"\r\nexport const CART_CLEAR = \"CART_CLEAR\"\r\n\r\nexport const SET_NAV = \"SET_NAV\"\r\nexport const SET_PROFILE = \"SET_PROFILE\"\r\n","import { store } from \"../../apis/store\";\r\nimport history from \"../../history\";\r\n\r\nimport {\r\n  AUTH_START,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  AUTH_LOGOUT,\r\n  AUTH_RESET,\r\n} from \"./types\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token) => {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    payload: token,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: AUTH_FAIL,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const authReset = () => {\r\n  return {\r\n    type: AUTH_RESET,\r\n  };\r\n};\r\n\r\nexport const logout = (location) => {\r\n  // localStorage.removeItem(\"token\");\r\n  // localStorage.removeItem(\"expirationDate\");\r\n  store\r\n    .post(\r\n      \"api/v1/auth/logout\",\r\n      {},\r\n      {\r\n        withCredentials: true,\r\n      }\r\n    )\r\n    .then((res) => {\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n    });\r\n  history.push(\"/\");\r\n  return {\r\n    type: AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\n// Helper function\r\n// export const checkAuthTimeout = (expirationTime) => {\r\n//   return (dispatch) => {\r\n//     setTimeout(() => {\r\n//       dispatch(logout());\r\n//     }, expirationTime * 1000);\r\n//   };\r\n// };\r\n\r\n// export const authLogin = (email, password, from, remember) => (dispatch) => {\r\nexport const authLogin = (email, password, from) => (dispatch) => {\r\n  // console.log({email,password ,from});\r\n  dispatch(authStart());\r\n  store\r\n    .post(\r\n      \"/api/v1/auth/login\",\r\n      {\r\n        email: email,\r\n        // username: email, // Because I have setup the backend to use email as a username\r\n        password: password,\r\n      },\r\n      {\r\n        withCredentials: true,\r\n      }\r\n    )\r\n    .then((res) => {\r\n      // console.log(res.data);\r\n      window.scrollTo(0, 0);\r\n      const token = res.data;\r\n      dispatch(authSuccess(token));\r\n      // const token = res.data.key;\r\n      // localStorage.setItem(\"token\", token);\r\n      // dispatch(authSuccess(token));\r\n      // if (remember === true) {\r\n      //   localStorage.setItem(\"remember\", true);\r\n      //   const expirationDate = new Date(new Date().getTime() + 1296000000); // 15 days\r\n      //   localStorage.setItem(\"expirationDate\", expirationDate);\r\n      // } else {\r\n      //   const expirationDate = new Date(new Date().getTime() + 3600000); // 1 hour\r\n      //   localStorage.setItem(\"expirationDate\", expirationDate);\r\n      // }\r\n      // dispatch(checkAuthTimeout(3600));\r\n\r\n      history.push(from);\r\n    })\r\n    .catch((err) => {\r\n      window.scrollTo(0, 0);\r\n      // console.log(err.response.data);\r\n      dispatch(authFail(err));\r\n    });\r\n};\r\n\r\nexport const authSignup =\r\n  (\r\n    email,\r\n    password1,\r\n    password2,\r\n    firstName,\r\n    lastName,\r\n    phoneNumber,\r\n    address,\r\n    from,\r\n    seller\r\n  ) =>\r\n  (dispatch) => {\r\n    dispatch(authStart());\r\n    store\r\n      .post(\"/api/v1/auth/signup\", {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        phoneNumber: phoneNumber,\r\n        address: address,\r\n        password1: password1,\r\n        password2: password2,\r\n        seller: seller,\r\n      })\r\n      .then((res) => {\r\n        window.scrollTo(0, 0);\r\n        // console.log(res.data);\r\n        // const token = res.data.key;\r\n        // localStorage.setItem(\"token\", token);\r\n        // dispatch(authSuccess(token));\r\n        // if (remember === true) {\r\n        //   localStorage.setItem(\"remember\", true);\r\n        //   const expirationDate = new Date(new Date().getTime() + 1296000000); // 15 days\r\n        //   localStorage.setItem(\"expirationDate\", expirationDate);\r\n        // } else {\r\n        //   const expirationDate = new Date(new Date().getTime() + 3600000); // 1 hour\r\n        //   localStorage.setItem(\"expirationDate\", expirationDate);\r\n        // }\r\n\r\n        // dispatch(checkAuthTimeout(3600));\r\n        history.push(from);\r\n      })\r\n      .catch((error) => {\r\n        window.scrollTo(0, 0);\r\n        // console.log(error.response.data);\r\n        dispatch(authFail(error));\r\n        // setTimeout(() => dispatch(authReset()), 3000);\r\n      });\r\n  };\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    // const token = \"add\"\r\n    // const token = localStorage.getItem(\"token\");\r\n    // if (token === undefined) {\r\n    //   dispatch(logout());\r\n    // } else {\r\n    //   const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n    //   const remember = localStorage.getItem(\"remember\");\r\n    //   if (expirationDate <= new Date() && remember === false) {\r\n    //     dispatch(logout());\r\n    //   } else {\r\n    // console.log(\"hehehe\");\r\n    // dispatch(authSuccess(token));\r\n    //     dispatch(\r\n    //       checkAuthTimeout(\r\n    //         (expirationDate.getTime() - new Date().getTime()) / 1000\r\n    //       )\r\n    //     );\r\n    //   }\r\n    // }\r\n    store\r\n      .get(\"/api/v1/tokenverify\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        const token = {\r\n          id: res.data.id,\r\n          firstName: res.data.firstName,\r\n          lastName: res.data.lastName,\r\n          email: res.data.email,\r\n          phoneNumber: res.data.phoneNumber,\r\n          address: res.data.address,\r\n          seller: res.data.seller,\r\n        };\r\n        console.log({ token });\r\n        dispatch(authSuccess(token));\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response.data);\r\n        // dispatch(logout());\r\n      });\r\n  };\r\n};\r\n\r\nexport const socialLogin = (key, from, remember) => (dispatch) => {\r\n  // const token = key;\r\n  // localStorage.setItem(\"token\", token);\r\n  // dispatch(authSuccess(token));\r\n  // if (remember === true) {\r\n  //   localStorage.setItem(\"remember\", true);\r\n  //   const expirationDate = new Date(new Date().getTime() + 1296000000); // 15 days\r\n  //   localStorage.setItem(\"expirationDate\", expirationDate);\r\n  // } else {\r\n  //   localStorage.setItem(\"remember\", true);\r\n  //   const expirationDate = new Date(new Date().getTime() + 3600000); // 1 hour\r\n  //   localStorage.setItem(\"expirationDate\", expirationDate);\r\n  // }\r\n  // dispatch(checkAuthTimeout(3600));\r\n  // history.push(from);\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core\"\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#2d4059\",\r\n    },\r\n    secondary: {\r\n      main: \"#ea5455\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n  typography: {\r\n    h2: {\r\n      fontSize: \"3.75rem\",\r\n      \"@media (max-width: 960px)\": {\r\n        fontSize: \"2rem\",\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toTop: {\r\n        zIndex: 2,\r\n        position: 'fixed',\r\n        bottom: '2vh',\r\n        backgroundColor: '#DCDCDC',\r\n        color: 'black',\r\n        \"&:hover, &.Mui-focusVisible\": {\r\n            transition: '0.3s',\r\n            color: '#397BA6',\r\n            backgroundColor: '#DCDCDC'\r\n        },\r\n        [theme.breakpoints.up('xs')]: {\r\n            right: '5%',\r\n            backgroundColor: 'rgb(220,220,220,0.7)',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            right: '6.5%',\r\n        },\r\n    }\r\n})\r\n)\r\n\r\nconst BackToTop = ({\r\n    showBelow,\r\n}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [show, setShow] = useState(showBelow ? false : true)\r\n\r\n    const handleScroll = () => {\r\n        if (window.pageYOffset > showBelow) {\r\n            if (!show) setShow(true)\r\n        } else {\r\n            if (show) setShow(false)\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        window[`scrollTo`]({ top: 0, behavior: `smooth` })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (showBelow) {\r\n            window.addEventListener(`scroll`, handleScroll)\r\n            return () => window.removeEventListener(`scroll`, handleScroll)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {show &&\r\n                <IconButton onClick={handleClick} className={classes.toTop} aria-label=\"to top\" component=\"span\">\r\n                    <ExpandLessIcon />\r\n                </IconButton>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default BackToTop","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  // const token = \"add\"\r\n  const token = useSelector((state) => state.auth.token);\r\n  // console.log(token);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (props.location.pathname === \"/checkout\") {\r\n          props.location.pathname = \"/cart\";\r\n        }\r\n        return token ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","const Hoc = props => props.children\r\n\r\nexport default Hoc","import { useEffect, useRef } from \"react\"\r\n\r\nexport const useTaskBeforeUnmount = (calback, data) => {\r\n  const mounted = useRef(null)\r\n\r\n  useEffect(() => {\r\n    mounted.current = true\r\n    return () => {\r\n      mounted.current = false\r\n    }\r\n  }, [])\r\n\r\n  useEffect(\r\n    () => () => {\r\n      if (!mounted.current) {\r\n        calback(data)\r\n      }\r\n    },\r\n    [calback, data]\r\n  )\r\n}\r\n\r\nexport const showError = (error) => {\r\n  try {\r\n    // for (const key in error.response.data) {\r\n    //   console.log(key);\r\n      return error.response.data\r\n    // }\r\n  } catch {\r\n    return \"An Error Occurred\"\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  linkText: {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}))\r\n\r\nconst Copyright = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div style={{ padding: 10 }}>\r\n      <Typography variant=\"body2\" color=\"inherit\" align=\"center\">\r\n        {\"Copyright © \"}\r\n        <Link to=\"/\" className={classes.linkText}>\r\n          Alamal Computers\r\n        </Link>{\" \"}\r\n        {new Date().getFullYear()}\r\n        {\".\"}\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Copyright\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authLogin, authReset } from \"../../store/actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showError } from \"../../utils\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Copyright from \"../../components/Copyright\";\r\nimport Google from \"./Google\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  div: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MyCheckbox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nconst MyTextfield = ({ label, autoComplete, autoFocus, type, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n  return (\r\n    <TextField\r\n      margin=\"normal\"\r\n      fullWidth\r\n      autoComplete={autoComplete}\r\n      autoFocus={autoFocus}\r\n      label={label}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      type={type}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string()\r\n    .email(\"This must be a valid email\")\r\n    .required(\"Required\")\r\n    .max(254, \"Can't be more than 254 characters\"),\r\n  password: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"password should be 8 characters long\"),\r\n});\r\n\r\nconst SignInForm = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const status = useSelector((state) => state.auth);\r\n  // This error variable is for google login error\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(authReset());\r\n  }, []);\r\n\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const handleSubmit = ({ email, password }) => {\r\n    dispatch(authLogin(email, password, from));\r\n  };\r\n  // const handleSubmit = ({ email, password, remember }) => {\r\n  //   dispatch(authLogin(email, password, from, remember))\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {status.error ? (\r\n            <Typography variant=\"h5\" color=\"error\">\r\n              {showError(status.error)}\r\n            </Typography>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            // initialValues={{ email: \"\", password: \"\", remember: \"\" }}\r\n            validateOnChange={true}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({ values }) => (\r\n              <Form className={classes.form}>\r\n                <MyTextfield\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                />\r\n                <MyTextfield\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type={values.show_password ? \"text\" : \"password\"}\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                />\r\n                <MyCheckbox name=\"show_password\" label=\"Show password\" />\r\n                {/* <MyCheckbox label=\"Remember me\" name=\"remember\" /> */}\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  {status.loading ? (\r\n                    <CircularProgress color=\"secondary\" />\r\n                  ) : (\r\n                    \"Sign In\"\r\n                  )}\r\n                </Button>\r\n                {/* <Google\r\n                  from={from}\r\n                  remember={values.remember}\r\n                  setError={setError}\r\n                  error={error}\r\n                /> */}\r\n                {error && <FormHelperText error={true}>{error}</FormHelperText>}\r\n                <div className={classes.div}>\r\n                  <Grid container spacing={6}>\r\n                    <Grid item xs>\r\n                      <Link to=\"/reset-password\" variant=\"body2\">\r\n                        {\"Forgot password?\"}\r\n                      </Link>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Link to=\"/signup\">\r\n                        {\"Don't have an account? Sign Up\"}\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authSignup, authReset } from \"../../store/actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showError } from \"../../utils\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Google from \"./Google\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  div: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MyCheckbox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nconst MyTextField = ({ label, autoComplete, autoFocus, type, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  return (\r\n    <TextField\r\n      margin=\"normal\"\r\n      fullWidth\r\n      label={label}\r\n      autoFocus={autoFocus}\r\n      autoComplete={autoComplete}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      type={type}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  firstName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\")\r\n    .min(3, \"First name should be at least 3 characters long\"),\r\n  lastName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\")\r\n    .min(3, \"Last name should be at least 3 characters long\"),\r\n  email: Yup.string()\r\n    .email(\"This must be a valid email\")\r\n    .required(\"Required\")\r\n    .max(254, \"Can't be more than 254 characters\"),\r\n  phoneNumber: Yup.string()\r\n    .required(\"Required\")\r\n    .min(10, \"Phone number should be atleast of 11 numbers \"),\r\n  address: Yup.string()\r\n    .required(\"Required\")\r\n    .min(18, \"Can't be less than 18 characters\"),\r\n  password1: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Must be at least 8 characters long\")\r\n    .matches(\r\n      /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must have at least one number, one lowercase and one uppercase letter\"\r\n    ),\r\n  password2: Yup.string().oneOf(\r\n    [Yup.ref(\"password1\"), null],\r\n    \"Passwords must match\"\r\n  ),\r\n});\r\n\r\nconst SignUpForm = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const status = useSelector((state) => state.auth);\r\n  const [error, setError] = useState(null);\r\n  const { from } = location.state || { from: { pathname: \"/signin\" } };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(authReset());\r\n  }, []);\r\n\r\n  const handleSubmit = ({\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    phoneNumber,\r\n    address,\r\n    password1,\r\n    password2,\r\n    seller,\r\n  }) => {\r\n    dispatch(\r\n      authSignup(\r\n        email,\r\n        password1,\r\n        password2,\r\n        firstName,\r\n        lastName,\r\n        phoneNumber,\r\n        address,\r\n        from,\r\n        seller\r\n      )\r\n    );\r\n    console.log(\r\n      email,\r\n      password1,\r\n      password2,\r\n      firstName,\r\n      lastName,\r\n      phoneNumber,\r\n      address,\r\n      from,\r\n      seller\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {status.error ? (\r\n            <Typography variant=\"h5\" color=\"error\">\r\n              {showError(status.error)}\r\n            </Typography>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Formik\r\n            onSubmit={handleSubmit}\r\n            validationSchema={validationSchema}\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              phoneNumber: \"\",\r\n              address: \"\",\r\n              password1: \"\",\r\n              password2: \"\",\r\n              seller: false,\r\n            }}\r\n          >\r\n            {({ values }) => (\r\n              <Form className={classes.form}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextField\r\n                      autoComplete=\"fname\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"\r\n                      label=\"First Name\"\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextField\r\n                      id=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      name=\"lastName\"\r\n                      autoComplete=\"lname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      id=\"phoneNumber\"\r\n                      label=\"Phone Number\"\r\n                      name=\"phoneNumber\"\r\n                      type=\"number\"\r\n                      autoComplete=\"phoneNumber\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      type=\"text\"\r\n                      id=\"address\"\r\n                      label=\"Your Address\"\r\n                      name=\"address\"\r\n                      autoComplete=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      name=\"password1\"\r\n                      label=\"Password\"\r\n                      type={values.show_password ? \"text\" : \"password\"}\r\n                      id=\"password1\"\r\n                      autoComplete=\"current-password\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      name=\"password2\"\r\n                      label=\"Password(again)\"\r\n                      type={values.show_password ? \"text\" : \"password\"}\r\n                      id=\"password2\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyCheckbox name=\"show_password\" label=\"Show password\" />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyCheckbox name=\"seller\" label=\"Sign up as a seller\" />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  {status.loading ? (\r\n                    <CircularProgress color=\"secondary\" />\r\n                  ) : (\r\n                    \"Sign Up\"\r\n                  )}\r\n                </Button>\r\n                {/* <Google\r\n                  from={from}\r\n                  setError={setError}\r\n                  remember={values.remember}\r\n                  error={error}\r\n                /> */}\r\n                {error && <FormHelperText error={true}>{error}</FormHelperText>}\r\n                <div className={classes.div}>\r\n                  <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                      <Link to=\"/signin\">Already have an account? Sign in</Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { store } from \"../../apis/store\"\r\nimport { resetPasswordURL } from \"../../constants\"\r\nimport { Formik, Form, useField } from \"formik\"\r\nimport * as Yup from \"yup\"\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport Copyright from \"../../components/Copyright\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\n\r\nconst MyTextField = ({\r\n  label,\r\n  autoFocus,\r\n  autoComplete,\r\n  inputProps,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(props)\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\"\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      autoFocus={autoFocus}\r\n      autoComplete={autoComplete}\r\n      inputProps={inputProps}\r\n      fullWidth\r\n    />\r\n  )\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nexport default function Forgot() {\r\n  const classes = useStyles()\r\n  const [state, setState] = useState({\r\n    sending: false,\r\n    sent: false,\r\n    error: null,\r\n    email: \"\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const handleEmailSubmit = (values) => {\r\n    setState({\r\n      ...state,\r\n      sending: true,\r\n    })\r\n    store\r\n      .post(resetPasswordURL, { email: values.email })\r\n      .then((response) => {\r\n        setState({\r\n          sending: false,\r\n          sent: true,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setState({\r\n          ...state,\r\n          error: error,\r\n        })\r\n      })\r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"Required\").email(\"Must be a valid email\"),\r\n  })\r\n\r\n  const renderForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Box p={2}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Enter Your Email\r\n          </Typography>\r\n        </Box>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={{ email: state.email }}\r\n          onSubmit={handleEmailSubmit}\r\n          validateOnChange={true}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {() => (\r\n            <Form>\r\n              <MyTextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Send\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const renderElements = () => {\r\n    if (state.sending === false && state.sent === false) {\r\n      return <React.Fragment>{renderForm()}</React.Fragment>\r\n    } else if (state.sending === true && state.sent === false) {\r\n      return <CircularProgress />\r\n    } else if (state.error) {\r\n      return (\r\n        <React.Fragment>\r\n          <Typography variant=\"h4\" component=\"p\" color=\"error\">\r\n            An error occurred while submitting the request\r\n          </Typography>\r\n          {renderForm()}\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <Typography variant=\"h5\" component=\"p\">\r\n          Password Reset Email sent, check your inbox!\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        {renderElements()}\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","import { CART_START, CART_SUCCESS, CART_FAIL, CART_CLEAR } from \"./types\"\r\nimport { authStore } from \"../../apis/store\"\r\nimport { orderSummaryURL } from \"../../constants\"\r\n\r\nexport const cartStart = () => {\r\n  return {\r\n    type: CART_START,\r\n  }\r\n}\r\n\r\nexport const cartSuccess = (data) => {\r\n  return {\r\n    type: CART_SUCCESS,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const cartFail = (error) => {\r\n  return {\r\n    type: CART_FAIL,\r\n    payload: error,\r\n  }\r\n}\r\n\r\nexport const cartClear = () => {\r\n  return {\r\n    type: CART_CLEAR,\r\n  }\r\n}\r\n\r\nexport const fetchCart = (data) => {\r\n  return (dispatch) => {\r\n    // dispatch(cartStart())\r\n    // authStore\r\n    //   .get(orderSummaryURL)\r\n    //   .then((res) => {\r\n        dispatch(cartSuccess(data))\r\n      // })\r\n      // .catch((err) => {\r\n      //   dispatch(cartFail(err))\r\n      // })\r\n  }\r\n}\r\n\r\nexport const clearCart = () => {\r\n  return (dispatch) => {\r\n    dispatch(cartClear())\r\n  }\r\n}\r\n","let cart = [];\r\n\r\nconst loadCart = () => {\r\n  const cartJSON = localStorage.getItem(\"cart\");\r\n  try {\r\n    return cartJSON !== null ? JSON.parse(cartJSON) : [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveCart = () => {\r\n  localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n};\r\n\r\nconst getCart = () => {\r\n  return loadCart();\r\n};\r\n\r\nconst createCartItem = (product, option) => {\r\n  const cartIndex = cart.findIndex((cartItem) => {\r\n    return cartItem.id === product._id;\r\n    // if (option) {\r\n    // return cartItem.id === product._id;\r\n    // } else {\r\n    //   return cartItem.id === product._id\r\n    // }\r\n  });\r\n\r\n  if (cartIndex === -1) {\r\n    // const config = product.find(\r\n    //   (element) => element.id === parseInt(option)\r\n    // )\r\n    // let price = 0\r\n    // if (config) {\r\n    //   if (config.discountPrice) {\r\n    //     price = config.discountPrice\r\n    //   } else {\r\n    //     price = config.price\r\n    //   }\r\n    // } else {\r\n    //   if (product.discountPrice) {\r\n    //     price = product.discountPrice\r\n    //   } else {\r\n    //     price = product.price\r\n    //   }\r\n    // }\r\n    cart.push({\r\n      id: product._id,\r\n      title: product.title,\r\n      price: product.price,\r\n      image: product.imageURL1,\r\n      // config: config,\r\n      slug: product._id,\r\n      quantity: 1,\r\n      authorId: product.authorId,\r\n    });\r\n  } else {\r\n    cart[cartIndex].quantity += 1;\r\n  }\r\n  saveCart();\r\n};\r\n\r\nconst updateQuantity = (slug, quantity, config) => {\r\n  const cartIndex = cart.findIndex((cartItem) => {\r\n    if (config) {\r\n      return cartItem.slug === slug && cartItem.config.id === parseInt(config);\r\n    } else {\r\n      return cartItem.slug === slug;\r\n    }\r\n  });\r\n\r\n  if (cartIndex > -1) {\r\n    cart[cartIndex].quantity = parseInt(quantity);\r\n    saveCart();\r\n  }\r\n};\r\n\r\nconst removeCartItem = (id, option) => {\r\n  const cartIndex = cart.findIndex((cartItem) => {\r\n    if (option) {\r\n      return cartItem.id === id && cartItem.config.id === parseInt(option);\r\n    } else {\r\n      return cartItem.id === id;\r\n    }\r\n  });\r\n\r\n  if (cartIndex > -1) {\r\n    cart.splice(cartIndex, 1);\r\n    saveCart();\r\n  }\r\n};\r\n\r\nconst emptyCart = () => {\r\n  localStorage.setItem(\"cart\", []);\r\n};\r\n\r\ncart = loadCart();\r\n\r\nexport { getCart, createCartItem, removeCartItem, emptyCart, updateQuantity };\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport { Link } from 'react-router-dom'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    link: {\r\n        display: 'flex',\r\n        textDecoration: 'none',\r\n        color: theme.palette.text.primary,\r\n        '&:hover': {\r\n            color: theme.palette.text.secondary\r\n        }\r\n    },\r\n}))\r\n\r\n\r\nexport default function IconBreadcrumbs(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n            <Link color=\"inherit\" to=\"/\" className={classes.link}>\r\n                <HomeIcon className={classes.icon} />\r\n                Al-Amal\r\n            </Link>\r\n            {React.Children.toArray(props.children).map(link => React.cloneElement(link, { className: classes.link }))}\r\n        </Breadcrumbs>\r\n    )\r\n}","import React, { useState } from \"react\"\r\n\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport DialogActions from \"@material-ui/core/DialogActions\"\r\nimport DialogContent from \"@material-ui/core/DialogContent\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialog: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n}))\r\n\r\nconst AlertDialog = ({\r\n  title,\r\n  content,\r\n  handleDone,\r\n  handleDismiss,\r\n  action,\r\n  dismiss,\r\n}) => {\r\n  const [open, setOpen] = useState(true)\r\n  const classes = useStyles()\r\n\r\n  const handleClose = () => {\r\n    handleDismiss()\r\n    setOpen(false)\r\n  }\r\n  const handleDoneClick = () => {\r\n    handleDone()\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth={true}\r\n        maxWidth=\"lg\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n\r\n        <DialogContent className={classes.dialog}>{content}</DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            {dismiss}\r\n          </Button>\r\n          <Button onClick={handleDoneClick} color=\"primary\" autoFocus>\r\n            {action}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertDialog\r\n","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport { blue } from \"@material-ui/core/colors\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttons: {\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  checkmarkCircle: {\r\n    strokeDasharray: \"166\",\r\n    strokeDashoffset: \"166\",\r\n    strokeWidth: \"2\",\r\n    strokeMiterlimit: \"10\",\r\n    stroke: \"#7ac142\",\r\n    fill: \"none\",\r\n    animation: \"$stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards\",\r\n  },\r\n\r\n  checkmark: {\r\n    width: \"56px\",\r\n    height: \"56px\",\r\n    borderRadius: \"50%\",\r\n    display: \"block\",\r\n    strokeWidth: \"2\",\r\n    stroke: \"#fff\",\r\n    strokeMiterlimit: \"10\",\r\n    margin: \"0 auto 20px auto\",\r\n    boxShadow: \"inset 0px 0px 0px #7ac142\",\r\n    animation:\r\n      \"$fill .4s ease-in-out .4s forwards, scale .3s ease-in-out .9s both\",\r\n  },\r\n\r\n  checkmarkCheck: {\r\n    transformOrigin: \"50% 50%\",\r\n    strokeDasharray: \"48\",\r\n    strokeFashoffset: \"48\",\r\n    animation: \"$stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards\",\r\n  },\r\n\r\n  \"@keyframes stroke\": {\r\n    \"100%\": {\r\n      strokeDashoffset: \"0\",\r\n    },\r\n  },\r\n  \"@keyframes scale\": {\r\n    \"0%, 100%\": {\r\n      transform: \"none\",\r\n    },\r\n    \"50%\": {\r\n      transform: \"scale3d(1.1, 1.1, 1)\",\r\n    },\r\n  },\r\n  \"@keyframes fill\": {\r\n    \"100%\": {\r\n      boxShadow: \"inset 0px 0px 0px 30px #7ac142\",\r\n    },\r\n  },\r\n}))\r\n\r\nconst AddedToCart = ({ open, setOpen }) => {\r\n  const classes = useStyles()\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Item Added to Cart</DialogTitle>\r\n      <div>\r\n        <svg\r\n          className={classes.checkmark}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 52 52\"\r\n        >\r\n          <circle\r\n            className={classes.checkmarkCircle}\r\n            cx=\"26\"\r\n            cy=\"26\"\r\n            r=\"25\"\r\n            fill=\"none\"\r\n          />\r\n          <path\r\n            className={classes.checkmarkCheck}\r\n            fill=\"none\"\r\n            d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <div className={classes.buttons}>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddedToCart\r\n","import { useEffect } from \"react\"\r\n\r\nconst ScrollToTopOnMount = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  })\r\n\r\n  return null\r\n}\r\n\r\nexport default ScrollToTopOnMount\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCart, removeCartItem, updateQuantity } from \"../cartLocal\";\r\nimport { authStore } from \"../apis/store\";\r\nimport { fetchCart } from \"../store/actions/cart\";\r\nimport { removeFromCartURL, quantityUpdateURL } from \"../constants\";\r\nimport ScrollToTopOnMount from \"../components/ScrollToTopOnMount\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { showError } from \"../utils\";\r\nimport { Hidden } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: \"100%\",\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  actions: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  items: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-start\",\r\n      minHeight: 60,\r\n    },\r\n  },\r\n  image: {\r\n    maxWidth: 64,\r\n    maxHeight: 64,\r\n  },\r\n}));\r\n\r\nconst Cart = ({ onDismiss }) => {\r\n  const classes = useStyles();\r\n  // let cart = useSelector((state) => state.cart)\r\n  const cart = getCart();\r\n  const [state, setState] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  // const token = localStorage.getItem(\"token\")\r\n  // if (!token) {\r\n  // cart = getCart()\r\n  // }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    console.log(cart);\r\n  }, []);\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    // if (token) {\r\n    //   authStore\r\n    //     .delete(removeFromCartURL(id))\r\n    //     .then((response) => {\r\n    //       dispatch(fetchCart());\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       setState({\r\n    //         error: true,\r\n    //         message: error,\r\n    //       });\r\n    //     });\r\n    // } else {\r\n      removeCartItem(id);\r\n      dispatch(fetchCart());\r\n    // }\r\n  };\r\n\r\n  const renderActions = () => {\r\n    return (\r\n      <div className={classes.actions}>\r\n        <Grid container justify=\"space-between\">\r\n          <Grid item>\r\n            {onDismiss ? (\r\n              <Button onClick={onDismiss} variant=\"contained\" color=\"default\">\r\n                <NavigateBeforeIcon /> Continue Shopping\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                component={Link}\r\n                to=\"/\"\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n              >\r\n                <NavigateBeforeIcon />\r\n                Continue Shopping\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              component={Link}\r\n              to=\"/checkout\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Checkout\r\n              <NavigateNextIcon />\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const quantityUpdate = (slug, config, quantity) => {\r\n    // const token = localStorage.getItem(\"token\");\r\n    // if (token) {\r\n    //   authStore\r\n    //     .post(quantityUpdateURL, { slug, config, quantity })\r\n    //     .then((res) => {\r\n    //       dispatch(fetchCart());\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       dispatch(fetchCart());\r\n    //       setState({ error: true, message: err });\r\n    //     });\r\n    // } else {\r\n      updateQuantity(slug, config, quantity);\r\n      dispatch(fetchCart());\r\n    // }\r\n  };\r\n\r\n  const handleChange = (e, slug, config) => {\r\n    const value = e.target.value;\r\n    quantityUpdate(slug, value, config);\r\n  };\r\n\r\n  const getPrice = (quantity, price) => {\r\n    return quantity * price;\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Typography variant=\"body1\">The cart is empty.</Typography>\r\n        <Box mt={2}>\r\n          <Link to=\"/\" className={classes.linkText}>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Continue Shopping\r\n            </Button>\r\n          </Link>\r\n        </Box>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // const renderOnlineTable = () => {\r\n  //   return (\r\n  //     <TableContainer>\r\n  //       <Table aria-label=\"spanning table\">\r\n  //         <TableHead>\r\n  //           <TableRow>\r\n  //             <TableCell>Items</TableCell>\r\n  //             <TableCell align=\"right\">Quantity</TableCell>\r\n  //             <TableCell align=\"right\">Price</TableCell>\r\n  //             <TableCell align=\"right\" />\r\n  //           </TableRow>\r\n  //         </TableHead>\r\n  //         <TableBody>\r\n  //           {cart.shoppingCart.items.map((order_item) => {\r\n  //             return (\r\n  //               <TableRow key={order_item.id}>\r\n  //                 <TableCell className={classes.items}>\r\n  //                   <Hidden smDown>\r\n  //                     <img\r\n  //                       src={order_item.item.images[0].image}\r\n  //                       className={classes.image}\r\n  //                       alt=\"Product\"\r\n  //                     />\r\n  //                     &nbsp; &nbsp; &nbsp;\r\n  //                   </Hidden>\r\n  //                   <div>\r\n  //                     {\" \"}\r\n  //                     {order_item.item.title}{\" \"}\r\n  //                     {order_item.config\r\n  //                       ? `${order_item.config.ram} + ${order_item.config.storage}`\r\n  //                       : \"\"}\r\n  //                   </div>\r\n  //                 </TableCell>\r\n  //                 <TableCell align=\"right\">\r\n  //                   <TextField\r\n  //                     type=\"number\"\r\n  //                     onChange={(e) => {\r\n  //                       const config = order_item.config;\r\n  //                       if (config === null) {\r\n  //                         handleChange(e, order_item.item.slug, config);\r\n  //                       } else {\r\n  //                         handleChange(\r\n  //                           e,\r\n  //                           order_item.item.slug,\r\n  //                           order_item.config.id\r\n  //                         );\r\n  //                       }\r\n  //                     }}\r\n  //                     defaultValue={order_item.quantity}\r\n  //                     size=\"small\"\r\n  //                   />\r\n  //                 </TableCell>\r\n  //                 <TableCell align=\"right\">{order_item.final_price}</TableCell>\r\n  //                 <TableCell align=\"right\">\r\n  //                   <IconButton onClick={(e) => handleRemove(order_item.id)}>\r\n  //                     <ClearIcon />\r\n  //                   </IconButton>\r\n  //                 </TableCell>\r\n  //               </TableRow>\r\n  //             );\r\n  //           })} \r\n  //           <TableRow>\r\n  //             <TableCell align=\"right\" />\r\n  //             <TableCell align=\"right\" style={{ fontWeight: 500 }}>\r\n  //               Shipping\r\n  //             </TableCell>\r\n  //             <TableCell align=\"right\">\r\n  //               {cart.shoppingCart.shipping_cost}\r\n  //             </TableCell>\r\n  //             <TableCell align=\"right\" />\r\n  //           </TableRow>\r\n  //           <TableRow>\r\n  //             <TableCell align=\"right\" />\r\n  //             <TableCell align=\"right\" style={{ fontWeight: 500 }}>\r\n  //               Total\r\n  //             </TableCell>\r\n  //             <TableCell align=\"right\">{cart.shoppingCart.total}</TableCell>\r\n  //             <TableCell align=\"right\" />\r\n  //           </TableRow>\r\n  //         </TableBody>\r\n  //       </Table>\r\n  //     </TableContainer>\r\n  //   );\r\n  // };\r\n\r\n  const renderCart = () => {\r\n    // if (cart !== null && cart.shoppingCart !== undefined) {\r\n    //   if (cart.loading === true) {\r\n    //     return <CircularProgress />;\r\n    //   } else if (cart.error) {\r\n    //     return (\r\n    //       <React.Fragment>\r\n    //         {showError(cart.error) === \"Not found.\" ? (\r\n    //           renderEmpty()\r\n    //         ) : (\r\n    //           <Typography variant=\"body1\">{showError(cart.error)}</Typography>\r\n    //         )}\r\n    //       </React.Fragment>\r\n    //     );\r\n    //   } else if (\r\n    //     cart.shoppingCart !== null &&\r\n    //     cart.shoppingCart.items !== null\r\n    //   ) {\r\n    //     if (cart.shoppingCart.items.length === 0) {\r\n    //       return renderEmpty();\r\n    //     }\r\n    //     return (\r\n    //       <React.Fragment>\r\n    //         {renderOnlineTable()}\r\n    //         {renderActions()}\r\n    //       </React.Fragment>\r\n    //     );\r\n    //   } else {\r\n    //     return renderEmpty();\r\n    //   }\r\n    //   // Local cart\r\n    // } else\r\n     if (cart !== null && cart.length > 0) {\r\n      let total = 0;\r\n      cart.forEach((item) => (total += getPrice(item.quantity, item.price)));\r\n      return (\r\n        <React.Fragment>\r\n          <TableContainer>\r\n            <Table aria-label=\"spanning table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Items</TableCell>\r\n                  <TableCell align=\"right\">Quantity</TableCell>\r\n                  <TableCell align=\"right\">Price</TableCell>\r\n                  <TableCell align=\"right\" />\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {cart.map((order_item) => {\r\n                  return (\r\n                    <TableRow key={order_item.id}>\r\n                      <TableCell className={classes.items}>\r\n                        <Hidden smDown>\r\n                          <img\r\n                            src={order_item.image}\r\n                            width=\"64\"\r\n                            height=\"auto\"\r\n                            alt=\"Product\"\r\n                          />\r\n                          &nbsp; &nbsp; &nbsp;\r\n                        </Hidden>\r\n                        <div>\r\n                          {\" \"}\r\n                          {order_item.title}{\" \"}\r\n                          {order_item.config\r\n                            ? `${order_item.config.ram} + ${order_item.config.storage}`\r\n                            : \"\"}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <TextField\r\n                          type=\"number\"\r\n                          onChange={(e) => {\r\n                            const config = order_item.config;\r\n                            if (config) {\r\n                              handleChange(e, order_item.slug, config.id);\r\n                            } else {\r\n                              handleChange(e, order_item.slug, null);\r\n                            }\r\n                          }}\r\n                          defaultValue={order_item.quantity}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{order_item.price}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <IconButton\r\n                          onClick={(e) => handleRemove(order_item.id)}\r\n                        >\r\n                          <ClearIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n                <TableRow>\r\n                  <TableCell align=\"right\" />\r\n                  <TableCell align=\"right\" style={{ fontWeight: 500 }}>\r\n                    Total\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{total}</TableCell>\r\n                  <TableCell align=\"right\" />\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {renderActions()}\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return renderEmpty();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={state.error}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        message=\"Error removing item\"\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {showError(state.message)}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container>{renderCart()}</Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { store } from \"../../apis/store\"\r\nimport { ratingsURL } from \"../../constants\"\r\nimport ReviewDialog from \"./ReviewDialog\"\r\n\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CircularPrograss from \"@material-ui/core/CircularProgress\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Rating from \"@material-ui/lab/Rating\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport { Box } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pagination: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}))\r\n\r\nconst Ratings = ({ productID, title }) => {\r\n  const classes = useStyles()\r\n  const [ratings, setRatings] = useState({\r\n    loading: true,\r\n    payload: [],\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n  })\r\n  const [page, setPage] = useState(1)\r\n  const getRatings = () => {\r\n    store\r\n      .get(ratingsURL, {\r\n        params: {\r\n          product_id: productID,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const count = Math.round(response.data.count / 10)\r\n        setRatings({\r\n          ...ratings,\r\n          loading: false,\r\n          payload: response.data.results,\r\n          count: count,\r\n          next: response.data.next,\r\n          previous: response.data.previous,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setRatings({\r\n          ...ratings,\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRatings()\r\n  }, [ratings.loading])\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value > page) {\r\n      setPage(value)\r\n      getRatings(ratings.next)\r\n    } else if (value < page) {\r\n      setPage(value)\r\n      getRatings(ratings.previous)\r\n    } else {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const renderSingleRating = (rating) => {\r\n    return (\r\n      <List key={rating.id}>\r\n        <ListItem>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {rating.name}\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Rating name=\"read-only\" value={rating.stars} readOnly />\r\n        </ListItem>\r\n        <ListItem>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {new Date(rating.added).toLocaleDateString(\"en-US\", {\r\n              day: \"numeric\",\r\n              month: \"short\",\r\n              year: \"numeric\",\r\n              hour: \"numeric\",\r\n              minute: \"numeric\",\r\n            })}\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            {rating.content}\r\n          </Typography>\r\n        </ListItem>\r\n        <Divider />\r\n      </List>\r\n    )\r\n  }\r\n\r\n  const renderRatings = () => {\r\n    if (ratings.loading === true) {\r\n      return <CircularPrograss />\r\n    } else if (ratings.payload && ratings.payload.length === 1) {\r\n      const rating = ratings.payload[0]\r\n      return <React.Fragment>{renderSingleRating(rating)}</React.Fragment>\r\n    } else if (ratings.payload && ratings.payload.length === 0) {\r\n      return (\r\n        <Box p={4}>\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            No reviews yet\r\n          </Typography>\r\n        </Box>\r\n      )\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          {ratings.payload.map((rating) => renderSingleRating(rating))}\r\n          {ratings.count !== 0 ? (\r\n            <div className={classes.pagination}>\r\n              <Pagination\r\n                count={ratings.count}\r\n                shape=\"rounded\"\r\n                onChange={handleChange}\r\n                page={page}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        {renderRatings()}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <ReviewDialog\r\n          title={title}\r\n          id={productID}\r\n          setRatings={setRatings}\r\n          ratings={ratings}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Ratings\r\n","import React, { useState } from \"react\";\r\nimport Ratings from \"./Ratings\";\r\n\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst TabPanel = ({ children, value, index }) => {\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simpel-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tabProps = (index = 1) => {\r\n  return {\r\n    id: `tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nconst ProductTab = ({\r\n  productID,\r\n  productTitle,\r\n  description,\r\n  manufacturer_url,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"Rating, Specs Tab\"\r\n        >\r\n          <Tab label=\"Specifications\" {...tabProps(0)} />\r\n          {/* <Tab label=\"Reviews\" {...tabProps(1)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <List>\r\n          <ListItem>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          </ListItem>\r\n          <ListItem>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              For more details, head over to the{\" \"}\r\n              <span>\r\n                <a target=\"_blank\" href={manufacturer_url}>\r\n                  official website {productTitle}\r\n                </a>\r\n              </span>\r\n              .\r\n            </Typography>\r\n          </ListItem>\r\n        </List>\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={1}>\r\n        <Ratings productID={productID} title={productTitle} />\r\n      </TabPanel> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductTab;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { store, authStore } from \"../../apis/store\";\r\nimport { addToCartURL } from \"../../constants\";\r\nimport { fetchCart } from \"../../store/actions/cart\";\r\nimport { createCartItem } from \"../../cartLocal\";\r\nimport BreadCrumbs from \"../BreadCrumbs\";\r\nimport AlertDialog from \"./AlertDialog\";\r\nimport AddedToCart from \"./AddedToCart\";\r\nimport Slider from \"infinite-react-carousel\";\r\nimport history from \"../../history\";\r\nimport Cart from \"../../containers/Cart\";\r\n\r\nimport ProductTab from \"./Tab\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { showError } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    maxWidth: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  slider: {\r\n    maxHeight: \"400px\",\r\n  },\r\n  discount: {\r\n    textDecoration: \"line-through\",\r\n    color: theme.palette.grey[600],\r\n  },\r\n  addToCart: {\r\n    paddingTop: theme.spacing(2),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Product(props) {\r\n  // console.log(props.match.params.slug);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  let cart = useSelector((state) => state.cart);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [state, setState] = useState({\r\n    product: null,\r\n    price: null,\r\n    discountPrice: null,\r\n    option: null,\r\n    error: null,\r\n  });\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialog, setDialog] = useState({\r\n    render: false,\r\n  });\r\n\r\n  console.log(\"State: \", state);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    const getProduct = () => {\r\n      store\r\n        .get(\r\n          \"/api/v1/product\",\r\n          {\r\n            params: props.match.params.slug,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setState({\r\n              ...state,\r\n              product: response.data,\r\n              option: response.data._id,\r\n              price: response.data.price,\r\n              discountPrice: response.data.discountPrice,\r\n            });\r\n          } else {\r\n            setState({\r\n              ...state,\r\n              product: response.data,\r\n              option: 0,\r\n              price: response.data.price,\r\n              discountPrice: response.data.discountPrice,\r\n            });\r\n            if (response.data.quantity > 0) {\r\n              setDisabled(false);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setState({ ...state, error });\r\n        });\r\n    };\r\n    getProduct();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleDisabled = () => {\r\n      if (state.product) {\r\n        // if (state.product.productType === \"Accessory\") {\r\n        //   state.product.quantity > 0 ? setDisabled(false) : setDisabled(true);\r\n        // } else\r\n        if (state.product.productType === \"Laptop\") {\r\n          // if (state.product.config.length > 0) {\r\n          //   const answer = state.product.config.find(\r\n          //     (element) => element.id === parseInt(state.option)\r\n          //   );\r\n          //   if (answer && answer.quantity > 0) {\r\n          //     setDisabled(false);\r\n          //   }\r\n          // if (state.product > 0) {\r\n          // const answer = state.option;\r\n          // if (answer && answer.quantity > 0) {\r\n          // if (answer > 0) {\r\n          if (state.option) {\r\n            setDisabled(false);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    handleDisabled();\r\n    // eslint-disable-next-line\r\n  }, [state.option]);\r\n\r\n  // Slider\r\n  const generateImages = () => {\r\n    if (state.product.imageURL1) {\r\n      return [\r\n        state.product.imageURL1,\r\n        state.product.imageURL2,\r\n        state.product.imageURL3,\r\n        state.product.imageURL4,\r\n      ].map((image, id) => (\r\n        <img key={id} className={classes.img} src={image} alt=\"Product\" />\r\n      ));\r\n    } else {\r\n      return (\r\n        <img\r\n          className={classes.img}\r\n          src={\"/static/assets/image-missing-icon.png\"}\r\n          alt=\"missing product\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n  const simpleSlider = () => (\r\n    <Slider dots className={classes.slider}>\r\n      {generateImages()}\r\n    </Slider>\r\n  );\r\n\r\n  const generateDetails = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary={\r\n              <Typography variant=\"h6\">\r\n                Processor:\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                  {` ${state.product.processorName} ${\r\n                    state.product.processorDetail\r\n                      ? state.product.processorDetail\r\n                      : \"\"\r\n                  }`}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary={\r\n              <Typography variant=\"h6\">\r\n                Display:\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                  {` ${state.product.display} ${\r\n                    state.product.displayDetails\r\n                      ? state.product.displayDetails\r\n                      : \"\"\r\n                  }`}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n          />\r\n        </ListItem>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  // const handleChange = (e) => {\r\n  // const config = state.product.config.find(\r\n  //   (element) => element.id === parseInt(e.target.value)\r\n  // );\r\n  // setState({\r\n  //   ...state,\r\n  //   option: parseInt(e.target.value),\r\n  //   price: config.price,\r\n  //   discount_price: config.discount_price,\r\n  // });\r\n  // };\r\n\r\n  const renderConfigs = () => {\r\n    if (state.product) {\r\n      // if (state.product) {\r\n      return (\r\n        <ListItem>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Configurations</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"config\"\r\n              name=\"config\"\r\n              // value={parseInt(state.option)}\r\n              value={state.option}\r\n              // onChange={handleChange}\r\n            >\r\n              {state.product.ram ? (\r\n                <React.Fragment>\r\n                  {/* {state.product.config.map((config) => { */}\r\n                  {/* return ( */}\r\n                  <FormControlLabel\r\n                    value={state.option}\r\n                    control={\r\n                      <Radio\r\n                      // disabled=\"false\"\r\n                      />\r\n                    }\r\n                    label={`${state.product.ram} RAM + ${state.product.storage} STORAGE`}\r\n                    key={state.option}\r\n                  />\r\n                  {/* ); */}\r\n                  {/* })} */}\r\n                </React.Fragment>\r\n              ) : (\r\n                \"Out of Stock\"\r\n              )}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </ListItem>\r\n      );\r\n      // }\r\n      // else {\r\n      //   const config = state.product.config[0];\r\n      //   return (\r\n      //     <ListItem>\r\n      //       <FormControl component=\"fieldset\">\r\n      //         <FormLabel component=\"legend\">Configurations</FormLabel>\r\n      //         <RadioGroup\r\n      //           aria-label=\"config\"\r\n      //           name=\"config\"\r\n      //           value={state.option}\r\n      //           onChange={handleChange}\r\n      //         >\r\n      //           <FormControlLabel\r\n      //             value={config.id}\r\n      //             control={\r\n      //               <Radio disabled={config.quantity === 0 ? true : false} />\r\n      //             }\r\n      //             label={`${config.ram} RAM + ${config.storage} STORAGE`}\r\n      //           />\r\n      //         </RadioGroup>\r\n      //       </FormControl>\r\n      //     </ListItem>\r\n      //   );\r\n      // }\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const renderPrice = (discountPrice, price) => {\r\n    return (\r\n      <React.Fragment>\r\n        {discountPrice ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\">\r\n              <Box\r\n                fontWeight=\"fontWeightBold\"\r\n                fontSize=\"1.25rem\"\r\n                component=\"span\"\r\n              >\r\n                Price:{\" \"}\r\n              </Box>{\" \"}\r\n              {discountPrice} AED &nbsp;\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.discount}>\r\n              {price} AED\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            <Box\r\n              fontWeight=\"fontWeightBold\"\r\n              fontSize=\"1.25rem\"\r\n              component=\"span\"\r\n            >\r\n              Price:{\" \"}\r\n            </Box>\r\n            {price} AED\r\n          </Typography>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  // Cart Section\r\n\r\n  const renderDialog = () => {\r\n    const onCheckout = () => {\r\n      setDialog({\r\n        render: false,\r\n      });\r\n      history.push(\"/checkout\");\r\n    };\r\n\r\n    const onDismiss = () => {\r\n      setDialog({\r\n        render: false,\r\n      });\r\n    };\r\n    return (\r\n      <AlertDialog\r\n        content={<Cart onDismiss={onDismiss} />}\r\n        handleDone={onCheckout}\r\n        handleDismiss={onDismiss}\r\n        title={\"Cart\"}\r\n        action=\"\"\r\n        dismiss=\"\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const addToCart = (slug) => {\r\n    // const token = localStorage.getItem(\"token\");\r\n    // if (token) {\r\n    // if (token) {\r\n    // authStore\r\n    //   .post(addToCartURL, { slug, config: state.option })\r\n    //   .then((res) => {\r\n    //     dispatch(fetchCart());\r\n    // if (window.screen.width > 960) {\r\n    //   setDialog({\r\n    //     render: true,\r\n    //   });\r\n    // } else {\r\n    //   setDialogOpen(true);\r\n    // }\r\n    // })\r\n    // .catch((err) => {\r\n    // if (\r\n    //   cart !== null &&\r\n    //   cart.shoppingCart !== undefined &&\r\n    //   cart.shoppingCart.items.length > 0\r\n    // ) {\r\n    //   setDialog({ render: true });\r\n    // }\r\n    // setState({ ...state, error: err });\r\n    // setOpen(true);\r\n    // });\r\n    // } else {\r\n    createCartItem(state.product, state.option);\r\n    if (window.screen.width > 960) {\r\n      setDialog({\r\n        render: true,\r\n      });\r\n    } else {\r\n      setDialogOpen(true);\r\n    }\r\n    // dispatch(fetchCart());\r\n    // }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const renderProduct = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Box py={3}>\r\n          <BreadCrumbs>\r\n            <Link to={`/products/${state.product.productType}`}>\r\n              {state.product.productType.charAt(0).toUpperCase() +\r\n                state.product.productType.slice(1)}\r\n            </Link>\r\n            <Link to={`/product/${props.match.params.slug}`}>\r\n              {state.product.title}\r\n            </Link>\r\n          </BreadCrumbs>\r\n        </Box>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3} lg={4}>\r\n            {simpleSlider()}\r\n          </Grid>\r\n          <Grid item xs={12} sm={9} lg={8}>\r\n            <List dense>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"h2\" component=\"h1\">\r\n                      {state.product.title}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n\r\n              {/* {state.product.part_number ? (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"subtitle1\" component=\"p\">\r\n                        <span style={{ fontWeight: 500 }}>Model:</span>\r\n                        {` ${state.product.part_number}`}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n              <ListItem>\r\n                <Rating\r\n                  name=\"read-only\"\r\n                  // value={state.product.rating.average}\r\n                  value={0}\r\n                  readOnly\r\n                  precision={0.5}\r\n                />\r\n                {/* <span>({state.product.rating.length})</span> */}\r\n                <span>({0})</span>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={renderPrice(state.discountPrice, state.price)}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"body1\" component=\"p\">\r\n                      {state.product.description}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n\r\n              {state.product.color ? (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"h6\">\r\n                        Color:\r\n                        <Typography variant=\"body1\" component=\"span\">\r\n                          {` ${state.product.color}`}\r\n                        </Typography>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {state.product && state.product.productType === \"Laptop\"\r\n                ? generateDetails()\r\n                : \"\"}\r\n              {state.product && state.product.productType === \"Laptop\"\r\n                ? renderConfigs()\r\n                : \"\"}\r\n              <Divider variant=\"middle\" />\r\n              <ListItem>\r\n                <div className={classes.addToCart}>\r\n                  {state.product.quantity === 0 ? (\r\n                    <Typography variant=\"subtitle1\" component=\"p\">\r\n                      Out of stock\r\n                    </Typography>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => addToCart(state.option)}\r\n                    disabled={disabled}\r\n                    className={classes.selector}\r\n                  >\r\n                    Add To Cart\r\n                  </Button>\r\n                </div>\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={4}>\r\n          <ProductTab\r\n            // productID={state.product.id}\r\n            productID={state.option}\r\n            productTitle={state.product.title}\r\n            description={state.product.description}\r\n            manufacturer_url={state.product.manufacturer_url}\r\n          />\r\n        </Box>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <AddedToCart open={dialogOpen} setOpen={setDialogOpen} />\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={open}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {showError(state.error)}\r\n          </Alert>\r\n        </Snackbar>\r\n        {dialog.render ? renderDialog() : \"\"}\r\n        {state.product ? (\r\n          renderProduct()\r\n        ) : state.error ? (\r\n          <Typography varaint=\"body1\" component=\"p\" color=\"error\">\r\n            Error in fetching the data\r\n          </Typography>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { productURL } from \"../../constants\";\r\nimport Truncate from \"react-truncate\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    padding: theme.spacing(1),\r\n    height: 150,\r\n  },\r\n  image: {\r\n    maxHeight: 150,\r\n    maxWidth: 200,\r\n  },\r\n  cardActions: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  cardContent: {\r\n    height: 125,\r\n    overflowY: \"hidden\",\r\n  },\r\n  description: {\r\n    height: 50,\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  actions: {\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  discount: {\r\n    textDecoration: \"line-through\",\r\n    color: theme.palette.grey[600],\r\n  },\r\n  title: {\r\n    display: \"block\",\r\n    maxWidth: 345,\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n}));\r\n\r\nexport default function ProductCard({ product }) {\r\n  const classes = useStyles();\r\n\r\n  const renderPrice = (discountPrice, price) => {\r\n    return (\r\n      <React.Fragment>\r\n        {discountPrice ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\">\r\n              <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n                Price:{\" \"}\r\n              </Box>{\" \"}\r\n              {discountPrice} $ &nbsp;\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.discount}>\r\n              {price} $\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n              Price:{\" \"}\r\n            </Box>\r\n            {price} $\r\n          </Typography>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCardLink = () => {\r\n    if (product) {\r\n      return (\r\n        <Link to={productURL(product._id)} className={classes.link}>\r\n          <CardActionArea>\r\n            <CardContent>\r\n              <div className={classes.media}>\r\n                <img\r\n                alt=\"ProductImg\"\r\n                  src={product.imageURL1}\r\n                  className={classes.image}\r\n                />\r\n              </div>\r\n              <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                <span className={classes.title}>{product.title}</span>\r\n              </Typography>\r\n              <div className={classes.cardContent}>\r\n                <div className={classes.description}>\r\n                  <Truncate\r\n                    lines={2}\r\n                    style={{ textAlign: \"left\" }}\r\n                    ellipsis={<span>...</span>}\r\n                  >\r\n                    {product.description}\r\n                  </Truncate>\r\n                </div>\r\n                {product.productType === \"Laptop\" ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"flex-start\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <ul\r\n                      style={{\r\n                        listStyle: \"square\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"flex-start\",\r\n                        justifyContent: \"flex-start\",\r\n                        paddingLeft: 20,\r\n                        textAlign: \"left\",\r\n                      }}\r\n                    >\r\n                      <li>{`${product.processorName} ${product.processorDetail_}`}</li>\r\n                      <li>{`${product.display} ${product.displayDetails}`}</li>\r\n\r\n                      <React.Fragment>\r\n                        <li>{product.ram}</li>\r\n                        <li>{product.storage}</li>\r\n                      </React.Fragment>\r\n                    </ul>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Link>\r\n      );\r\n    } else {\r\n      return (\r\n        <Typography color=\"primary\" component=\"h2\" variant=\"h2\">\r\n          A fatal error has occurred!\r\n        </Typography>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item>\r\n      <Card className={classes.root}>\r\n        {renderCardLink()}\r\n        <CardActions className={classes.cardActions}>\r\n          <ul className={classes.actions}>\r\n            <li>\r\n              {/* {product.productType === \"Accessory\" */}\r\n              {product.productType === \"Laptop\"\r\n                ? renderPrice(product.discountPrice, product.price)\r\n                : product.price.length > 0\r\n                ? renderPrice(product.discountPrice, product.price)\r\n                : \"Out of stock\"}\r\n            </li>\r\n            <li>\r\n              <Link to={productURL(product._id)} className={classes.link}>\r\n                <Button color=\"secondary\">View Details</Button>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n    linkText: {\r\n        textDecoration: 'none',\r\n        color: 'black'\r\n    }\r\n}))\r\n\r\nconst CustomizedListItem = ({ item, heading, state, setState }) => {\r\n    const classes = useStyles()\r\n    const [ open, setOpen ]  = useState(false)\r\n    const handleClick = (e) => {\r\n        setOpen(!open)\r\n        e.stopPropagation()\r\n    }\r\n\r\n    const handleThisClick = e => {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    const handleCheck = e => {\r\n        setState({\r\n            ...state,\r\n            filters: {\r\n                ...state.filters,\r\n                [e.target.name]: e.target.checked\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { item ? (\r\n                    <div>\r\n                        <ListItem button onClick={handleClick} className={classes.linkText}>\r\n                            <ListItemText primary={heading} />\r\n                            {open ? <ExpandLess /> : <ExpandMore />}\r\n                        </ListItem>\r\n                        <Collapse\r\n                            in={open}\r\n                            timeout='auto'\r\n                            unmountOnExit\r\n                        >\r\n                            <List component='li' disablePadding>\r\n                                {\r\n                                    item.length > 1 ? (\r\n                                        item.map(cat => (\r\n                                            <ListItem button className={classes.nested} key={cat} >\r\n                                                <ListItemIcon>\r\n                                                    <Checkbox\r\n                                                        edge=\"start\"\r\n                                                        checked={state.filters[cat] || false}\r\n                                                        disableRipple\r\n                                                        name={cat}\r\n                                                        onChange={handleCheck}\r\n                                                        color=\"secondary\"\r\n                                                    />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary={cat} className={classes.linkText} />\r\n                                            </ListItem>\r\n                                        ))\r\n                                    ) : item.length === 1 ? (\r\n                                            <ListItem key={item[0]} button className={classes.nested} >\r\n                                                <ListItemIcon>\r\n                                                    <Checkbox\r\n                                                        edge=\"start\"\r\n                                                        checked={state.filters[item[0]] || false}\r\n                                                        disableRipple\r\n                                                        name={item[0]}\r\n                                                        onChange={handleCheck}\r\n                                                        color=\"secondary\"\r\n                                                    />\r\n                                                </ListItemIcon>\r\n                                            <ListItemText primary={item[0]} className={classes.linkText} />\r\n                                        </ListItem>\r\n                                    ) : (\r\n                                        <ListItem button onClick={handleThisClick}>\r\n                                            <ListItemText primary=\"No products available\" className={classes.linkText} />\r\n                                        </ListItem>\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </Collapse>\r\n                    </div>\r\n                ) : ('')\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default function MyList({data, state, setState}) {\r\n    const classes = useStyles()\r\n    return (\r\n        <div>\r\n            <List \r\n                component='nav' \r\n                aria-labelledby='nested-list-subheader'\r\n                className={classes.root}\r\n            >\r\n                {data && (Object.keys(data).map(key => {\r\n                    return (\r\n                        <CustomizedListItem key={key} item={data[key]} heading={key.toUpperCase()} state={state} setState={setState} />\r\n                    )\r\n                }))}\r\n            </List>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { store, productApi } from \"../../apis/store\"\r\nimport {\r\n  brandsURL,\r\n  specialURL,\r\n  filterURL,\r\n  processorsURL,\r\n  displaysURL,\r\n  categoriesURL,\r\n} from \"../../constants\"\r\nimport ProductCard from \"./ProductCard\"\r\nimport _ from \"lodash\"\r\nimport ScrollToTopOnMount from \"../ScrollToTopOnMount\"\r\n\r\nimport MyList from \"../MyList\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Hidden from \"@material-ui/core/Hidden\"\r\nimport BreadCrumbs from \"../BreadCrumbs\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport { Box, FormControl, InputLabel, Typography } from \"@material-ui/core\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    grid: {\r\n      marginTop: theme.spacing(4),\r\n      display: \"none\",\r\n    },\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  list: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n  card: {\r\n    marginTop: theme.spacing(1),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  breadcrumbs: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  container: {\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  },\r\n}))\r\n\r\nconst ProductList = (props) => {\r\n  const classes = useStyles()\r\n  const product_type = props.match.params.product\r\n  // console.log(product_type)\r\n  const [state, setState] = useState({\r\n    products: [],\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n    list: {\r\n      brands: null,\r\n      processors: null,\r\n      screenSizes: null,\r\n      categories: null,\r\n    },\r\n    filters: [],\r\n    hideList: true,\r\n    loading: true,\r\n    sort: \"price\",\r\n  })\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const fetchItems = (url) => {\r\n    let products = null\r\n    let count = 1\r\n    let next = null\r\n    let previous = null\r\n    setState({ ...state, loading: true })\r\n    store\r\n      .get(url, {\r\n        params: {\r\n          ordering: state.sort,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        products = response.data.results\r\n        count = Math.round(response.data.count / 10)\r\n        next = response.data.next\r\n        previous = response.data.previous\r\n        setState({\r\n          ...state,\r\n          products: products,\r\n          count: count,\r\n          next: next,\r\n          previous: previous,\r\n          loading: false,\r\n        })\r\n      })\r\n      .catch((error) => setState({ ...state, loading: false }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    const ac = new AbortController()\r\n\r\n    let brands = null\r\n    let processors = null\r\n    let displays = null\r\n    let categories = null\r\n\r\n    const getLaptopFilters = () => {\r\n      store\r\n        .get(brandsURL(product_type))\r\n        .then((response) => {\r\n          brands = response.data.brands\r\n          processors = []\r\n          displays = []\r\n\r\n          return store.get(processorsURL)\r\n        })\r\n        .then((response) => {\r\n          for (let item in response.data) {\r\n            processors.push(response.data[item].name)\r\n          }\r\n          return store.get(displaysURL)\r\n        })\r\n        .then((response) => {\r\n          for (let item in response.data) {\r\n            displays.push(response.data[item].name)\r\n          }\r\n          return store.get(specialURL, {\r\n            params: {\r\n              product_type: product_type,\r\n              ordering: state.sort,\r\n            },\r\n          })\r\n        })\r\n        .then((response) => {\r\n          let products = response.data.results\r\n          let count = Math.round(response.data.count / 10)\r\n          let next = response.data.next\r\n          let previous = response.data.previous\r\n\r\n          setState({\r\n            ...state,\r\n            products: products,\r\n            count: count,\r\n            next: next,\r\n            previous: previous,\r\n            loading: false,\r\n            list: {\r\n              brands: brands,\r\n              processors: processors,\r\n              screenSizes: displays,\r\n            },\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            loading: false,\r\n          })\r\n        })\r\n    }\r\n\r\n    const getAccessoryFilters = () => {\r\n      store\r\n        .get(brandsURL(product_type))\r\n        .then((response) => {\r\n          brands = response.data.brands\r\n          categories = []\r\n          return store.get(categoriesURL)\r\n        })\r\n        .then((response) => {\r\n          for (let item in response.data) {\r\n            categories.push(response.data[item].name)\r\n          }\r\n          return store.get(specialURL, {\r\n            params: {\r\n              product_type: product_type,\r\n              ordering: state.sort,\r\n            },\r\n          })\r\n        })\r\n        .then((response) => {\r\n          let products = response.data.results\r\n          let count = Math.round(response.data.count / 10)\r\n          let next = response.data.next\r\n          let previous = response.data.previous\r\n\r\n          setState({\r\n            ...state,\r\n            products: products,\r\n            count: count,\r\n            next: next,\r\n            previous: previous,\r\n            loading: false,\r\n            list: {\r\n              ...state.list,\r\n              brands: brands,\r\n              categories: categories,\r\n            },\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            loading: false,\r\n          })\r\n        })\r\n    }\r\n\r\n    if (product_type === \"Laptop\") {\r\n      getLaptopFilters()\r\n    } else {\r\n      getAccessoryFilters()\r\n    }\r\n\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController()\r\n\r\n    const getSpecialProducts = () => {\r\n      store\r\n        // .get(specialURL, {\r\n        .get(\"/api/v1/params/products\", {\r\n          params: {\r\n            product_type: product_type,\r\n            // ordering: state.sort,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          let products = response.data\r\n          let count = Math.round(response.data.count / 10)\r\n          let next = response.data.next\r\n          let previous = response.data.previous\r\n\r\n          setState({\r\n            ...state,\r\n            products: products,\r\n            count: count,\r\n            next: next,\r\n            previous: previous,\r\n            loading: false,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            loading: false,\r\n          })\r\n        })\r\n    }\r\n      getSpecialProducts();\r\n\r\n    // const getProducts = () => {\r\n    //   let products = null\r\n    //   let count = 1\r\n    //   let next = null\r\n    //   let previous = null\r\n    //   if (Object.keys(state.filters).length > 0) {\r\n    //     let params = {\r\n    //       processors: [],\r\n    //       screenSizes: [],\r\n    //       categories: [],\r\n    //       brands: [],\r\n    //     }\r\n    //     for (const key in state.filters) {\r\n    //       if (state.filters[key] !== false) {\r\n    //         if (product_type === \"Laptop\") {\r\n    //           if (state.list.processors.includes(key)) {\r\n    //             params.processors.push(key)\r\n    //           } else if (state.list.screenSizes.includes(key)) {\r\n    //             params.screenSizes.push(key)\r\n    //           } else {\r\n    //             params.brands.push(key)\r\n    //           }\r\n    //         } else {\r\n    //           if (state.list.categories.includes(key)) {\r\n    //             params.categories.push(key)\r\n    //           } else {\r\n    //             params.brands.push(key)\r\n    //           }\r\n    //         }\r\n    //       } else {\r\n    //         delete state.filters[key]\r\n    //       }\r\n    //     }\r\n    //     setState({\r\n    //       ...state,\r\n    //       loading: true,\r\n    //     })\r\n    //     if (_.isEmpty(state.filters)) {\r\n    //       getSpecialProducts()\r\n    //     } else {\r\n    //       productApi\r\n    //         .get(filterURL, {\r\n    //           params: {\r\n    //             ...params,\r\n    //             ordering: state.sort,\r\n    //           },\r\n    //         })\r\n    //         .then((response) => {\r\n    //           products = response.data.results\r\n    //           count = Math.round(response.data.count / 10)\r\n    //           next = response.data.next\r\n    //           previous = response.data.previous\r\n    //           setState({\r\n    //             ...state,\r\n    //             products: products,\r\n    //             count: count,\r\n    //             next: next,\r\n    //             previous: previous,\r\n    //             loading: false,\r\n    //           })\r\n    //         })\r\n    //         .catch((error) => setState({ ...state, loading: false }))\r\n    //     }\r\n    //   } else {\r\n    //     getSpecialProducts()\r\n    //   }\r\n    // }\r\n\r\n    // getProducts()\r\n\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [state.filters, state.sort])\r\n\r\n  const generateCards = () => {\r\n    if (state?.products?.length > 0) {\r\n      return state?.products?.map((product) => {\r\n        return (\r\n          <Grid\r\n            key={product._id}\r\n            item\r\n            align=\"center\"\r\n            xs={12}\r\n            sm={6}\r\n            lg={4}\r\n            md={4}\r\n            className={classes.card}\r\n          >\r\n            <ProductCard product={product} />\r\n          </Grid>\r\n        )\r\n      })\r\n    } else {\r\n      return <CircularProgress />\r\n    }\r\n  }\r\n\r\n  const generateHeader = () => {\r\n    const heading = product_type.charAt(0).toUpperCase() + product_type.slice(1)\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"h1\" variant=\"h2\">\r\n            {product_type === \"Laptop\"\r\n              ? `${heading}s`\r\n              : `${heading.slice(0, 8)}ies`}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} container className={classes.breadcrumbs}>\r\n          <BreadCrumbs>\r\n            <Link to={`/products/${product_type}`}>{heading}</Link>\r\n          </BreadCrumbs>\r\n        </Grid>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value > page) {\r\n      setPage(value)\r\n      fetchItems(state.next)\r\n    } else if (value < page) {\r\n      setPage(value)\r\n      fetchItems(state.previous)\r\n    } else {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const handleSort = (event) => {\r\n    setState({\r\n      ...state,\r\n      sort: event.target.value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      <Container maxWidth=\"lg\">\r\n        <Box component=\"div\" mb={{ md: 4 }}>\r\n          <Grid container spacing={2}>\r\n            {generateHeader()}\r\n          </Grid>\r\n        </Box>\r\n        <Grid container>\r\n          {/* <Hidden lgUp>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                onClick={() =>\r\n                  setState({ ...state, hideList: !state.hideList })\r\n                }\r\n              >\r\n                Filters\r\n              </Button>\r\n            </Grid>\r\n          </Hidden> */}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            lg={3}\r\n            className={state.hideList ? classes.grid : \"\"}\r\n          >\r\n            <Box component=\"div\" className={classes.list}>\r\n              <MyList data={state.list} setState={setState} state={state} />\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={12} lg={9}>\r\n            {state?.products?.length > 0 ? (\r\n              <React.Fragment>\r\n                <Grid container spacing={4} justify=\"flex-end\">\r\n                  {/* <Grid item xs={12} md={6} lg={4}>\r\n                    <FormControl>\r\n                      <InputLabel id=\"sort-by\">Sort By:</InputLabel>\r\n                      <Select\r\n                        labelId=\"sort-by-label\"\r\n                        id=\"sort-by\"\r\n                        value={state.sort}\r\n                        onChange={handleSort}\r\n                      >\r\n                        <MenuItem value=\"price\">Price: Low to High</MenuItem>\r\n                        <MenuItem value=\"-price\">Price: High to Low</MenuItem>\r\n                        <MenuItem value=\"title\">Alphabetically: A - Z</MenuItem>\r\n                        <MenuItem value=\"-title\">\r\n                          Alphabetically: Z - A\r\n                        </MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  className={classes.container}\r\n                >\r\n                  {state.loading ? (\r\n                    <Grid item xs={12}>\r\n                      <CircularProgress />\r\n                    </Grid>\r\n                  ) : (\r\n                    generateCards()\r\n                  )}\r\n                </Grid>\r\n                {/* {state.count !== 0 ? (\r\n                  <div className={classes.root}>\r\n                    <Pagination\r\n                      count={\r\n                        state.count === state.products.length ? 1 : state.count\r\n                      }\r\n                      shape=\"rounded\"\r\n                      onChange={handleChange}\r\n                      page={page}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )} */}\r\n              </React.Fragment>\r\n            ) : state.loading ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <Typography variant=\"h6\" component=\"p\">\r\n                No products available\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ProductList\r\n","import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { store } from \"../../apis/store\"\r\nimport { confirmResetURL } from \"../../constants\"\r\nimport { showError } from \"../../utils\"\r\nimport { Formik, Form, useField } from \"formik\"\r\nimport * as Yup from \"yup\"\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport Copyright from \"../../components/Copyright\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport Checkbox from \"@material-ui/core/Checkbox\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nconst MyTextField = ({\r\n  label,\r\n  autoFocus,\r\n  autoComplete,\r\n  inputProps,\r\n  type,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(props)\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\"\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      autoFocus={autoFocus}\r\n      autoComplete={autoComplete}\r\n      inputProps={inputProps}\r\n      type={type}\r\n      fullWidth\r\n    />\r\n  )\r\n}\r\n\r\nconst MyCheckbox = ({ label, ...props }) => {\r\n  const [field] = useField(props)\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  )\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n  new_password1: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Must be at least 8 characters long\")\r\n    .matches(\r\n      /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must have at least one number, one lowercase and one uppercase letter\"\r\n    ),\r\n  new_password2: Yup.string().oneOf(\r\n    [Yup.ref(\"new_password1\"), null],\r\n    \"Passwords must match\"\r\n  ),\r\n})\r\n\r\nexport default function ResetPassword(props) {\r\n  const classes = useStyles()\r\n  const uid = props.match.params.uid\r\n  const token = props.match.params.token\r\n\r\n  const [state, setState] = useState({\r\n    sending: false,\r\n    success: false,\r\n    error: null,\r\n    payload: {\r\n      uid: uid,\r\n      token: token,\r\n      new_password1: \"\",\r\n      new_password2: \"\",\r\n      show_password: false,\r\n    },\r\n  })\r\n\r\n  const handleTokenSubmit = (values) => {\r\n    setState({\r\n      ...state,\r\n      sending: true,\r\n    })\r\n    store\r\n      .post(confirmResetURL, values)\r\n      .then((response) => {\r\n        setState({\r\n          ...state,\r\n          sending: false,\r\n          success: true,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setState({\r\n          ...state,\r\n          sending: false,\r\n          success: false,\r\n          error: error,\r\n        })\r\n      })\r\n  }\r\n\r\n  const renderForm = () => {\r\n    if (state.sending === true && state.success === false) {\r\n      return <CircularProgress />\r\n    } else if (state.sending === false && state.success === false) {\r\n      return (\r\n        <React.Fragment>\r\n          {state.error ? (\r\n            <Typography variant=\"h5\" component=\"p\" color=\"error\">\r\n              {showError(state.error)}\r\n            </Typography>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Set New Password\r\n          </Typography>\r\n          <Formik\r\n            enableReinitialize\r\n            initialValues={state.payload}\r\n            onSubmit={handleTokenSubmit}\r\n            validateOnChange={true}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({ values }) => (\r\n              <Form className={classes.form}>\r\n                <MyTextField\r\n                  required\r\n                  id=\"newPassword1\"\r\n                  name=\"new_password1\"\r\n                  label=\"New Password\"\r\n                  type={values.show_password ? \"text\" : \"password\"}\r\n                  fullWidth\r\n                />\r\n                <MyTextField\r\n                  required\r\n                  id=\"newPassword2\"\r\n                  name=\"new_password2\"\r\n                  label=\"New Password (again)\"\r\n                  type={values.show_password ? \"text\" : \"password\"}\r\n                  fullWidth\r\n                />\r\n                <MyCheckbox name=\"show_password\" label=\"Show password\" />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Box p={3}>\r\n            <Typography variant=\"h5\" component=\"p\">\r\n              Password Reset Success!\r\n            </Typography>\r\n          </Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component={Link}\r\n            to=\"/signin\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        {renderForm()}\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\n\r\nimport { authStore } from \"../../apis/store\"\r\nimport {\r\n  orderDetailURL,\r\n  orderUpdateURL,\r\n  shipmentCreateURL,\r\n  shipmentDetailURL,\r\n} from \"../../constants\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport Title from \"./Title\"\r\n\r\nimport CustomAlert from \"./CustomAlert\"\r\n\r\nconst OrderDetail = ({ id, state, setState }) => {\r\n  const [order, setOrder] = useState({\r\n    loading: true,\r\n    error: null,\r\n    data: null,\r\n  })\r\n  const [sent, setSent] = useState({\r\n    status: false,\r\n    message: \"\",\r\n  })\r\n  const [error, setError] = useState({\r\n    status: false,\r\n    message: \"\",\r\n  })\r\n  const [form, setForm] = useState({\r\n    saving: false,\r\n    error: null,\r\n    formData: {\r\n      id: \"\",\r\n      order: id,\r\n      courier_name: \"\",\r\n      tracking_id: \"\",\r\n      web_address: \"\",\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController()\r\n    const getOrderDetail = () => {\r\n      authStore\r\n        .get(orderDetailURL(id))\r\n        .then((response) => {\r\n          const orderData = response.data\r\n          setOrder({\r\n            ...order,\r\n            loading: false,\r\n            data: orderData,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setOrder({\r\n            ...order,\r\n            loading: false,\r\n            error: error,\r\n          })\r\n        })\r\n    }\r\n    getOrderDetail()\r\n\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController()\r\n    const getShipmentDetail = () => {\r\n      authStore\r\n        .get(shipmentDetailURL, {\r\n          params: {\r\n            id: id,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setForm({\r\n            ...form,\r\n            formData: {\r\n              ...response.data,\r\n            },\r\n          })\r\n        })\r\n        .catch((error) => setForm({ ...form, error: error }))\r\n    }\r\n\r\n    getShipmentDetail()\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [])\r\n\r\n  const { formData } = form\r\n\r\n  const handleChange = (e) => {\r\n    const { formData } = form\r\n    const updatedFormData = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    }\r\n    setForm({\r\n      ...form,\r\n      formData: updatedFormData,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    setForm({\r\n      ...form,\r\n      saving: true,\r\n    })\r\n    authStore\r\n      .post(shipmentCreateURL, form.formData)\r\n      .then((response) => {\r\n        setSent({\r\n          status: true,\r\n          message: \"Shipment details sent successfully!\",\r\n        })\r\n        setForm({\r\n          ...form,\r\n          saving: false,\r\n          formData: {\r\n            ...response.data,\r\n          },\r\n        })\r\n        setOrder({\r\n          ...order,\r\n          data: {\r\n            ...order.data,\r\n            status: \"Dispatched\",\r\n          },\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setError({\r\n          status: true,\r\n          message: \"Shipment detail creation failed!\",\r\n        })\r\n        setForm({\r\n          ...form,\r\n          saving: false,\r\n          error: error,\r\n        })\r\n      })\r\n  }\r\n\r\n  const handleComplete = () => {\r\n    setOrder({\r\n      ...order,\r\n      loading: true,\r\n    })\r\n    authStore\r\n      .patch(orderUpdateURL(id), { id: id, status: \"Completed\" })\r\n      .then((response) => {\r\n        setSent({\r\n          status: true,\r\n          message: \"Order status updated successfully!\",\r\n        })\r\n        setOrder({\r\n          data: response.data,\r\n          loading: false,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setError({\r\n          status: true,\r\n          message: \"Order status update failed!\",\r\n        })\r\n        setOrder({\r\n          ...order,\r\n          loading: false,\r\n          error: error,\r\n        })\r\n      })\r\n  }\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return\r\n    }\r\n\r\n    if (sent.status === true) {\r\n      setSent({\r\n        message: \"\",\r\n        status: false,\r\n      })\r\n    } else {\r\n      setError({\r\n        message: \"\",\r\n        status: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const renderItem = (item) => {\r\n    return (\r\n      <TableRow key={item.id}>\r\n        <TableCell align=\"left\">{item.item.title}</TableCell>\r\n        <TableCell align=\"left\">\r\n          {item.config\r\n            ? `${item.config.ram} RAM + ${item.config.storage}`\r\n            : \"N/A\"}\r\n        </TableCell>\r\n        <TableCell align=\"left\">{item.quantity}</TableCell>\r\n      </TableRow>\r\n    )\r\n  }\r\n\r\n  const renderShipment = () => {\r\n    return (\r\n      <List dense>\r\n        <ListItem>\r\n          <Typography variant=\"h5\" component=\"h5\">\r\n            Courier Details\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"shipment table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell style={{ fontWeight: 500 }}>\r\n                    Courier Name:\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{` ${form.formData.courier_name}`}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ fontWeight: 500 }}>\r\n                    Tracking Id:\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {` ${form.formData.tracking_id}`}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ fontWeight: 500 }}>\r\n                    Courier Website:\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{` ${form.formData.web_address}`}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </ListItem>\r\n      </List>\r\n    )\r\n  }\r\n\r\n  const renderForm = () => {\r\n    return (\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <Grid container justify=\"center\" spacing={2}>\r\n          <Grid container item xs={11} alignItems=\"start\" justify=\"flex-start\">\r\n            <Typography\r\n              component=\"p\"\r\n              variant=\"body1\"\r\n              style={{ fontWeight: 600 }}\r\n            >\r\n              Add Shipment Details:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"courierName\"\r\n              name=\"courier_name\"\r\n              label=\"Courier Name\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              value={formData.courier_name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"trackingId\"\r\n              name=\"tracking_id\"\r\n              label=\"Tracking Id\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              value={formData.tracking_id}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"webAddress\"\r\n              name=\"web_address\"\r\n              label=\"Web Address\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              value={formData.web_address}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            {form.saving ? (\r\n              <CircularProgress color=\"secondary\" />\r\n            ) : (\r\n              <CustomAlert\r\n                handleProcess={handleSubmit}\r\n                content={\r\n                  <React.Fragment>\r\n                    <p>Save the following shipment details?</p>\r\n                    {renderShipment()}\r\n                  </React.Fragment>\r\n                }\r\n                button=\"SAVE\"\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    )\r\n  }\r\n  const renderDetail = () => {\r\n    if (order.loading === true) {\r\n      return <CircularProgress />\r\n    } else if (order.data !== null) {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={12}>\r\n              <List>\r\n                <ListItem>\r\n                  <TableContainer component={Paper}>\r\n                    <Table aria-label=\"order table\">\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Order No:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {` ${order.data.id}`}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Ordered Date:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {` ${new Date(\r\n                              order.data.ordered_date\r\n                            ).toLocaleDateString(\"en-US\", {\r\n                              day: \"numeric\",\r\n                              month: \"short\",\r\n                              year: \"numeric\",\r\n                              hour: \"numeric\",\r\n                              minute: \"numeric\",\r\n                            })}`}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Username:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {` ${order.data.user.first_name} ${order.data.user.last_name}`}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Status:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {order.data.status}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography\r\n                        style={{ fontWeight: 600 }}\r\n                        variant=\"body1\"\r\n                        component=\"p\"\r\n                      >\r\n                        Items:\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <TableContainer component={Paper}>\r\n                    <Table aria-label=\"items table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Title</TableCell>\r\n                          <TableCell align=\"left\">Config</TableCell>\r\n                          <TableCell align=\"left\">Quantity</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {order.data.items.map((item) => renderItem(item))}\r\n                        <TableRow>\r\n                          <TableCell />\r\n                          <TableCell align=\"left\" style={{ fontWeight: 500 }}>\r\n                            Total Amount:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{` ${order.data.total} AED`}</TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </ListItem>\r\n              </List>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {form.formData.id !== \"\" && form.formData.id !== null\r\n                ? renderShipment()\r\n                : renderForm()}\r\n            </Grid>\r\n            {order.data.status === \"Dispatched\" ? (\r\n              <Grid item xs={12}>\r\n                {order.loading ? (\r\n                  <CircularProgress color=\"secondary\" />\r\n                ) : (\r\n                  <CustomAlert\r\n                    handleProcess={handleComplete}\r\n                    title=\"Complete Order\"\r\n                    content={<p>Set the order status as complete?</p>}\r\n                    button=\"COMPLETE ORDER\"\r\n                  />\r\n                )}\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Grid item xs={12}>\r\n              <Button\r\n                fullWidth\r\n                onClick={() => setState({ ...state, tab: \"Orders\" })}\r\n                variant=\"contained\"\r\n              >\r\n                Back\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      return <Typography>Error in fetching the data</Typography>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Order Detail</Title>\r\n      {renderDetail()}\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={sent.status}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n          {sent.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={error.status}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {error.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default OrderDetail\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { authStore } from \"../../apis/store\"\r\nimport { orderListURL, orderFilterURL } from \"../../constants\"\r\n\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Title from \"./Title\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  row: {\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  pagination: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  control: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      paddingLeft: theme.spacing(10),\r\n      paddingRight: theme.spacing(10),\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: theme.spacing(1),\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function Orders({ state, setState }) {\r\n  const classes = useStyles()\r\n  const [orders, setOrders] = useState({\r\n    loading: true,\r\n    error: null,\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n    items: [],\r\n    status: \"All\",\r\n  })\r\n  const [page, setPage] = useState(1)\r\n\r\n  const getOrders = (url) => {\r\n    authStore\r\n      .get(url, {\r\n        params: {\r\n          status: orders.status,\r\n          orderding: \"ordered_date\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const count = Math.round(response.data.count / 10)\r\n        setOrders({\r\n          ...orders,\r\n          loading: false,\r\n          items: response.data.results,\r\n          count: count,\r\n          next: response.data.next,\r\n          previous: response.data.previous,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setOrders({\r\n          ...orders,\r\n          loading: false,\r\n          error: true,\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getAllOrders = () => {\r\n      authStore\r\n        .get(orderListURL)\r\n        .then((response) => {\r\n          const count = Math.round(response.data.count / 10)\r\n          setOrders({\r\n            ...orders,\r\n            loading: false,\r\n            items: response.data.results,\r\n            count: count,\r\n            next: response.data.next,\r\n            previous: response.data.previous,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setOrders({\r\n            ...orders,\r\n            loading: false,\r\n            error: true,\r\n          })\r\n        })\r\n    }\r\n\r\n    if (orders.status === \"All\") {\r\n      getAllOrders()\r\n    } else {\r\n      getOrders(orderFilterURL)\r\n    }\r\n  }, [orders.status])\r\n\r\n  const handleSelectChange = (e) => {\r\n    setOrders({\r\n      ...orders,\r\n      status: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value > page) {\r\n      setPage(value)\r\n      getOrders(orders.next)\r\n    } else if (value < page) {\r\n      setPage(value)\r\n      getOrders(orders.previous)\r\n    } else {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return (\r\n        <TableRow>\r\n          <TableCell align=\"center\" colSpan={5}>\r\n            <CircularProgress />\r\n          </TableCell>\r\n        </TableRow>\r\n      )\r\n    } else if (\r\n      orders.loading === false &&\r\n      orders.items !== null &&\r\n      orders.items.length === 0\r\n    ) {\r\n      return (\r\n        <TableRow>\r\n          <TableCell align=\"center\" colSpan={5}>\r\n            <Typography color=\"secondary\">No orders</Typography>\r\n          </TableCell>\r\n        </TableRow>\r\n      )\r\n    } else if (\r\n      orders.loading === false &&\r\n      orders.items !== null &&\r\n      orders.items.length > 0\r\n    ) {\r\n      return orders.items.map((order) => {\r\n        const date = new Date(order.ordered_date).toLocaleDateString(\"en-US\", {\r\n          day: \"numeric\",\r\n          month: \"short\",\r\n          year: \"numeric\",\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n        })\r\n        return (\r\n          <TableRow\r\n            key={order.id}\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                orderId: order.id,\r\n                tab: \"OrderDetail\",\r\n              })\r\n            }}\r\n            hover\r\n            className={classes.row}\r\n          >\r\n            <TableCell align=\"left\">{order.id}</TableCell>\r\n            <TableCell align=\"left\">{`${order.user.first_name} ${order.user.last_name}`}</TableCell>\r\n            <TableCell align=\"left\">{date}</TableCell>\r\n            <TableCell align=\"left\">{order.total} $</TableCell>\r\n            <TableCell align=\"left\">{order.status}</TableCell>\r\n          </TableRow>\r\n        )\r\n      })\r\n    } else {\r\n      return (\r\n        <Typography color=\"secondary\">\r\n          There was an error retrieving the data\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <Title>Orders</Title>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={classes.control}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"order-status-label\">Select status: </InputLabel>\r\n              <Select\r\n                labelId=\"order-status-label\"\r\n                id=\"order-status\"\r\n                value={orders.status}\r\n                onChange={handleSelectChange}\r\n              >\r\n                <MenuItem value=\"All\">All</MenuItem>\r\n                <MenuItem value=\"Processing\">Processing</MenuItem>\r\n                <MenuItem value=\"Dispatched\">Dispatched</MenuItem>\r\n                <MenuItem value=\"Completed\">Completed</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"spanning table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Order #</TableCell>\r\n                  <TableCell align=\"left\">Customer</TableCell>\r\n                  <TableCell align=\"left\">Date</TableCell>\r\n                  <TableCell align=\"left\">Amount</TableCell>\r\n                  <TableCell align=\"left\">Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{renderOrders()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {orders.count !== 0 ? (\r\n            <div className={classes.pagination}>\r\n              <Pagination\r\n                count={orders.count}\r\n                shape=\"rounded\"\r\n                onChange={handleChange}\r\n                page={page}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { authStore } from \"../../apis/store\"\r\nimport { messagesURL, messageUnreadURL } from \"../../constants\"\r\n\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport Title from \"./Title\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    color: theme.palette.grey[500],\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  pagination: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}))\r\n\r\nconst Messages = ({ state, setState }) => {\r\n  const classes = useStyles()\r\n\r\n  const [messages, setMessages] = useState({\r\n    loading: true,\r\n    payload: [],\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n    unread: null,\r\n  })\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const fetchMessages = (url) => {\r\n    authStore\r\n      .get(url, {\r\n        params: {\r\n          ordering: \"read\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        authStore\r\n          .get(messageUnreadURL)\r\n          .then((res) => {\r\n            const unread = res.data.unread\r\n            const count = Math.round(response.data.count / 10)\r\n            setMessages({\r\n              ...messages,\r\n              loading: false,\r\n              payload: response.data.results,\r\n              count: count,\r\n              next: response.data.next,\r\n              previous: response.data.previous,\r\n              unread: unread,\r\n            })\r\n          })\r\n          .catch((error) => {\r\n            setMessages({\r\n              ...messages,\r\n              loading: false,\r\n            })\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        setMessages({\r\n          ...messages,\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMessages(messagesURL)\r\n  }, [])\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value > page) {\r\n      setPage(value)\r\n      fetchMessages(messages.next)\r\n    } else if (value < page) {\r\n      setPage(value)\r\n      fetchMessages(messages.previous)\r\n    } else {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const generateList = () => {\r\n    if (messages.payload && messages.payload.length === 1) {\r\n      const message = messages.payload[0]\r\n      return (\r\n        <React.Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                message: message,\r\n                tab: \"MessageDetail\",\r\n              })\r\n            }}\r\n          >\r\n            <ListItemText\r\n              primary={message.email}\r\n              className={message.read ? classes.listItem : \"\"}\r\n            />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      )\r\n    } else if (messages.payload && messages.payload.length > 1) {\r\n      return messages.payload.map((message) => {\r\n        return (\r\n          <ListItem\r\n            divider\r\n            button\r\n            key={message.id}\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                tab: \"MessageDetail\",\r\n                message: message,\r\n              })\r\n            }}\r\n          >\r\n            <ListItemText\r\n              primary={message.email}\r\n              className={message.read ? classes.listItem : \"\"}\r\n            />\r\n          </ListItem>\r\n        )\r\n      })\r\n    } else if (messages.loading === true) {\r\n      return <CircularProgress />\r\n    } else {\r\n      return (\r\n        <Typography variant=\"h4\" component=\"p\" color=\"secondary\">\r\n          You don't have any messages\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Messages</Title>\r\n      <div>\r\n        <Typography variant=\"body1\" component=\"p\">\r\n          Unread Messages: {messages.unread ? messages.unread : 0}\r\n        </Typography>\r\n      </div>\r\n      <List>{generateList()}</List>\r\n      {messages.count !== 0 ? (\r\n        <div className={classes.pagination}>\r\n          <Pagination\r\n            count={messages.count}\r\n            shape=\"rounded\"\r\n            onChange={handleChange}\r\n            page={page}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Messages\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { authStore } from '../../apis/store'\r\nimport { maintenanceURL, maintenanceUpdateURL } from '../../constants'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Button from '@material-ui/core/Button'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Title from './Title'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n        width: 300,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nconst Maintenance = () => {\r\n    const classes = useStyles()\r\n    const [state, setState] = useState({\r\n        under_maintenance: false,\r\n        start_time: null,\r\n        end_time: null,\r\n        sending: false,\r\n        sent: false,\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        authStore.get(maintenanceURL)\r\n            .then(response => {\r\n                setState({\r\n                    ...state,\r\n                    ...response.data.results[0]\r\n                })\r\n            })\r\n            .catch(error => error)\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        setState({\r\n            ...state,\r\n            sending: true\r\n        })\r\n        authStore.patch(maintenanceUpdateURL, state)\r\n        .then(response => {\r\n            setState({\r\n                ...response.data,\r\n                sending: false,\r\n                sent: true\r\n            })\r\n        })\r\n        .catch(error => setState({...state, sending: false}))\r\n    } \r\n\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    const handleCheck = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.checked\r\n        })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            sent: false\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>\r\n                Maintenance\r\n            </Title>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={state.sent}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Maintenance notification updated!\"\r\n            >\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Maintenance notification updated!\r\n                </Alert>\r\n            </Snackbar>\r\n            <form onSubmit={onSubmit}>\r\n                <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={state ? state.under_maintenance : false} name=\"under_maintenance\" onChange={handleCheck} inputProps={{ 'aria-label': 'primary checkbox' }} />}\r\n                            label=\"Set to under maintenance?\"\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"start-time\"\r\n                            label=\"Start Time\"\r\n                            name=\"start_time\"\r\n                            onChange={handleChange}\r\n                            type=\"datetime-local\"\r\n                            value={state ? state.start_time ? state.start_time.slice(0, 16) : \"2021-05-25T10:30\" : \"\"}\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"end-time\"\r\n                            label=\"End Time\"\r\n                            type=\"datetime-local\"\r\n                            name=\"end_time\"\r\n                            onChange={handleChange}\r\n                            value={state ? state.end_time ? state.end_time.slice(0, 16) : \"2021-05-25T10:30\" : \"\"}\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            {state.sending ? (<CircularProgress />) : 'Save'}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Maintenance","import React, { useState } from \"react\"\r\n\r\nimport { authStore } from \"../../apis/store\"\r\nimport { discountURL } from \"../../constants\"\r\nimport CustomAlert from \"../Admin/CustomAlert\"\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport Title from \"./Title\"\r\nimport { Box } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    marginTop: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst Discount = () => {\r\n  const classes = useStyles()\r\n  const [state, setState] = useState({\r\n    percentage: 0,\r\n    sending: false,\r\n    sent: false,\r\n    error: false,\r\n    message: \"\",\r\n  })\r\n\r\n  const handleSubmit = () => {\r\n    setState({\r\n      ...state,\r\n      sending: true,\r\n    })\r\n    authStore\r\n      .post(discountURL, { discount: state.percentage })\r\n      .then((response) => {\r\n        setState({\r\n          ...state,\r\n          sending: false,\r\n          sent: true,\r\n          message: response.data.message,\r\n        })\r\n      })\r\n      .catch((error) =>\r\n        setState({\r\n          ...state,\r\n          sending: false,\r\n          error: true,\r\n        })\r\n      )\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({\r\n      ...state,\r\n      percentage: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return\r\n    }\r\n\r\n    if (state.sent === true) {\r\n      setState({\r\n        ...state,\r\n        sent: false,\r\n      })\r\n    } else if (state.error === true) {\r\n      setState({\r\n        ...state,\r\n        error: false,\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        error: false,\r\n        sent: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Discount</Title>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={state.sent}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message={state.message}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {state.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={state.error}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Failed to apply the discount\"\r\n      >\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          Failed to apply the discount\r\n        </Alert>\r\n      </Snackbar>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"discount\"\r\n            label=\"Discount Percentage\"\r\n            name=\"discount\"\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n            value={state.percentage}\r\n            className={classes.textField}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box p={4}>\r\n            <CustomAlert\r\n              button={state.sending ? <CircularProgress /> : \"Apply Discount\"}\r\n              title=\"Apply Discount\"\r\n              content={`Are you sure you want to apply ${state.percentage}% discount to all the products?`}\r\n              handleProcess={handleSubmit}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Discount\r\n","import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport clsx from \"clsx\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport Drawer from \"@material-ui/core/Drawer\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"\r\nimport Home from \"@material-ui/icons/Home\"\r\n\r\nimport Chart from \"./Chart\"\r\nimport Deposits from \"./Deposits\"\r\nimport OrderDetail from \"./OrderDetail\"\r\nimport Orders from \"./Orders\"\r\nimport ListItems from \"./ListItems\"\r\nimport Messages from \"./Messages\"\r\nimport MessageDetail from \"./MessageDetail\"\r\nimport Maintenance from \"./Maintenance\"\r\nimport Discount from \"./Discount\"\r\nimport Copyright from \"../../components/Copyright\"\r\n\r\nimport ScrollToTopOnMount from \"../../components/ScrollToTopOnMount\"\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  detail: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  list: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  div: {\r\n    position: \"relative\",\r\n  },\r\n  read: {\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n}))\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles()\r\n  const [state, setState] = useState({\r\n    tab: \"Dashboard\",\r\n    open: false,\r\n    orderId: null,\r\n    message: null,\r\n  })\r\n\r\n  const handleDrawerOpen = () => {\r\n    setState({ ...state, open: true })\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setState({ ...state, open: false })\r\n  }\r\n\r\n  const renderTab = () => {\r\n    if (state.tab === \"Dashboard\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={fixedHeightPaper}>\r\n            <Chart />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"Orders\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Orders state={state} setState={setState} />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"Deposits\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={fixedHeightPaper}>\r\n            <Deposits />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"Messages\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Messages state={state} setState={setState} />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"MessageDetail\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.detail}>\r\n            <MessageDetail\r\n              message={state.message}\r\n              state={state}\r\n              setState={setState}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"Maintenance\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Maintenance />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"Discount\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Discount />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.detail}>\r\n            <OrderDetail id={state.orderId} state={state} setState={setState} />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    }\r\n  }\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <ScrollToTopOnMount />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, state.open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              state.open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\" component={Link} to=\"/\">\r\n            <Home style={{ color: \"white\" }} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(\r\n            classes.drawerPaper,\r\n            !state.open && classes.drawerPaperClose\r\n          ),\r\n        }}\r\n        open={state.open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItems state={state} setState={setState} />\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {renderTab()}\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nexport const useButtonStyles = makeStyles((theme) => ({\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}))\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useButtonStyles } from \"./CheckoutStyles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport baseURL from \"../../setting\";\r\nimport axios from \"axios\";\r\n\r\nconst MyTextField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  return (\r\n    <TextField\r\n      {...field}\r\n      label={label}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      fullWidth\r\n    />\r\n  );\r\n};\r\n\r\n// const MyCheckbox = ({ label, ...props }) => {\r\n//   const [field] = useField(props);\r\n//   return (\r\n//     <FormControlLabel\r\n//       control={<Checkbox defaultChecked color=\"secondary\" />}\r\n//       label={label}\r\n//       {...field}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// const MySelect = ({ label, ...props }) => {\r\n//   const [field] = useField(props);\r\n//   return (\r\n//     <FormControl fullWidth>\r\n//       <InputLabel id=\"country\">{label}</InputLabel>\r\n//       <Select labelId=\"country\" {...field}>\r\n//         <MenuItem value={\"Pakistan\"}>Pakistan</MenuItem>\r\n//       </Select>\r\n//     </FormControl>\r\n//   );\r\n// };\r\n\r\nconst validationSchema = Yup.object({\r\n  firstName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\"),\r\n  lastName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\"),\r\n  phoneNumber: Yup.string()\r\n    .required(\"Required\")\r\n    .max(20, \"Can't be more than 20 numbers\"),\r\n  deliveryAddress: Yup.string()\r\n    .required(\"Required\")\r\n    .max(200, \"Can't be more than 200 characters\"),\r\n  googleLocation: Yup.string()\r\n    .required(\"Required\")\r\n    .max(200, \"Can't be more than 200 characters\"),\r\n});\r\nconst getPrice = (quantity, price) => {\r\n  return quantity * price;\r\n};\r\n\r\n// export default function AddressForm({ address, formRef }) {\r\nexport default function AddressForm() {\r\n  const [cart, setCart] = useState([]);\r\n  const buttonClasses = useButtonStyles();\r\n  // const dispatch = useDispatch(function)\r\n  const token = useSelector((state) => state.auth.token);\r\n  const check = useSelector((state) => state);\r\n  // console.log(token);\r\n\r\n  let total = 0;\r\n  cart.forEach((item) => (total += getPrice(item.quantity, item.price)));\r\n\r\n  useEffect(() => {\r\n    const getCart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    setCart(getCart);\r\n    // console.log(cart);\r\n  }, []);\r\n  // console.log(check);\r\n\r\n  const handleSubmit = (values) => {\r\n    // console.log(values);\r\n    const {\r\n      deliveryAddress,\r\n      firstName,\r\n      googleLocation,\r\n      lastName,\r\n      phoneNumber,\r\n    } = values;\r\n    // var obj = {};\r\n    // console.log(cart);\r\n    // cart.map((element, i) => {\r\n      // console.log(element.authorI);\r\n      // obj[element.authorId] = element.authorId;\r\n      // console.log(obj);\r\n    // });\r\n    // axios\r\n    //   .post(\r\n    //     `${baseURL}/api/v1/post/order`,\r\n    //     {\r\n    //       deliveryAddress: deliveryAddress,\r\n    //       firstName: firstName,\r\n    //       googleLocation: googleLocation,\r\n    //       lastName: lastName,\r\n    //       phoneNumber: phoneNumber,\r\n    //       total: total,\r\n    //       arrayOfCart: cart,\r\n    //     },\r\n    //     {\r\n    //       withCredentials: true,\r\n    //     }\r\n    //   )\r\n    //   .then((result) => {\r\n    //     console.log(result.data);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n\r\n    // // alert(JSON.stringify(values));\r\n    // // console.log(total);\r\n    // axios\r\n    //   .post(\r\n    //     `${baseURL}/api/v1/paypal`,\r\n    //     {\r\n    //       price: total,\r\n    //     },\r\n    //     {\r\n    //       withCredentials: true,\r\n    //     }\r\n    //   )\r\n    //   .then(async (result) => {\r\n    //     // console.log(result);\r\n    //     if (result) {\r\n    //       console.log(result);\r\n    //       await localStorage.removeItem(\"cart\")\r\n    //       const json = await result.data.link;\r\n    //       window.location.assign(json);\r\n    //     }\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List disablePadding>\r\n        {cart.map((product) => (\r\n          <ListItem key={product.id}>\r\n            <ListItemText\r\n              primary={<React.Fragment>{product.title}</React.Fragment>}\r\n            />\r\n            <Typography variant=\"body2\">\r\n              {product.quantity} x {product.price} $\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem>\r\n          <ListItemText\r\n            primary={<Typography variant=\"subtitle1\">Total</Typography>}\r\n          />\r\n          {/* <Typography variant=\"subtitle1\">{total} AED</Typography> */}\r\n          <Typography variant=\"subtitle1\"> {total} $</Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Address\r\n      </Typography>\r\n      <Formik\r\n        enableReinitialize\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          firstName: token.firstName,\r\n          lastName: token.lastName,\r\n          phoneNumber: token.phoneNumber,\r\n          deliveryAddress: token.address,\r\n          googleLocation: \"\",\r\n        }}\r\n        // innerRef={formRef}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <MyTextField name=\"firstName\" label=\"First name\" />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <MyTextField name=\"lastName\" label=\"Last name\" fullWidth />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MyTextField\r\n                  name=\"phoneNumber\"\r\n                  label=\"Phone Number\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MyTextField\r\n                  required\r\n                  name=\"deliveryAddress\"\r\n                  label=\"Delivery Address\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MyTextField\r\n                  name=\"googleLocation\"\r\n                  label=\"Google Pin Location URL\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              {/* <Grid item xs={12} sm={6}>\r\n                <MyTextField name=\"city\" label=\"City\" fullWidth />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <MyTextField\r\n                  name=\"state\"\r\n                  label=\"State/Province/Region\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <MyTextField\r\n                  name=\"zip\"\r\n                  label=\"Zip / Postal code\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping postal-code\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <MySelect\r\n                  name=\"country\"\r\n                  label=\"Country\"\r\n                  autoComplete=\"shipping country\"\r\n                />\r\n              </Grid> */}\r\n              {/* <Grid item xs={12}>\r\n                <MyCheckbox\r\n                  name=\"is_default\"\r\n                  label=\"Set this address as default?\"\r\n                />\r\n              </Grid> */}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div className={buttonClasses.buttons}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={buttonClasses.button}\r\n                  disabled={true}\r\n                >\r\n\r\n                  checkout\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport { useButtonStyles } from \"./CheckoutStyles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   listItem: {\r\n//     padding: theme.spacing(1, 0),\r\n//   },\r\n//   total: {\r\n//     fontWeight: 700,\r\n//   },\r\n//   title: {\r\n//     marginTop: theme.spacing(2),\r\n//   },\r\n// }))\r\n\r\nexport default function Address() {\r\n  //   {\r\n  //   checkoutState,\r\n  //   setCheckoutState,\r\n  //   options,\r\n  //   user,\r\n  //   checkoutData,\r\n  //   setCheckoutData,\r\n  // }\r\n  // const buttonClasses = useButtonStyles();\r\n\r\n  // const formRef = useRef(null)\r\n  // const [state, setState] = useState({\r\n  //   error: null,\r\n  //   saving: false,\r\n  //   success: false,\r\n  //   options: null,\r\n  //   formData: {\r\n  //     id: \"\",\r\n  //     user: \"\",\r\n  //     first_name: \"\",\r\n  //     last_name: \"\",\r\n  //     phone_number: \"\",\r\n  //     address_type: \"Shipping\",\r\n  //     street_address: \"\",\r\n  //     apartment_address: \"\",\r\n  //     city: \"\",\r\n  //     state: \"\",\r\n  //     country: \"UAE\",\r\n  //     zip: \"\",\r\n  //     is_default: true,\r\n  //   },\r\n  // })\r\n\r\n  // const firstItem = {\r\n  //   id: \"\",\r\n  //   user: \"\",\r\n  //   first_name: \"\",\r\n  //   last_name: \"\",\r\n  //   phone_number: \"\",\r\n  //   address_type: \"Shipping\",\r\n  //   street_address: \"\",\r\n  //   apartment_address: \"\",\r\n  //   city: \"\",\r\n  //   state: \"\",\r\n  //   country: \"Pak\",\r\n  //   zip: \"\",\r\n  //   is_default: true,\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   if (user) {\r\n  //     setState({\r\n  //       ...state,\r\n  //       formData: {\r\n  //         ...state.formData,\r\n  //         first_name: user.first_name,\r\n  //         last_name: user.last_name,\r\n  //         phone_number: user.phone_number || \"\",\r\n  //         user: user.id,\r\n  //       },\r\n  //     })\r\n  //   }\r\n  // }, [user])\r\n\r\n  // useEffect(() => {\r\n  //   window.scrollTo(0, 0)\r\n  //   if (options) {\r\n  //     const addresses = options.filter(\r\n  //       (item) => item.address_type === \"Shipping\"\r\n  //     )\r\n  //     if (!checkoutData.shippingDetail) {\r\n  //       if (addresses && addresses.length >= 1) {\r\n  //         const defaultAddress = addresses.find(\r\n  //           (element) => element.is_default === true\r\n  //         )\r\n  //         if (defaultAddress || defaultAddress !== undefined) {\r\n  //           setState({\r\n  //             ...state,\r\n  //             options: addresses,\r\n  //             formData: {\r\n  //               ...state.formData,\r\n  //               ...defaultAddress,\r\n  //             },\r\n  //           })\r\n  //         } else {\r\n  //           setState({\r\n  //             ...state,\r\n  //             options: addresses,\r\n  //             formData: {\r\n  //               ...state.formData,\r\n  //               ...addresses[0],\r\n  //             },\r\n  //           })\r\n  //         }\r\n  //       }\r\n  //     } else {\r\n  //       setState({\r\n  //         ...state,\r\n  //         options: addresses,\r\n  //         formData: {\r\n  //           ...checkoutData.shippingDetail,\r\n  //         },\r\n  //       })\r\n  //     }\r\n  //   } else {\r\n  //     if (checkoutData.shippingDetail) {\r\n  //       setState({\r\n  //         ...state,\r\n  //         formData: {\r\n  //           ...checkoutData.shippingDetail,\r\n  //         },\r\n  //       })\r\n  //     }\r\n  //   }\r\n  // }, [options])\r\n\r\n  // const handleSelect = (e) => {\r\n  //   if (e.target.value === \"i\") {\r\n  //     setState({\r\n  //       ...state,\r\n  //       formData: {\r\n  //         ...firstItem,\r\n  //       },\r\n  //     })\r\n  //   } else {\r\n  //     const selectedObject = state.options.find(\r\n  //       (obj) => obj.id === e.target.value\r\n  //     )\r\n  //     setState({\r\n  //       ...state,\r\n  //       formData: {\r\n  //         ...selectedObject,\r\n  //       },\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // const handleCheckout = (data) => {\r\n  //   if (checkoutState.useBilling === true) {\r\n  //     let billingData = {\r\n  //       ...data,\r\n  //       id: \"\",\r\n  //       address_type: \"Billing\",\r\n  //     }\r\n  //     setCheckoutData({\r\n  //       ...checkoutData,\r\n  //       shippingDetail: data,\r\n  //       billingDetail: billingData,\r\n  //       selectedShippingAddress: data.id,\r\n  //     })\r\n  //   } else {\r\n  //     setCheckoutData({\r\n  //       ...checkoutData,\r\n  //       shippingDetail: data,\r\n  //       selectedShippingAddress: data.id,\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  // const handleNext = () => {\r\n  //   const values = formRef.current.submitForm()\r\n  //   values.then((response) => {\r\n  //     handleCheckout(response)\r\n  //     setCheckoutState({\r\n  //       ...checkoutState,\r\n  //       activeStep: checkoutState.activeStep + 1,\r\n  //     })\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <AddressForm />\r\n        </Grid>\r\n      </Grid>\r\n      {/* <List disablePadding>\r\n          {products.map((product) => (\r\n            <ListItem className={classes.listItem} key={product.id}>\r\n              <ListItemText\r\n                primary={<React.Fragment>{product.item.title}</React.Fragment>}\r\n              />\r\n              <Typography variant=\"body2\">\r\n                {product.quantity} x {getPrice(product)} AED\r\n              </Typography>\r\n            </ListItem>\r\n          ))}\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemText\r\n              primary={\r\n                <Typography variant=\"subtitle1\" className={classes.total}>\r\n                  Shipping\r\n                </Typography>\r\n              }\r\n            />\r\n            <Typography variant=\"subtitle1\">{shipping} AED</Typography>\r\n          </ListItem>\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemText\r\n              primary={\r\n                <Typography variant=\"subtitle1\" className={classes.total}>\r\n                  Total\r\n                </Typography>\r\n              }\r\n            />\r\n            <Typography variant=\"subtitle1\">{total} AED</Typography>\r\n          </ListItem>\r\n        </List> \r\n       <Grid item xs={12}>\r\n        <Typography variant=\"body1\" component=\"p\" color=\"primary\">\r\n          An error occurred while fetching addresses\r\n        </Typography>\r\n      </Grid> \r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Address\r\n      </Typography> \r\n      <Grid container spacing={3}>\r\n        {/* {state.error && (\r\n          <Typography variant=\"body1\" component=\"p\" color=\"error\">\r\n            An error occurred while fetching addresses.\r\n          </Typography>\r\n        )} \r\n        {state.options && state.options.length > 0 ? (\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel shrink id=\"select-address\">\r\n                Saved Addresses\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"select-address\"\r\n                value={state.formData.id}\r\n                onChange={handleSelect}\r\n              >\r\n                <MenuItem key={\"\" + Math.random()} value={\"i\"}>\r\n                  Create New\r\n                </MenuItem>\r\n                {state.options.map((address) => {\r\n                  return (\r\n                    <MenuItem key={address.id} value={address.id}>\r\n                      {address.street_address}\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        ) : (\r\n          \"\"\r\n        )} \r\n        <Grid item xs={12}>\r\n          {/* <AddressForm address={state.formData} formRef={formRef} /> \r\n          <AddressForm />\r\n        </Grid>\r\n         <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"secondary\"\r\n                name=\"use_billing\"\r\n                checked={\r\n                  checkoutState.useBilling ? checkoutState.useBilling : false\r\n                }\r\n              />\r\n            }\r\n            label=\"Use the same address for billing?\"\r\n            onChange={() => {\r\n              setCheckoutState({\r\n                ...checkoutState,\r\n                useBilling: !checkoutState.useBilling,\r\n              })\r\n            }}\r\n          />\r\n        </Grid> \r\n        <Grid item xs={12}></Grid> \r\n         <Grid item xs={12}>\r\n          <div className={buttonClasses.buttons}>\r\n            <Button\r\n              // onClick={handleNext}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={buttonClasses.button}\r\n            >\r\n              submit\r\n            </Button>\r\n          </div>\r\n        </Grid> \r\n      </Grid>*/}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport ScrollToTopOnMount from \"../../components/ScrollToTopOnMount\"\r\nimport Cookies from \"js-cookie\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { useButtonStyles } from \"./CheckoutStyles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nexport default function Review({\r\n  data,\r\n  shoppingCart,\r\n  state,\r\n  setState,\r\n  handleSubmit,\r\n}) {\r\n  const classes = useStyles()\r\n  const buttonClasses = useButtonStyles()\r\n  const [disabled, setDisabled] = useState(false)\r\n  const products = shoppingCart && shoppingCart.items\r\n  const total = shoppingCart && shoppingCart.total\r\n  const shipping = shoppingCart && shoppingCart.shipping_cost\r\n  const shippingAddress = data.shippingDetail\r\n  const billingAddress = data.shippingDetail\r\n\r\n  useEffect(() => {\r\n    const checkCookie = () => {\r\n      let cookieEnabled = navigator.cookieEnabled\r\n      if (!cookieEnabled) {\r\n        Cookies.set(\"Test cookie\", 1)\r\n        cookieEnabled = Cookies.get(\"Test cookie\")\r\n        Cookies.remove(\"Test cookie\")\r\n      }\r\n\r\n      return cookieEnabled || setDisabled(true)\r\n    }\r\n    checkCookie()\r\n  }, [])\r\n\r\n  const handleCheckout = () => {\r\n    handleSubmit()\r\n  }\r\n\r\n  const getPrice = (product) => {\r\n    if (product.config) {\r\n      if (product.config.discount_price) {\r\n        return product.config.discount_price\r\n      } else {\r\n        return product.config.price\r\n      }\r\n    } else {\r\n      if (product.item.discount_price) {\r\n        return product.item.discount_price\r\n      } else {\r\n        return product.item.price\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      {disabled ? (\r\n        <Typography color=\"error\" variant=\"body1\" component=\"p\">\r\n          Please enable cookies to complete the checkout process.\r\n        </Typography>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {products && (\r\n        <List disablePadding>\r\n          {products.map((product) => (\r\n            <ListItem className={classes.listItem} key={product.id}>\r\n              <ListItemText\r\n                primary={<React.Fragment>{product.item.title}</React.Fragment>}\r\n              />\r\n              <Typography variant=\"body2\">\r\n                {product.quantity} x {getPrice(product)} AED\r\n              </Typography>\r\n            </ListItem>\r\n          ))}\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemText\r\n              primary={\r\n                <Typography variant=\"subtitle1\" className={classes.total}>\r\n                  Shipping\r\n                </Typography>\r\n              }\r\n            />\r\n            <Typography variant=\"subtitle1\">{shipping} AED</Typography>\r\n          </ListItem>\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemText\r\n              primary={\r\n                <Typography variant=\"subtitle1\" className={classes.total}>\r\n                  Total\r\n                </Typography>\r\n              }\r\n            />\r\n            <Typography variant=\"subtitle1\">{total} AED</Typography>\r\n          </ListItem>\r\n        </List>\r\n      )}\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Shipping\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            {shippingAddress.first_name} {shippingAddress.last_name}\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            {shippingAddress.street_address},{\" \"}\r\n            {shippingAddress.apartment_address}, {shippingAddress.city},{\" \"}\r\n            {shippingAddress.state},{shippingAddress.zip},{\" \"}\r\n            {shippingAddress.country}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Billing\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            {billingAddress.first_name} {billingAddress.last_name}\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            {billingAddress.street_address}, {billingAddress.apartment_address},\r\n            {billingAddress.city}, {billingAddress.state}, {billingAddress.zip},\r\n            {billingAddress.country}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={buttonClasses.buttons}>\r\n            <Button\r\n              onClick={() => {\r\n                console.log(\"Calling this\")\r\n                setState({ ...state, activeStep: state.activeStep - 1 })\r\n              }}\r\n              className={buttonClasses.button}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              onClick={handleCheckout}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={buttonClasses.button}\r\n              disabled={disabled}\r\n            >\r\n              Checkout\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport {\r\n  addressURL,\r\n  addressUpdateURL,\r\n  addressCreateURL,\r\n  checkoutURL,\r\n  userDetailsURL,\r\n} from \"../../constants\";\r\nimport { clearCart } from \"../../store/actions/cart\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Address from \"./Address\";\r\nimport Payment from \"./Payment\";\r\nimport Review from \"./Review\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\n// const steps = [\"Shipping address\", \"Payment details\", \"Review your order\"]\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const [state, setState] = useState({\r\n    error: null,\r\n    loading: false,\r\n    useBilling: true,\r\n    activeStep: 0,\r\n    order: null,\r\n  });\r\n  const [user, setUser] = useState(null);\r\n  const [options, setOptions] = useState(null);\r\n  const [checkoutData, setCheckoutData] = useState({\r\n    selectedBillingAddress: null,\r\n    selectedShippingAddress: null,\r\n    shippingDetail: null,\r\n    billingDetail: null,\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   const getUser = () => {\r\n  //     authStore\r\n  //       .get(userDetailsURL)\r\n  //       .then((response) => setUser(response.data))\r\n  //       .catch((error) => error)\r\n  //   }\r\n  //   const getAddresses = () => {\r\n  //     authStore\r\n  //       .get(addressURL)\r\n  //       .then((response) => {\r\n  //         setOptions(response.data)\r\n  //       })\r\n  //       .catch((error) => error)\r\n  //   }\r\n  //   getAddresses()\r\n  //   getUser()\r\n  // }, [])\r\n\r\n  // const handleEdit = (data) => {\r\n  //   return authStore.patch(addressUpdateURL(data.id), data)\r\n  // }\r\n\r\n  // const handleCreate = (data) => {\r\n  //   return authStore.post(addressCreateURL, data)\r\n  // }\r\n\r\n  // const handleBilling = (data) => {\r\n  //   if (\r\n  //     data.selectedBillingAddress !== null &&\r\n  //     data.selectedBillingAddress !== \"\"\r\n  //   ) {\r\n  //     return handleEdit(data.billingDetail)\r\n  //   } else {\r\n  //     return handleCreate(data.billingDetail)\r\n  //   }\r\n  // }\r\n\r\n  // const checkout = () => {\r\n  //   let payload = {\r\n  //     selectedShippingAddress: null,\r\n  //     selectedBillingAddress: null,\r\n  //     shippingDetail: checkoutData.shippingDetail,\r\n  //     billingDetail: checkoutData.billingDetail,\r\n  //   }\r\n\r\n  //   payload.selectedShippingAddress = Cookies.get(\"shipping\")\r\n  //   payload.selectedBillingAddress = Cookies.get(\"billing\")\r\n  //   Cookies.remove(\"shipping\")\r\n  //   Cookies.remove(\"billing\")\r\n  //   authStore\r\n  //     .post(checkoutURL, payload)\r\n  //     .then((response) => {\r\n  //       dispatch(clearCart())\r\n  //       setState({\r\n  //         ...state,\r\n  //         activeStep: 3,\r\n  //         loading: false,\r\n  //         order: response.data,\r\n  //       })\r\n  //     })\r\n  //     .catch((error) =>\r\n  //       setState({\r\n  //         ...state,\r\n  //         activeStep: 3,\r\n  //         loading: false,\r\n  //         error: error,\r\n  //       })\r\n  //     )\r\n  // }\r\n\r\n  // const handleSubmit = () => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     activeStep: 3,\r\n  //     loading: true,\r\n  //   })\r\n  //   if (\r\n  //     checkoutData.selectedShippingAddress !== null &&\r\n  //     checkoutData.selectedShippingAddress !== \"\"\r\n  //   ) {\r\n  //     handleEdit(checkoutData.shippingDetail)\r\n  //       .then((response) => {\r\n  //         Cookies.set(\"shipping\", response.data.id, { expires: 1 })\r\n  //         return handleBilling(checkoutData)\r\n  //       })\r\n  //       .then((response) => {\r\n  //         Cookies.set(\"billing\", response.data.id, { expires: 1 })\r\n  //         checkout()\r\n  //       })\r\n  //       .catch((error) =>\r\n  //         setState({\r\n  //           ...state,\r\n  //           activeStep: 3,\r\n  //           error: error,\r\n  //         })\r\n  //       )\r\n  //   } else {\r\n  //     handleCreate(checkoutData.shippingDetail)\r\n  //       .then((response) => {\r\n  //         Cookies.set(\"shipping\", response.data.id, { expires: 1 })\r\n  //         return handleBilling(checkoutData)\r\n  //       })\r\n  //       .then((response) => {\r\n  //         Cookies.set(\"billing\", response.data.id, { expires: 1 })\r\n  //         checkout()\r\n  //       })\r\n  //       .catch((error) =>\r\n  //         setState({\r\n  //           ...state,\r\n  //           activeStep: 3,\r\n  //           error: error,\r\n  //         })\r\n  //       )\r\n  //   }\r\n  // }\r\n\r\n  // const getStepContent = (step) => {\r\n  //   switch (step) {\r\n  //     case 0:\r\n  //       return (\r\n  //         <Address\r\n  //           user={user}\r\n  //           options={options}\r\n  //           checkoutState={state}\r\n  //           setCheckoutState={setState}\r\n  //           checkoutData={checkoutData}\r\n  //           setCheckoutData={setCheckoutData}\r\n  //         />\r\n  //       )\r\n  //     case 1:\r\n  //       return (\r\n  //         <Payment\r\n  //           user={user}\r\n  //           options={options}\r\n  //           checkoutState={state}\r\n  //           setCheckoutState={setState}\r\n  //           checkoutData={checkoutData}\r\n  //           setCheckoutData={setCheckoutData}\r\n  //         />\r\n  //       )\r\n  //     case 2:\r\n  //       return (\r\n  //         <Review\r\n  //           data={checkoutData}\r\n  //           shoppingCart={cart.shoppingCart}\r\n  //           state={state}\r\n  //           setState={setState}\r\n  //           handleSubmit={handleSubmit}\r\n  //         />\r\n  //       )\r\n  //     default:\r\n  //       throw new Error(\"Unknown step\")\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Address\r\n              user={user}\r\n              options={options}\r\n              checkoutState={state}\r\n              setCheckoutState={setState}\r\n              checkoutData={checkoutData}\r\n              setCheckoutData={setCheckoutData}\r\n            />\r\n          </React.Fragment>\r\n          {/* <Stepper activeStep={state.activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper> */}\r\n          {/* <React.Fragment>\r\n            {state.activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                {state.loading === true ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <React.Fragment>\r\n                    {state.error ? (\r\n                      <React.Fragment>\r\n                        <Typography variant=\"body1\" component=\"p\" color=\"error\">\r\n                          An error occurred during checkout, so your order could\r\n                          not be completed.\r\n                        </Typography>\r\n                        <Link to=\"/\" className={classes.linkText}>\r\n                          <Box p={4}>\r\n                            <Button variant=\"contained\">\r\n                              Continue Shopping\r\n                            </Button>\r\n                          </Box>\r\n                        </Link>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      <React.Fragment>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                          Thank you for your order.\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\">\r\n                          Your order number is #{\" \"}\r\n                          {state.order ? state.order.id : \"\"}. We have emailed\r\n                          your order confirmation, and will send you an update\r\n                          when your order has shipped.\r\n                        </Typography>\r\n                        <Link to=\"/\" className={classes.linkText}>\r\n                          <Box p={4}>\r\n                            <Button variant=\"contained\">\r\n                              Continue Shopping\r\n                            </Button>\r\n                          </Box>\r\n                        </Link>\r\n                      </React.Fragment>\r\n                    )}\r\n                  </React.Fragment>\r\n                )}\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(state.activeStep)}\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment> */}\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport { updateUserURL } from \"../../constants\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Edit = ({ state, setState }) => {\r\n  const classes = useStyles();\r\n  const [details, setDetails] = useState({\r\n    saving: false,\r\n    success: null,\r\n    error: null,\r\n    formData: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      phoneNumber: \"\",\r\n      address: \"\",\r\n    },\r\n  });\r\n\r\n  const { formData } = details;\r\n\r\n  useEffect(() => {\r\n    // console.log(state)\r\n    setDetails({\r\n      ...details,\r\n      formData: {\r\n        id: state.user.id || \"\",\r\n        firstName: state.user.firstName || \"\",\r\n        lastName: state.user.lastName || \"\",\r\n        phoneNumber: state.user.phoneNumber || \"\",\r\n        address: state.user.address || \"\",\r\n      },\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(details.formData);\r\n    setDetails({\r\n      ...details,\r\n      saving: true,\r\n    });\r\n    authStore\r\n      .post(\r\n        updateUserURL,\r\n        {\r\n          firstName: details.formData.firstName,\r\n          lastName: details.formData.lastName,\r\n          phoneNumber: details.formData.phoneNumber,\r\n          address: details.formData.address,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setState({\r\n          option: \"account\",\r\n          user: { ...response.data },\r\n        });\r\n        setDetails({\r\n          ...details,\r\n          success: true,\r\n          saving: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setDetails({\r\n          ...details,\r\n          success: false,\r\n          saving: false,\r\n          error: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { formData } = details;\r\n    const updatedFormData = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    setDetails({\r\n      ...details,\r\n      formData: updatedFormData,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {details.success === true ? (\r\n        <Typography variant=\"h4\" color=\"primary\">\r\n          Your information has been successfully updated!\r\n        </Typography>\r\n      ) : details.success === false ? (\r\n        <Typography variant=\"h4\" color=\"secondary\">\r\n          There was an error in updating the data\r\n        </Typography>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <form className={classes.form} onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              value={formData.firstName}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              value={formData.lastName}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              type=\"number\"\r\n              id=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              label=\"Phone Number\"\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              value={formData.phoneNumber}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"address\"\r\n              name=\"address\"\r\n              label=\"Address\"\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              value={formData.address}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          {details.saving === true ? (\r\n            <CircularProgress color=\"primary\" />\r\n          ) : (\r\n            \"Save\"\r\n          )}\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","import React from \"react\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst Account = ({ state }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Box fontWeight=\"fontWeightMedium\">Name</Box>\r\n              </TableCell>\r\n              <TableCell>\r\n                {`${state.user.firstName} ${state.user.lastName}`}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Box fontWeight=\"fontWeightMedium\">Email</Box>\r\n              </TableCell>\r\n              <TableCell>{state.user.email}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Box fontWeight=\"fontWeightMedium\">Phone Number</Box>\r\n              </TableCell>\r\n              <TableCell>+92 {state.user.phoneNumber}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Box fontWeight=\"fontWeightMedium\">Address</Box>\r\n              </TableCell>\r\n              <TableCell>{state.user.address}</TableCell>\r\n            </TableRow>\r\n\r\n            {/* <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Box fontWeight=\"fontWeightMedium\">Phone Number</Box>\r\n              </TableCell>\r\n              <TableCell>\r\n                {state.user.phone_number\r\n                  ? state.user.phone_number\r\n                  : \"Not available\"}\r\n              </TableCell>\r\n            </TableRow> */}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport { orderUserListURL } from \"../../constants\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport baseURL from \"../../setting\";\r\nimport axios from \"axios\";\r\n\r\nconst Orders = () => {\r\n  // const [callUesEffect, setCallUesEffect] = useState(true)\r\n  const [orders, setOrders] = useState({\r\n    error: null,\r\n    loading: true,\r\n    payload: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    authStore\r\n      .get(orderUserListURL, {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setOrders({ ...orders, payload: response.data, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        setOrders({ ...orders, error: error.response, loading: false });\r\n        // console.log(error.response.status);\r\n      });\r\n    //   }, [callUesEffect]);\r\n  }, []);\r\n\r\n  const changeStatus = (e) => {\r\n    const elementId = e.target.parentElement.parentElement.parentElement.id;\r\n    axios\r\n      .post(\r\n        `${baseURL}/api/v1/changestatus`,\r\n        {\r\n          orderId: elementId,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((result) => {\r\n        if (result) {\r\n          e.target.innerText = result.data;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return <CircularProgress />;\r\n    } else if (orders.error && orders.error.status === 500) {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          There was an error loading the data: ( &nbsp; {orders.error.data}{\" \"}\r\n        </Typography>\r\n      );\r\n    } else if (orders.payload !== null && orders.payload.length > 0) {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell> Product </TableCell>\r\n                <TableCell align=\"left\"> Quantity </TableCell>\r\n                <TableCell align=\"left\"> Total </TableCell>\r\n                <TableCell align=\"left\"> Status </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.payload.map((item, i) => (\r\n                <TableRow\r\n                  key={orders.payload[i]._id}\r\n                  id={orders.payload[i]._id}\r\n                >\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart.map((element) => {\r\n                      return `${element.title}, `;\r\n                    })}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart.map((element) => {\r\n                      return `${element.quantity}, `;\r\n                    })}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.total} $\r\n                    {/* {new Date(item.ordered_date).toLocaleDateString(\"en-US\", {\r\n                                                          day: \"numeric\",\r\n                                                          month: \"short\",\r\n                                                          year: \"numeric\",\r\n                                                          hour: \"numeric\",\r\n                                                          minute: \"numeric\",\r\n                                                        })} */}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={changeStatus}\r\n                      //   id={orders.payload[0]._id}\r\n                      //   id={1}\r\n                    >\r\n                      {item.status}\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    } else {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          You haven't ordered anything yet.\r\n        </Typography>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        {renderOrders()}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState, useEffect, useRef } from \"react\"\r\nimport _ from \"lodash\"\r\n\r\nimport { authStore } from \"../../apis/store\"\r\nimport {\r\n  addressURL,\r\n  addressCreateURL,\r\n  addressUpdateURL,\r\n  addressDeleteURL,\r\n} from \"../../constants\"\r\nimport { showError } from \"../../utils\"\r\nimport AddressForm from \"../Checkout/AddressForm\"\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport AddressDeleteDialog from \"./AddressDeleteDialog\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport FormLabel from \"@material-ui/core/FormLabel\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport Radio from \"@material-ui/core/Radio\"\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nconst Address = ({ user }) => {\r\n  const classes = useStyles()\r\n\r\n  const formRef = useRef(null)\r\n  const [state, setState] = useState({\r\n    error: null,\r\n    saving: false,\r\n    success: false,\r\n    edit: false,\r\n    create: false,\r\n    addresses: null,\r\n    formData: {\r\n      id: \"\",\r\n      user: user.id,\r\n      first_name: user.first_name,\r\n      last_name: user.last_name,\r\n      phone_number: user.phone_number || \"\",\r\n      address_type: \"Shipping\",\r\n      street_address: \"\",\r\n      apartment_address: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      country: \"UAE\",\r\n      zip: \"\",\r\n      is_default: false,\r\n    },\r\n  })\r\n\r\n  const onCreateSubmit = () => {\r\n    const values = formRef.current.submitForm()\r\n    values.then((data) => {\r\n      authStore\r\n        .post(addressCreateURL, data)\r\n        .then((response) => {\r\n          setState({\r\n            ...state,\r\n            success: true,\r\n            saving: false,\r\n            create: false,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            error: error,\r\n          })\r\n        })\r\n    })\r\n  }\r\n\r\n  const handleEditAddress = (address) => {\r\n    setState({\r\n      ...state,\r\n      edit: true,\r\n      formData: address,\r\n    })\r\n  }\r\n\r\n  const onEditSubmit = () => {\r\n    const values = formRef.current.submitForm()\r\n    values.then((data) => {\r\n      authStore\r\n        .patch(addressUpdateURL(data.id), data)\r\n        .then((response) => {\r\n          setState({\r\n            ...state,\r\n            success: true,\r\n            saving: false,\r\n            edit: false,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            error: error,\r\n          })\r\n        })\r\n    })\r\n  }\r\n\r\n  const onDelete = (id) => {\r\n    setState({ ...state, saving: true })\r\n    authStore\r\n      .delete(addressDeleteURL(id))\r\n      .then((response) => {\r\n        setState({ ...state, saving: false })\r\n      })\r\n      .catch((error) => setState({ ...state, saving: false, error: error }))\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({\r\n      ...state,\r\n      formData: {\r\n        ...formRef.current.values,\r\n        address_type: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getAddresses = async () => {\r\n      const response = await authStore.get(addressURL)\r\n      setState({\r\n        ...state,\r\n        addresses: response.data,\r\n      })\r\n    }\r\n    getAddresses()\r\n  }, [state.saving, state.edit, state.create])\r\n\r\n  const renderAddress = (item) => {\r\n    return (\r\n      <TableRow key={item.id}>\r\n        <TableCell align=\"left\">{`${item.apartment_address} ${item.street_address}`}</TableCell>\r\n        <TableCell align=\"left\">{item.address_type}</TableCell>\r\n        <TableCell align=\"right\">\r\n          <IconButton onClick={() => handleEditAddress(item)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          <AddressDeleteDialog onDelete={() => onDelete(item.id)} />\r\n        </TableCell>\r\n      </TableRow>\r\n    )\r\n  }\r\n\r\n  const renderComponents = () => {\r\n    if (state.edit === true) {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">Edit Address</Typography>\r\n            <AddressForm formRef={formRef} address={state.formData} />\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel componenet=\"legend\" className={classes.formLabel}>\r\n                Address Type\r\n              </FormLabel>\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                name=\"address_type\"\r\n                value={state.formData.address_type}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Shipping\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Shipping\"\r\n                  labelPlacement=\"top\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Billing\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Billing\"\r\n                  labelPlacement=\"top\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <Button\r\n              fullWidth\r\n              className={classes.submit}\r\n              onClick={onEditSubmit}\r\n              variant=\"contained\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            className={classes.submit}\r\n            onClick={() =>\r\n              setState({\r\n                ...state,\r\n                edit: false,\r\n                formData: {\r\n                  ...state.formData,\r\n                  id: \"\",\r\n                  address_type: \"Shipping\",\r\n                  street_address: \"\",\r\n                  apartment_address: \"\",\r\n                  city: \"\",\r\n                  state: \"\",\r\n                  country: \"\",\r\n                  zip: \"\",\r\n                  is_default: false,\r\n                },\r\n              })\r\n            }\r\n            variant=\"contained\"\r\n          >\r\n            Back\r\n          </Button>\r\n        </React.Fragment>\r\n      )\r\n    } else if (state.create === true) {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\">Create Address</Typography>\r\n            <AddressForm formRef={formRef} address={state.formData} />\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel componenet=\"legend\" className={classes.formLabel}>\r\n                Address Type\r\n              </FormLabel>\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                name=\"address_type\"\r\n                value={state.formData.address_type}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Shipping\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Shipping\"\r\n                  labelPlacement=\"top\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Billing\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Billing\"\r\n                  labelPlacement=\"top\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <Button\r\n              fullWidth\r\n              className={classes.submit}\r\n              onClick={onCreateSubmit}\r\n              variant=\"contained\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            className={classes.submit}\r\n            onClick={() => setState({ ...state, create: false })}\r\n            variant=\"contained\"\r\n          >\r\n            Back\r\n          </Button>\r\n        </React.Fragment>\r\n      )\r\n    } else if (!_.isEmpty(state.addresses)) {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid item xs={12}>\r\n            {_.isEmpty(state.addresses) ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <React.Fragment>\r\n                <TableContainer component={Paper}>\r\n                  <Table className={classes.table} aria-label=\"spanning table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Address</TableCell>\r\n                        <TableCell align=\"left\">Address Type</TableCell>\r\n                        <TableCell />\r\n                        <TableCell />\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {state.addresses.map((item) => renderAddress(item))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </React.Fragment>\r\n            )}\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            color=\"primary\"\r\n            onClick={() => setState({ ...state, create: true })}\r\n          >\r\n            Create a new Address\r\n          </Button>\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid item xs={12}>\r\n            No addresses added yet.\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            color=\"primary\"\r\n            onClick={() => setState({ ...state, create: true })}\r\n          >\r\n            Create a new Address\r\n          </Button>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      {state.error ? (\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body1\" component=\"p\" color=\"error\">\r\n            {showError(state.error)}\r\n          </Typography>\r\n        </Grid>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {renderComponents()}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Address\r\n","import React, { useState } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport { changePasswordURL } from \"../../constants\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { showError } from \"../../utils\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Password = () => {\r\n  const classes = useStyles();\r\n\r\n  const [password, setPassword] = useState({\r\n    saving: false,\r\n    success: null,\r\n    error: null,\r\n    message: null,\r\n  });\r\n\r\n  const handleSubmit = (values, { resetForm, setSubmitting }) => {\r\n    const { oldPassword, newPassword1, newPassword2 } = values;\r\n    setPassword({\r\n      ...password,\r\n      saving: true,\r\n    });\r\n    authStore\r\n      .post(\r\n        changePasswordURL,\r\n        {\r\n          old_password: oldPassword,\r\n          new_password1: newPassword1,\r\n          new_password2: newPassword2,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPassword({\r\n          saving: false,\r\n          success: true,\r\n        });\r\n        setSubmitting(false);\r\n        resetForm();\r\n      })\r\n      .catch((error) => {\r\n        setPassword({\r\n          ...password,\r\n          saving: false,\r\n          success: false,\r\n          error: true,\r\n          message: error,\r\n        });\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    if (password.success === true) {\r\n      setPassword({\r\n        ...password,\r\n        success: false,\r\n      });\r\n    } else {\r\n      setPassword({\r\n        ...password,\r\n        error: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const MyTextField = ({ label, autoFocus, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n    return (\r\n      <TextField\r\n        {...field}\r\n        label={label}\r\n        autoFocus={autoFocus}\r\n        helperText={errorText}\r\n        error={!!errorText}\r\n        fullWidth\r\n        type=\"password\"\r\n        required\r\n      />\r\n    );\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    oldPassword: Yup.string()\r\n      .min(8, \"Must be more than 8 characters\")\r\n      .required(\"Required\")\r\n      .matches(\r\n        /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/,\r\n        \"Must have at least one number, one lowercase and one uppercase letter\"\r\n      ),\r\n    newPassword1: Yup.string()\r\n      .min(8, \"Must be more than 8 characters\")\r\n      .required(\"Required\")\r\n      .matches(\r\n        /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/,\r\n        \"Must have at least one number, one lowercase and one uppercase letter\"\r\n      ),\r\n    newPassword2: Yup.string().oneOf(\r\n      [Yup.ref(\"newPassword1\"), null],\r\n      \"Passwords must match\"\r\n    ),\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={password.success}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n          Password changed successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={password.error}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {showError(password.message)}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Formik\r\n        onSubmit={handleSubmit}\r\n        validateOnChange={true}\r\n        validationSchema={validationSchema}\r\n        initialValues={{\r\n          oldPassword: \"\",\r\n          newPassword1: \"\",\r\n          newPassword2: \"\",\r\n        }}\r\n      >\r\n        {({ values, errors, isSubmitting }) => (\r\n          <Form className={classes.form}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <MyTextField name=\"oldPassword\" label=\"Old Password\" required />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MyTextField\r\n                  name=\"newPassword1\"\r\n                  label=\"New Password\"\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MyTextField\r\n                  name=\"newPassword2\"\r\n                  label=\"New Password (again)\"\r\n                  required\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={isSubmitting}\r\n            >\r\n              {password.saving ? <CircularProgress color=\"primary\" /> : \"Save\"}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import React from 'react'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    linkText: {\r\n        textDecoration: 'none',\r\n        textTransform: 'uppercase',\r\n        color: 'black'\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        root: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        linkText: {\r\n            textDecoration: 'none',\r\n            textTransform: 'uppercase',\r\n            color: 'black'\r\n        }\r\n    }\r\n}))\r\n\r\nconst ProfileList = ({state, setState}) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem button onClick={() => setState({ ...state, option: 'account', display: 'Account Details'})}>\r\n                <ListItemText className={classes.linkText} primary=\"Account Details\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => setState({ ...state, option: 'orders', display: 'Orders'})}>\r\n                <ListItemText className={classes.linkText} primary=\"Orders\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => setState({ ...state, option: 'edit', display: 'Edit Details'})}>\r\n                <ListItemText className={classes.linkText} primary=\"Edit Details\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => setState({ ...state, option: 'password', display: 'Change Password'})}>\r\n                <ListItemText className={classes.linkText} primary=\"Change Password\" />\r\n            </ListItem>\r\n            {/* <ListItem button onClick={() => setState({ ...state, option: 'address', display: 'Manage Addresses'})}>\r\n                <ListItemText className={classes.linkText} primary=\"Manage Addresses\" />\r\n            </ListItem> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProfileList","import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport { userDetailsURL } from \"../../constants\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Edit from \"./Edit\";\r\nimport Account from \"./Account\";\r\nimport Orders from \"./Orders\";\r\nimport Address from \"./Address\";\r\nimport Password from \"./Password\";\r\nimport ProfileList from \"./ProfileList\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  div: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    width: \"100%\",\r\n  },\r\n  list: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UserProfile() {\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const [state, setState] = useState({\r\n    option: \"loading\",\r\n    display: \"Loading\",\r\n    error: null,\r\n    user: null,\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    // const getUser = () => {\r\n    //   authStore\r\n    //     .get(userDetailsURL)\r\n    //     .then((response) => {\r\n    //       setState({\r\n    //         option: \"account\",\r\n    //         display: \"Account Details\",\r\n    //         user: response.data,\r\n    //       })\r\n    //     })\r\n    //     .catch((error) => setState({ ...state, error: error, option: \"error\" }))\r\n    // }\r\n    setState({\r\n      option: \"account\",\r\n      display: \"Account Details\",\r\n      user: token,\r\n    });\r\n\r\n    // getUser()\r\n  }, []);\r\n\r\n  const renderComponent = () => {\r\n    switch (state.option) {\r\n      case \"account\":\r\n        return (\r\n          <React.Fragment>\r\n            <Account state={state} />\r\n          </React.Fragment>\r\n        );\r\n      case \"orders\":\r\n        return (\r\n          <React.Fragment>\r\n            <Orders />\r\n          </React.Fragment>\r\n        );\r\n      case \"edit\":\r\n        return (\r\n          <React.Fragment>\r\n            <Edit state={state} setState={setState} />\r\n          </React.Fragment>\r\n        );\r\n      // case \"address\":\r\n      //   return (\r\n      //     <React.Fragment>\r\n      //       {/* <Address user={state.user} /> */}\r\n      //       <Typography variant=\"h5\" component=\"h5\" >We Have Your Address</Typography>\r\n      //     </React.Fragment>\r\n      //   );\r\n      case \"password\":\r\n        return (  \r\n          <React.Fragment>\r\n            <Password state={state} />\r\n          </React.Fragment>\r\n        );\r\n      case \"loading\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant=\"body1\">Loading</Typography>\r\n            <CircularProgress color=\"primary\" />\r\n          </React.Fragment>\r\n        );\r\n      case \"error\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography component=\"p\" variant=\"body1\" color=\"error\">\r\n              An error occurred while fetching user details!\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        throw new Error(\"Unknown address\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ minHeight: \"100vh\", backgroundColor: \"white\" }}>\r\n        <CssBaseline />\r\n        <Grid container>\r\n          <Grid container item sm={12} justify=\"flex-start\">\r\n            <Box component=\"div\" mb={5} textAlign=\"left\">\r\n              <Typography variant=\"h2\" component=\"h2\">\r\n                User Profile / {state.display}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item sm={12} md={4}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-label=\"account action list\"\r\n              disablePadding\r\n              className={classes.list}\r\n            >\r\n              <ProfileList state={state} setState={setState} />\r\n            </List>\r\n          </Grid>\r\n          <Grid container item sm={12} md={8} justify=\"center\">\r\n            <Box component=\"div\" className={classes.div}>\r\n              {renderComponent()}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Box, Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nimport Cart from './Cart'\r\n\r\nconst CartView = () => {\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Box component=\"div\" mb={4}>\r\n                    <Typography variant=\"h2\" component=\"h2\">\r\n                        Cart\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Cart />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CartView","import React, { useEffect, useState } from \"react\";\r\nimport { store } from \"../../apis/store\";\r\nimport { specialURL } from \"../../constants\";\r\nimport ProductCard from \"./ProductCard\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    marginTop: theme.spacing(2),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: theme.spacing(2),\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  card: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst SpecificList = ({ label }) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    loading: true,\r\n    products: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getProducts = () => {\r\n      store\r\n        .get(specialURL, {\r\n          params: {\r\n            label: label,\r\n          },\r\n          withCredentials: true,\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setState({\r\n            loading: false,\r\n            products: response.data,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            loading: false,\r\n          });\r\n        });\r\n    };\r\n    getProducts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const generateCards = () => {\r\n    return state.products.map((product) => {\r\n      return (\r\n        <Grid\r\n          key={product._id}\r\n          item\r\n          align=\"center\"\r\n          xs={12}\r\n          sm={6}\r\n          md={4}\r\n          lg={3}\r\n          className={classes.card}\r\n        >\r\n          <ProductCard product={product} />\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {state.products && state.products.length > 0 ? (\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          spacing={2}\r\n          className={classes.list}\r\n        >\r\n          {state.loading ? <CircularProgress /> : generateCards()}\r\n        </Grid>\r\n      ) : state.loading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Typography variant=\"h6\" component=\"p\">\r\n          No products available\r\n        </Typography>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SpecificList;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\"\r\nimport { store } from \"../apis/store\";\r\nimport { headersURL } from \"../constants\";\r\n\r\nimport Slider from \"infinite-react-carousel\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SpecificList from \"../components/Product/SpecificList\";\r\nimport ScrollToTopOnMount from \"../components/ScrollToTopOnMount\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5),\r\n    textAlign: \"center\",\r\n    minHeight: \"500px\",\r\n  },\r\n  image: {\r\n    maxWidth: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    top: \"80%\",\r\n    left: \"47%\",\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Item = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      {/* <Link to={props.item.link}> */}\r\n      <img\r\n        width=\"1600 px\"\r\n        height=\"400 px\"\r\n        alt=\"Product Header\"\r\n        src={props.item.imageURL}\r\n        className={classes.image}\r\n      />\r\n      {/* </Link> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const [headers, setHeaders] = useState({\r\n    loading: false,\r\n    error: false,\r\n    payload: [],\r\n  });\r\n  useEffect(() => {\r\n    const getHeaders = () => {\r\n      setHeaders({\r\n        ...headers,\r\n        loading: true,\r\n      });\r\n      store\r\n        .get(headersURL, {\r\n          withCredentials: true,\r\n        })\r\n        .then((response) => {\r\n          setHeaders({\r\n            ...headers,\r\n            loading: false,\r\n            payload: response.data,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setHeaders({\r\n            ...headers,\r\n            loading: false,\r\n            error: true,\r\n          });\r\n        });\r\n    };\r\n    getHeaders();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      <Container maxWidth=\"lg\" style={{ backgroundColor: \"white\" }}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            {headers.loading ? (\r\n              <CircularProgress />\r\n            ) : headers.payload && headers.payload.length > 0 ? (\r\n              <Slider autoplay={true} autoplaySpeed={8500} arrows={false} dots>\r\n                {headers.payload.map((item, i) => (\r\n                  <Item key={i} item={item} />\r\n                ))}\r\n              </Slider>\r\n            ) : (\r\n              \"No images Available\"\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.title}>\r\n            <Typography variant=\"h2\" component=\"h2\">\r\n              Featured Products\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <SpecificList label=\"Featured\" />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.title}>\r\n            <Typography variant=\"h2\" component=\"h2\">\r\n              New Products\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <SpecificList label=\"New\" />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport { store } from \"../apis/store\"\r\nimport { contentURL } from \"../constants\"\r\nimport ScrollToTopOnMount from \"../components/ScrollToTopOnMount\"\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainDiv: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n}))\r\n\r\nconst Terms = (props) => {\r\n  const classes = useStyles()\r\n  const content = props.match.params.content\r\n\r\n  const [terms, setTerms] = useState({\r\n    loading: true,\r\n    data: null,\r\n  })\r\n\r\n  useEffect(() => {\r\n    store\r\n      .get(contentURL(content))\r\n      .then((response) => {\r\n        setTerms({\r\n          loading: false,\r\n          data: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setTerms({\r\n          loading: false,\r\n        })\r\n      })\r\n  }, [])\r\n\r\n  const renderTerms = () => {\r\n    if (terms.loading === true) {\r\n      return <CircularProgress />\r\n    } else {\r\n      return (\r\n        <Container style={{ backgroundColor: \"white\" }}>\r\n          <div className={classes.mainDiv}>\r\n            <ReactMarkdown children={terms.data ? terms.data.content : \"\"} />\r\n          </div>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      {renderTerms()}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Terms\r\n","import React, { useState } from \"react\"\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\n\r\nimport { messageCreateURL } from \"../../constants\"\r\nimport { store } from \"../../apis/store\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"green\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"green\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"red\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"yellow\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"green\",\r\n      },\r\n    },\r\n  },\r\n  input: {\r\n    color: \"white\",\r\n  },\r\n}))\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"white\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n    },\r\n  },\r\n})(TextField)\r\n\r\nconst EmailForm = () => {\r\n  const classes = useStyles()\r\n  const [data, setData] = useState({\r\n    sending: false,\r\n    sent: false,\r\n    error: null,\r\n    formData: {\r\n      email: null,\r\n      content: null,\r\n    },\r\n  })\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    setData({\r\n      ...data,\r\n      sending: true,\r\n    })\r\n    store\r\n      .post(messageCreateURL, data.formData)\r\n      .then((response) => {\r\n        setData({\r\n          ...data,\r\n          sending: false,\r\n          sent: true,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setData({\r\n          ...data,\r\n          sending: false,\r\n          error: error,\r\n        })\r\n      })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const { formData } = data\r\n    const updatedFormData = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    }\r\n    setData({\r\n      ...data,\r\n      formData: updatedFormData,\r\n    })\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return\r\n    }\r\n\r\n    setData({\r\n      ...data,\r\n      sent: false,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={data.sent}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Email sent!\"\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Message Sent!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <CssTextField\r\n              required\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ className: classes.input }}\r\n              InputLabelProps={{ className: classes.input }}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <CssTextField\r\n              required\r\n              id=\"content\"\r\n              name=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              InputProps={{ className: classes.input }}\r\n              InputLabelProps={{ className: classes.input }}\r\n              fullWidth\r\n              multiline\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n              {data.sending ? <CircularProgress /> : \"Send\"}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default EmailForm\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport MessageForm from \"./MessageForm\"\r\nimport Copyright from \"../Copyright\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\r\nimport PhoneIcon from \"@material-ui/icons/Phone\"\r\nimport RoomIcon from \"@material-ui/icons/Room\"\r\nimport EmailIcon from \"@material-ui/icons/Email\"\r\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\"\r\nimport Container from \"@material-ui/core/Container\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: \"white\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  item: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.footer}>\r\n        <Container maxWidth=\"lg\">\r\n          <div style={{ paddingTop: 20 }}>\r\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\r\n              <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                <List dense>\r\n                  <ListItem>\r\n                    <Typography variant=\"h5\" component=\"h4\">\r\n                      Links\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/team\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Our Team\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/about\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"About Al-amal\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/terms\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Terms of Service\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/cookies\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Cookie Policy\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/privacy\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Privacy Policy\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/license\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"License Details\" />\r\n                  </ListItem>\r\n                </List>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={2} lg={3}>\r\n                <List dense>\r\n                  <ListItem>\r\n                    <Typography variant=\"h5\" component=\"h4\">\r\n                      Products\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/products/Laptop\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Laptops\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/products/Accessory\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Accessories\" />\r\n                  </ListItem>\r\n                </List>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <List dense>\r\n                  <ListItem>\r\n                    <Typography variant=\"h5\" component=\"h4\">\r\n                      Contact Us\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemIcon>\r\n                      <PhoneIcon style={{ color: \"white\" }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"+971 65 340509\" />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemIcon>\r\n                      <WhatsAppIcon style={{ color: \"white\" }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"+971 55 443 5313\" />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemIcon>\r\n                      <RoomIcon style={{ color: \"white\" }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"PO Box 60501\" />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemIcon>\r\n                      <EmailIcon style={{ color: \"white\" }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"info@alamalcomputers.com\" />\r\n                  </ListItem>\r\n                </List>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                <List dense>\r\n                  <ListItem>\r\n                    <Typography variant=\"h5\" component=\"h4\">\r\n                      Email Us\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <MessageForm />\r\n                  </ListItem>\r\n                </List>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Copyright />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nexport default function LogoutAlertDialog({handleLogout}) {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const handleClickOpen = (e) => {\r\n        e.stopPropagation()\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleLogoutClose = (e) => {\r\n        handleLogout()\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleClose = (e) => {\r\n        e.stopPropagation()\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ListItem button onClick={handleClickOpen}>\r\n                <ListItemText primary=\"LOGOUT\" />\r\n            </ListItem>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Logout\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to logout?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleLogoutClose} color=\"primary\" autoFocus>\r\n                        Logout\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/auth\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport LogoutAlertDialog from \"../LogoutAlertDialog\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { clearCart } from \"../../store/actions/cart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navDisplayFlex: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    color: \"white\",\r\n  },\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    navDisplayFlex: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavList = ({ cart }) => {\r\n  const dispatch = useDispatch();\r\n  const status = useSelector((state) => state.auth);\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(clearCart());\r\n    dispatch(logout(window.location.pathname));\r\n  };\r\n\r\n  const handleLogoutClick = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const signedOut = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Hidden mdUp>\r\n          <Link to=\"/\" className={classes.linkText}>\r\n            <ListItem button>\r\n              <ListItemText primary=\"Home\" />\r\n            </ListItem>\r\n          </Link>\r\n        </Hidden>\r\n        <Link to=\"/products/Laptop\" className={classes.linkText}>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Laptops\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/products/Accessory\" className={classes.linkText}>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Accessories\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/signin\" className={classes.linkText}>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Sign In\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Hidden mdUp>\r\n          <Link to=\"/signup\" className={classes.linkText}>\r\n            <ListItem button>\r\n              <ListItemText primary=\"Sign Up\" />\r\n            </ListItem>\r\n          </Link>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Link to=\"/cart\" className={classes.linkText}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <Badge\r\n                  badgeContent={cart ? cart.length : null}\r\n                  color=\"secondary\"\r\n                >\r\n                  <ShoppingCartOutlinedIcon style={{ color: \"white\" }} />\r\n                </Badge>\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Cart\" />\r\n            </ListItem>\r\n          </Link>\r\n        </Hidden>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const signedIn = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Hidden mdUp>\r\n          <ListItem button component={Link} to=\"/\" className={classes.linkText}>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n        </Hidden>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to=\"/products/Laptop\"\r\n          className={classes.linkText}\r\n        >\r\n          <ListItemText primary=\"Laptops\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to=\"/products/Accessory\"\r\n          className={classes.linkText}\r\n        >\r\n          <ListItemText primary=\"Accessories\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to=\"/account\"\r\n          className={classes.linkText}\r\n        >\r\n          <ListItemText primary={status?.token?.firstName.substr(0, 8)} />\r\n        </ListItem>\r\n        {token?.seller && (\r\n          <ListItem\r\n            button\r\n            component={Link}\r\n            to=\"/seller\"\r\n            className={classes.linkText}\r\n          >\r\n            <ListItemText primary=\"Seller\" />\r\n          </ListItem>\r\n        )}\r\n        <LogoutAlertDialog\r\n          handleLogout={handleLogout}\r\n          onClick={handleLogoutClick}\r\n        />\r\n        <Hidden mdDown>\r\n          <ListItem\r\n            button\r\n            component={Link}\r\n            to=\"/cart\"\r\n            className={classes.linkText}\r\n          >\r\n            <ListItemIcon>\r\n              <Badge badgeContent={cart ? cart.length : null} color=\"secondary\">\r\n                <ShoppingCartOutlinedIcon style={{ color: \"white\" }} />\r\n              </Badge>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Cart\" />\r\n          </ListItem>\r\n        </Hidden>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"main navigation\"\r\n        className={classes.navDisplayFlex}\r\n      >\r\n        {status?.token ? signedIn() : signedOut()}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { searchURL } from \"../../constants\";\r\nimport { store } from \"../../apis/store\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  navDisplayFlex: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n    zIndex: 100,\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n    results: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    result: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    resultContent: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Search = ({ setState, state, anchor }) => {\r\n  const classes = useStyles();\r\n\r\n  const [result, setResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [term, setTerm] = useState(\"\");\r\n  const [resultStyle, setResultStyle] = useState({\r\n    position: \"absolute\",\r\n    display: \"none\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (term) {\r\n        setLoading(true);\r\n        store\r\n          .get(searchURL, {\r\n            params: {\r\n              search: term,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            const results = response.data;\r\n            if (results.length > 0) {\r\n              setResult(results);\r\n            } else {\r\n              setResult(null);\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            setResult(null);\r\n          });\r\n      } else {\r\n        setLoading(false);\r\n        setResult([]);\r\n      }\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [term]);\r\n\r\n  const renderListItem = (item) => {\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem\r\n          component={Link}\r\n          to={`/product/${item._id}/`}\r\n          className={classes.item}\r\n          button\r\n        >\r\n          <div className={classes.result}>\r\n            <img src={item.imageURL1} height=\"32px\" alt=\"search result\" />\r\n            <div style={{ display: \"inline-block\", paddingLeft: \"10px\" }}>\r\n              <div className={classes.resultContent}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"p\"\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  {item.title}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  display=\"block\"\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  Price:{\" \"}\r\n                  {item?.discount_price ? item.discount_price : item.price} $\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ListItem>\r\n        <div>\r\n          <hr\r\n            style={{\r\n              borderTop: \"1px solid black\",\r\n              padding: 0,\r\n              marginTop: \"2px\",\r\n            }}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const renderResults = () => {\r\n    if (result !== null) {\r\n      if (result.length > 1) {\r\n        return (\r\n          <List className={classes.root}>\r\n            {result?.map((item) => {\r\n              return (\r\n                <React.Fragment key={item._id}>\r\n                  {renderListItem(item)}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </List>\r\n        );\r\n      } else if (result.length !== 0) {\r\n        return (\r\n          <List className={classes.root}>{renderListItem(result[0])}</List>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <List className={classes.root}>\r\n          <ListItem>\r\n            {loading ? (\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            ) : (\r\n              <ListItemText\r\n                primary={\r\n                  <Typography\r\n                    component=\"span\"\r\n                    varaint=\"body2\"\r\n                    className={classes.inline}\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    No products found\r\n                  </Typography>\r\n                }\r\n              />\r\n            )}\r\n          </ListItem>\r\n        </List>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setTimeout(() => {\r\n      setResultStyle({\r\n        ...resultStyle,\r\n        display: \"none\",\r\n      });\r\n      if (setState) {\r\n        setState({ ...state, [anchor]: false });\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search…\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={(e) => setTerm(e.target.value)}\r\n        onFocus={() =>\r\n          setResultStyle({\r\n            ...resultStyle,\r\n            display: \"block\",\r\n          })\r\n        }\r\n        onBlur={handleBlur}\r\n        onClick={(e) => e.stopPropagation()}\r\n      />\r\n      <div\r\n        className={classes.results}\r\n        style={{\r\n          position: resultStyle.position,\r\n          display: resultStyle.display,\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {renderResults()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\"\r\n\r\nimport NavList from \"./NavList\"\r\nimport Search from \"./Search\"\r\n\r\nimport Menu from \"@material-ui/icons/Menu\"\r\nimport Drawer from \"@material-ui/core/Drawer\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  paper: {\r\n    background: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  innerDiv: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    textTransform: \"uppercase\",\r\n    padding: theme.spacing(1),\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  searchDiv: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst SideDrawer = (props) => {\r\n  const classes = useStyles()\r\n  const [state, setState] = useState({ left: false })\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    setState({ ...state, [anchor]: open })\r\n  }\r\n\r\n  const sideDrawerList = (anchor) => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n    >\r\n      <Link\r\n        to=\"/\"\r\n        style={{\r\n          textDecoration: \"none\",\r\n        }}\r\n      >\r\n        <div className={classes.innerDiv}>\r\n          <Typography variant=\"h6\" component=\"p\" color=\"secondary\">\r\n            Alamal Computers\r\n          </Typography>\r\n        </div>\r\n      </Link>\r\n      <div className={classes.searchDiv}>\r\n        <Search setState={setState} state={state} anchor={anchor} />\r\n      </div>\r\n      <NavList />\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton\r\n        edge=\"start\"\r\n        aria-label=\"menu\"\r\n        onClick={toggleDrawer(\"left\", true)}\r\n      >\r\n        <Menu fontSize=\"large\" style={{ color: \"white\" }} />\r\n      </IconButton>\r\n      <Drawer\r\n        classes={{ paper: classes.paper }}\r\n        className={classes.drawer}\r\n        anchor=\"left\"\r\n        open={state.left}\r\n        onClose={toggleDrawer(\"left\", false)}\r\n      >\r\n        {sideDrawerList(\"left\")}\r\n      </Drawer>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SideDrawer\r\n","export default __webpack_public_path__ + \"static/media/logo.4f3e972f.png\";","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { getCart } from \"../../cartLocal\"\r\n\r\nimport SideDrawer from \"./SideDrawer\"\r\nimport NavList from \"./NavList\"\r\nimport Search from \"./Search\"\r\nimport weblogo from \"../../logo.png\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Hidden from \"@material-ui/core/Hidden\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Badge from \"@material-ui/core/Badge\"\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navDisplayFlex: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(1),\r\n    paddingLeft: \"20px\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  logo: {\r\n    maxHeight: 60,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      maxHeight: 50,\r\n    },\r\n  },\r\n  logoButton: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: 0,\r\n      margin: 0,\r\n    },\r\n  },\r\n  div: {\r\n    color: \"#E5E5E5\",\r\n    textTransform: \"none\",\r\n  },\r\n  first: {\r\n    fontSize: \"0.90rem\",\r\n  },\r\n  second: {\r\n    fontSize: \"0.50rem\",\r\n  },\r\n}))\r\n\r\nconst Nav = () => {\r\n  const classes = useStyles()\r\n  const token = localStorage.getItem(\"token\")\r\n  let cart = useSelector((state) =>\r\n    state.cart && state.cart.shoppingCart ? state.cart.shoppingCart.items : null\r\n  )\r\n  // Only for updating upon fetch cart\r\n  let updateCart = useSelector((state) => state.cart)\r\n  if (!token) {\r\n    cart = getCart()\r\n  }\r\n\r\n  return (\r\n    <div className=\"NavBar\" style={{ marginBottom: \"100px\" }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar className={classes.navDisplayFlex}>\r\n          <Link to=\"/\" className={classes.linkText}>\r\n            <Box className={classes.box} component=\"div\">\r\n              <img\r\n                className={classes.logo}\r\n                alt=\"Site logo\"\r\n                src={weblogo}\r\n              />\r\n              <div className={classes.div}>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color=\"secondary\"\r\n                  className={classes.first}\r\n                >\r\n                  ALAMAL COMPUTERS\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" className={classes.second}>\r\n                  Computers and Mobile Phones Trading\r\n                </Typography>\r\n              </div>\r\n            </Box>\r\n          </Link>\r\n\r\n          <Hidden lgUp>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Link to=\"/cart\">\r\n                <IconButton>\r\n                  <Badge\r\n                    badgeContent={cart ? cart.length : null}\r\n                    color=\"secondary\"\r\n                  >\r\n                    <ShoppingCartOutlinedIcon style={{ color: \"white\" }} />\r\n                  </Badge>\r\n                </IconButton>\r\n              </Link>\r\n              <SideDrawer />\r\n            </div>\r\n          </Hidden>\r\n          <Hidden mdDown>\r\n            <div className={classes.navDisplayFlex}>\r\n              <Search />\r\n              <NavList cart={cart} />\r\n            </div>\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Cookies from \"js-cookie\"\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nconst CookieConsent = () => {\r\n  const [state, setState] = useState({\r\n    visible: false,\r\n    acceptOnScrollPercentage: 25,\r\n  })\r\n\r\n  const handleAccept = () => {\r\n    Cookies.set(\"AlamalConsentCookies\", \"Given\", { expires: 365 })\r\n    setState({\r\n      ...state,\r\n      visible: false,\r\n    })\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    const rootNode = document.documentElement || document.body\r\n\r\n    if (rootNode) {\r\n      const percentage =\r\n        (rootNode.scrollTop / (rootNode.scrollHeight - rootNode.clientHeight)) *\r\n        100\r\n\r\n      if (percentage > state.acceptOnScrollPercentage) {\r\n        handleAccept()\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll)\r\n\r\n    if (Cookies.get(\"AlamalConsentCookies\") === undefined) {\r\n      setState({\r\n        ...state,\r\n        visible: true,\r\n      })\r\n    }\r\n    return () => window.removeEventListener(\"scroll\", handleScroll)\r\n  }, [])\r\n\r\n  const action = (\r\n    <Button color=\"secondary\" size=\"small\" key=\"accept\" onClick={handleAccept}>\r\n      Accept\r\n    </Button>\r\n  )\r\n\r\n  const message = (\r\n    <React.Fragment>\r\n      <Typography varaint=\"subtitle1\" component=\"p\">\r\n        This site uses cookies to improve the user experience.\r\n      </Typography>\r\n      <Link to=\"/page/cookies\" target=\"_blank\" style={{ color: \"white\" }}>\r\n        <Typography varaint=\"subtitle1\" component=\"p\">\r\n          Read cookie policy\r\n        </Typography>\r\n      </Link>\r\n    </React.Fragment>\r\n  )\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n      open={state.visible}\r\n      message={message}\r\n      action={action}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CookieConsent\r\n","import React from \"react\";\r\n// { useEffect, useState }\r\n\r\nimport { useSelector } from \"react-redux\";\r\n// useDispatch\r\nimport history from \"../history\";\r\n\r\n// import { store, authStore } from \"../apis/store\";\r\n// import { fetchCart } from \"../store/actions/cart\";\r\n// import { getCart, emptyCart } from \"../cartLocal\";\r\n// import { addToCartURL, maintenanceURL } from \"../constants\";\r\n\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Nav from \"../components/Nav/Nav\";\r\nimport CookieConsent from \"../components/CookieConsent\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import Alert from \"@material-ui/lab/Alert\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\n// import CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    minHeight: \"100vh\",\r\n    position: \"relative\",\r\n  },\r\n  contentWrap: {\r\n    height: \"100%\",\r\n    paddingBottom: \"25rem\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      paddingBottom: \"60rem\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingBottom: \"40rem\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingBottom: \"25rem\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingBottom: \"25rem\",\r\n    },\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n      paddingBottom: \"22.5rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Layout = (props) => {\r\n  const classes = useStyles();\r\n  // const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.auth.token);\r\n  // console.log(token);\r\n  // const token = localStorage.getItem(\"token\")\r\n  // To avoid access to these components if somehow the token gets deleted\r\n  if (window.location === \"/account\" || window.location === \"/checkout\") {\r\n    if (!token) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  // const [maintenance, setMaintenance] = useState({\r\n  //   under_maintenance: false,\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   const ac = new AbortController();\r\n  //   const getMaintenance = () => {\r\n  //     store\r\n  //       .get(maintenanceURL)\r\n  //       .then((response) => {\r\n  //         setMaintenance(response.data.results[0]);\r\n  //       })\r\n  //       .catch((error) => error);\r\n  //   };\r\n  //   getMaintenance();\r\n  //   return () => {\r\n  //     ac.abort();\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const ac = new AbortController();\r\n  //   let localCart = getCart();\r\n  //   const updateOnlineCart = () => {\r\n  //     const addToCart = (slug, config) => {\r\n  //       authStore\r\n  //         .post(addToCartURL, { slug, config: config ? config.id : null })\r\n  //         .then((res) => res)\r\n  //         .catch((err) => err);\r\n  //     };\r\n\r\n  //     // Update online cart here:\r\n  //     localCart.forEach((item) => {\r\n  //       addToCart(item.slug, item.config);\r\n  //     });\r\n  //     emptyCart();\r\n  //     localCart = getCart();\r\n  //     dispatch(fetchCart());\r\n  //   };\r\n\r\n  //   if (token) {\r\n  //     dispatch(fetchCart());\r\n  //     if (localCart && localCart.length > 0) {\r\n  //       updateOnlineCart();\r\n  //     }\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     ac.abort();\r\n  //   };\r\n  // }, [token]);\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      {/* {maintenance.under_maintenance ? (\r\n        <Collapse in={maintenance.under_maintenance}>\r\n          <Alert\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setMaintenance(false);\r\n                }}\r\n              >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            The site will be under maintenance from{\" \"}\r\n            {new Date(maintenance.start_time).toLocaleDateString(\"en-US\", {\r\n              day: \"numeric\",\r\n              month: \"short\",\r\n              year: \"numeric\",\r\n              hour: \"numeric\",\r\n              minute: \"numeric\",\r\n            })}\r\n            {new Date(maintenance.end_time).toLocaleDateString(\"en-US\", {\r\n              day: \"numeric\",\r\n              month: \"short\",\r\n              year: \"numeric\",\r\n              hour: \"numeric\",\r\n              minute: \"numeric\",\r\n            })}\r\n          </Alert>\r\n        </Collapse> */}\r\n      {/* ) : (\r\n        \"\"\r\n      )} */}\r\n      <div className={classes.pageContainer}>\r\n        <div className={classes.contentWrap}>\r\n          {props.children}\r\n          <CookieConsent />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst Error = ({message}) => {\r\n    return (\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n                <ErrorOutlineIcon color=\"error\" />\r\n                <Typography color=\"error\">Oops! An error has occurred :-/</Typography>\r\n                {message ? (<Typography color=\"error\">{message}</Typography>) : ''}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/\">\r\n                    Go to homepage\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Error","import React from 'react'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    linkText: {\r\n        textDecoration: 'none',\r\n        textTransform: 'uppercase',\r\n        color: 'black'\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        root: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        linkText: {\r\n            textDecoration: 'none',\r\n            textTransform: 'uppercase',\r\n            color: 'black'\r\n        }\r\n    }\r\n}))\r\n\r\nconst Lists = ({state, setState}) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem button onClick={() => setState({ ...state, option: 'buyerOrders', display: 'Buyer Orders'})}>\r\n                <ListItemText className={classes.linkText} primary=\"Buyer Orders\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => setState({ ...state, option: 'sellLaptop', display: 'Sell Laptop'})}>\r\n                <ListItemText className={classes.linkText} primary=\"Sell Laptop\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => setState({ ...state, option: 'sellAccessories', display: 'Sell Accessories'})}>\r\n                <ListItemText className={classes.linkText} primary=\"Sell Accessories\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => setState({ ...state, option: 'sellerProduct', display: 'Seller Product'})}>\r\n                <ListItemText className={classes.linkText} primary=\"Seller Product\" />\r\n            </ListItem>\r\n           \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Lists","import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  noSpace: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n}));\r\nconst BuyerOrders = () => {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState({\r\n    error: null,\r\n    loading: true,\r\n    payload: null,\r\n  });\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    authStore\r\n      .get(\"/api/v1/getclientorders\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setOrders({ ...orders, payload: response.data, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        setOrders({ ...orders, error: error.response, loading: false });\r\n        // console.log(error.response.status);\r\n        // console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return <CircularProgress />;\r\n    } else if (orders.error && orders.error.status === 500) {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          There was an error loading the data: ( &nbsp; {orders.error.data}{\" \"}\r\n        </Typography>\r\n      );\r\n    } else if (orders.payload !== null && orders.payload.length > 0) {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow className={classes.noSpace}>\r\n                <TableCell>Client Name</TableCell>\r\n                <TableCell align=\"left\"> Phone Number </TableCell>\r\n                <TableCell align=\"left\"> Delivery Address </TableCell>\r\n                <TableCell align=\"left\"> Google Pin Location </TableCell>\r\n                <TableCell align=\"left\"> Products </TableCell>\r\n                <TableCell align=\"left\"> Quantity </TableCell>\r\n                <TableCell align=\"left\"> Total </TableCell>\r\n                <TableCell align=\"left\">Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.payload.map((item, i) => (\r\n                <TableRow\r\n                  key={orders.payload[i]._id}\r\n                  id={orders.payload[i]._id}\r\n                  className={classes.noSpace}\r\n                >\r\n                  <TableCell align=\"left\">\r\n                    {item.firstName} {item.lastName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{item.phoneNumber}</TableCell>\r\n                  <TableCell align=\"left\">{item.deliveryAddress}</TableCell>\r\n                  <TableCell align=\"left\">{item.googleLocation}</TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart\r\n                      .filter((element) => element.authorId === token.id)\r\n                      .map((params) => `${params.title}, `)}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart\r\n                      .filter((element) => element.authorId === token.id)\r\n                      .map((params) => `${params.quantity}, `)}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart\r\n                      .filter((element) => element.authorId === token.id)\r\n                      .map((params) => `${params.price} $ `)}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <strong>{item.status}</strong>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    } else {\r\n      return <Typography variant=\"body1\">You haven't got any order</Typography>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" component=\"h5\">\r\n        Buyer Orders\r\n      </Typography>\r\n      <br />\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          {renderOrders()}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BuyerOrders;\r\n","import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Snackbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { showError } from \"../../../utils\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n// const validationSchema = yup.object({\r\n//   email: yup\r\n//     .string(\"Enter your email\")\r\n//     .email(\"Enter a valid email\")\r\n//     .required(\"Email is required\"),\r\n//   password: yup\r\n//     .string(\"Enter your password\")\r\n//     .min(8, \"Password should be of minimum 8 characters length\")\r\n//     .required(\"Password is required\"),\r\n// });\r\n\r\nfunction LaptopForm() {\r\n  const state = useSelector((state) => state.auth.token);\r\n  const dev = \"http://localhost:5000\";\r\n  const baseURL =\r\n    window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n  const [myAlert, setMyAlert] = useState({\r\n    saving: false,\r\n    success: null,\r\n    error: null,\r\n    message: null,\r\n  });\r\n  const [productImages, setProductImages] = useState([]);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      brand: \"\",\r\n      color: \"\",\r\n      productType: \"Laptop\",\r\n      processorName: \"\",\r\n      processorDetail: \"\",\r\n      price: \"\",\r\n      display: \"\",\r\n      displayDetails: \"\",\r\n      ram: \"\",\r\n      storage: \"\",\r\n      label: \"Featured\",\r\n    },\r\n    // initialValues: {\r\n    //   title: \"Macbook Air 13\",\r\n    //   description: `The Apple MacBook Air \"Core i5\" 1.6 13-Inch (Early 2015/Broadwell) features a 14-nm \"Broadwell ULT\" 1.6 GHz Intel \"Core i5\" processor (5250U) with two independent processor \"cores\" on a single chip, a 3 MB shared level 3 cache, 4 GB or 8 GB of onboard 1600 MHz LPDDR3 SDRAM (4 GB of RAM originally with the option to upgrade to 8 GB at the time of purchase only, and 8 GB standard starting April 19, 2016), 128 GB or 256 GB of 4 Lane PCIe-based flash storage, and an \"integrated\" Intel HD Graphics 60`,\r\n    //   brand: \"Apple\",\r\n    //   color: \"white\",\r\n    //   productType: \"Laptop\",\r\n    //   processorName: \"Core i5\",\r\n    //   processorDetail: `5250U`,\r\n    //   price: \"600\",\r\n    //   display: \"13.3\",\r\n    //   displayDetails: `TFT LED backlit active-matrix \"glossy\" display (1440x900 native resolution)`,\r\n    //   ram: \"8GB DDR3 RAM \",\r\n    //   storage: \" 1000GB HDD STORAGE\",\r\n    //   label: \"Featured\",\r\n    // },\r\n    // validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      // console.log(productImages);\r\n      if (productImages.length > 4 || productImages.length < 4) {\r\n        // return console.log(\"four pictures are required\");\r\n        let err = {\r\n          response: {\r\n            data: \"4 pictures required\",\r\n          },\r\n        };\r\n        return setMyAlert({\r\n          ...myAlert,\r\n          saving: false,\r\n          success: false,\r\n          error: true,\r\n          message: err,\r\n        });\r\n      }\r\n      // alert(JSON.stringify(values, null, 2));\r\n      // console.log({values});\r\n      // console.log(productImages);\r\n      // setProductImages([]);\r\n      // productImages.map((element) => {\r\n      //   console.log(element);\r\n      // })\r\n      var formData = new FormData();\r\n      for (let i = 0; i < productImages.length; i++) {\r\n        formData.append(\"myfile\", productImages[i]);\r\n      }\r\n      formData.append(\"authorId\", state.id);\r\n      formData.append(\"authorName\", state.firstName + \" \" + state.lastName);\r\n      formData.append(\"title\", values.title);\r\n      formData.append(\"description\", values.description);\r\n      formData.append(\"brand\", values.brand);\r\n      formData.append(\"color\", values.color);\r\n      formData.append(\"productType\", \"Laptop\");\r\n      formData.append(\"processorName\", values.processorName);\r\n      formData.append(\"processorDetail\", values.processorDetail);\r\n      formData.append(\"price\", values.price);\r\n      formData.append(\"display\", values.display);\r\n      formData.append(\"displayDetails\", values.displayDetails);\r\n      formData.append(\"ram\", values.ram);\r\n      formData.append(\"storage\", values.storage);\r\n      formData.append(\"label\", values.label);\r\n\r\n      // console.log(formData);\r\n      setMyAlert({\r\n        ...myAlert,\r\n        saving: true,\r\n      });\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: `${baseURL}/api/v1/post/product`,\r\n        // url: `http://localhost:5000/api/v1/post/product`,\r\n        data: formData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        withCredentials: true,\r\n      })\r\n        .then((result) => {\r\n          console.log(result.data);\r\n          setMyAlert({\r\n            saving: false,\r\n            success: true,\r\n          });\r\n          resetForm({ values: \"\" });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n          setMyAlert({\r\n            ...myAlert,\r\n            saving: false,\r\n            success: false,\r\n            error: true,\r\n            message: err,\r\n          });\r\n        });\r\n    },\r\n  });\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    if (myAlert.success === true) {\r\n      setMyAlert({\r\n        ...myAlert,\r\n        success: false,\r\n      });\r\n    } else {\r\n      setMyAlert({\r\n        ...myAlert,\r\n        error: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={myAlert.success}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n          Product Created Successfully\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={myAlert.error}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {showError(myAlert.message)}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container>\r\n        <Typography variant=\"h5\" component=\"h5\">\r\n          Sell your Laptops\r\n        </Typography>\r\n        <br />\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"title\"\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                value={formik.values.title}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.title && Boolean(formik.errors.title)}\r\n                helperText={formik.touched.title && formik.errors.title}\r\n                placeholder=\"Macbook Air 13\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"brand\"\r\n                name=\"brand\"\r\n                label=\"Brand Name\"\r\n                variant=\"outlined\"\r\n                value={formik.values.brand}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.brand && Boolean(formik.errors.brand)}\r\n                helperText={formik.touched.brand && formik.errors.brand}\r\n                required\r\n                placeholder=\"Apple\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"description\"\r\n                name=\"description\"\r\n                label=\"Title Descrpition\"\r\n                variant=\"outlined\"\r\n                value={formik.values.description}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.description &&\r\n                  Boolean(formik.errors.description)\r\n                }\r\n                helperText={\r\n                  formik.touched.description && formik.errors.description\r\n                }\r\n                placeholder=\"The Apple MacBook Air Core i5 1.6 13-Inch (Early 2015/Broadwell) features a 14-nm Broadwell ULT 1.6 GHz Intel Core i5 processor (5250U) with two independent processor cores on a single chip, a 3 MB shared level 3 cache, 4 GB or 8 GB of onboard 1600 MHz LPDDR3 SDRAM (4 GB of RAM originally with the option to upgrade to 8 GB at the time of purchase only, and 8 GB standard starting April 19, 2016), 128 GB or 256 GB of 4 Lane PCIe-based flash storage, and an integrated Intel HD Graphics 60\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"color\"\r\n                name=\"color\"\r\n                label=\"Laptop color\"\r\n                variant=\"outlined\"\r\n                value={formik.values.color}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.color && Boolean(formik.errors.color)}\r\n                helperText={formik.touched.color && formik.errors.color}\r\n                required\r\n                placeholder=\"white\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"productType\"\r\n                name=\"productType\"\r\n                label=\"Product Type\"\r\n                variant=\"outlined\"\r\n                value={formik.values.productType}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.productType &&\r\n                  Boolean(formik.errors.productType)\r\n                }\r\n                helperText={\r\n                  formik.touched.productType && formik.errors.productType\r\n                }\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"processorName\"\r\n                name=\"processorName\"\r\n                label=\"Processor Name\"\r\n                variant=\"outlined\"\r\n                value={formik.values.processorName}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.processorName &&\r\n                  Boolean(formik.errors.processorName)\r\n                }\r\n                helperText={\r\n                  formik.touched.processorName && formik.errors.processorName\r\n                }\r\n                required\r\n                placeholder=\"Core i5\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"processorDetail\"\r\n                name=\"processorDetail\"\r\n                label=\"Processor Details\"\r\n                variant=\"outlined\"\r\n                value={formik.values.processorDetail}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.processorDetail &&\r\n                  Boolean(formik.errors.processorDetail)\r\n                }\r\n                helperText={\r\n                  formik.touched.processorDetail &&\r\n                  formik.errors.processorDetail\r\n                }\r\n                required\r\n                placeholder=\"5250U\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={formik.values.price}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.price && Boolean(formik.errors.price)}\r\n                helperText={formik.touched.price && formik.errors.price}\r\n                required\r\n                placeholder=\"600\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"display\"\r\n                name=\"display\"\r\n                label=\"Display\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={formik.values.display}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.display && Boolean(formik.errors.display)}\r\n                helperText={formik.touched.display && formik.errors.display}\r\n                required\r\n                placeholder=\"13.3\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"displayDetails\"\r\n                name=\"displayDetails\"\r\n                label=\"Display Details\"\r\n                variant=\"outlined\"\r\n                value={formik.values.displayDetails}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.displayDetails &&\r\n                  Boolean(formik.errors.displayDetails)\r\n                }\r\n                helperText={\r\n                  formik.touched.displayDetails && formik.errors.displayDetails\r\n                }\r\n                required\r\n                placeholder=\"TFT LED backlit active-matrix glossy display (1440x900 native resolution)\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"ram\"\r\n                name=\"ram\"\r\n                label=\"RAM\"\r\n                variant=\"outlined\"\r\n                value={formik.values.ram}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.ram && Boolean(formik.errors.ram)}\r\n                helperText={formik.touched.ram && formik.errors.ram}\r\n                required\r\n                placeholder=\"8GB DDR3 RAM\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"storage\"\r\n                name=\"storage\"\r\n                label=\"Storage\"\r\n                variant=\"outlined\"\r\n                value={formik.values.storage}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.storage && Boolean(formik.errors.storage)}\r\n                helperText={formik.touched.storage && formik.errors.storage}\r\n                required\r\n                placeholder=\"1000GB HDD STORAGE\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel id=\"label\">Label</InputLabel>\r\n              <Select\r\n                labelId=\"label\"\r\n                id=\"label\"\r\n                name=\"label\"\r\n                label=\"Label\"\r\n                variant=\"outlined\"\r\n                defaultValue=\"Featured\"\r\n                value={formik.values.label}\r\n                onChange={formik.handleChange}\r\n                fullWidth\r\n                required\r\n              >\r\n                <MenuItem value=\"Featured\">Featured</MenuItem>\r\n                <MenuItem value=\"New\">New</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} lg={12}>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"file\"\r\n                id=\"file\"\r\n                variant=\"outlined\"\r\n                multiple\r\n                style={{\r\n                  marginTop: \"20px\",\r\n                  marginBottom: \"14px\",\r\n                  width: \"100%\",\r\n                }}\r\n                onChange={(e) => {\r\n                  setProductImages([]);\r\n                  for (let i = 0; i < e.target.files.length; i++) {\r\n                    const newImage = e.target.files[i];\r\n                    setProductImages((prevImage) => [...prevImage, newImage]);\r\n                  }\r\n                }}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n              {myAlert.saving ? <CircularProgress color=\"secondary\" /> : \"Submit\"}\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LaptopForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  noSpace: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n}));\r\nconst SellerProduct = () => {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState({\r\n    error: null,\r\n    loading: true,\r\n    payload: null,\r\n  });\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    authStore\r\n      .get(\"/api/v1/getsellerproducts\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setOrders({ ...orders, payload: response.data, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        setOrders({ ...orders, error: error.response, loading: false });\r\n        // console.log(error.response.status);\r\n        // console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return <CircularProgress />;\r\n    } else if (orders.error && orders.error.status === 500) {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          There was an error loading the data: ( &nbsp; {orders.error.data}{\" \"}\r\n        </Typography>\r\n      );\r\n    } else if (orders.payload !== null && orders.payload.length > 0) {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow className={classes.noSpace}>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell align=\"left\"> Title </TableCell>\r\n                <TableCell align=\"left\"> Price </TableCell>\r\n                <TableCell align=\"left\"> Brand </TableCell>\r\n                <TableCell align=\"left\"> Color </TableCell>\r\n                <TableCell align=\"left\"> Details </TableCell>\r\n                {/* <TableCell align=\"left\"> Total </TableCell>\r\n                <TableCell align=\"left\">Status</TableCell> */}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.payload.map((item, i) => (\r\n                <TableRow\r\n                  key={orders.payload[i]._id}\r\n                  id={orders.payload[i]._id}\r\n                  className={classes.noSpace}\r\n                >\r\n                  <TableCell align=\"left\">{item.productType}</TableCell>\r\n                  <TableCell align=\"left\">{item.title}</TableCell>\r\n                  <TableCell align=\"left\">{item.price}</TableCell>\r\n                  <TableCell align=\"left\">{item.brand}</TableCell>\r\n                  <TableCell align=\"left\">{item.color}</TableCell>\r\n                  <TableCell align=\"left\">{item.processorName} {item.ram} {item.storage}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    } else {\r\n      return <Typography variant=\"body1\">You haven't Post Products</Typography>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" component=\"h5\">\r\n        Your Products\r\n      </Typography>\r\n      <br />\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          {renderOrders()}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SellerProduct;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { authStore } from \"../../apis/store\";\r\n// import { userDetailsURL } from \"../../constants\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// import Edit from \"./Edit\";\r\n// import Account from \"./Account\";\r\n// import Orders from \"./Orders\";\r\n// import Address from \"./Address\";\r\n// import Password from \"./Password\";\r\n// import ProfileList from \"../Profile/ProfileList\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Lists from \"./Lists\";\r\nimport BuyerOrders from \"./BuyerOrders\";\r\nimport LaptopForm from \"./LaptopForm/LaptopForm\";\r\nimport SellerProduct from \"./SellerProduct\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  div: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    width: \"100%\",\r\n  },\r\n  list: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UserProfile() {\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const [state, setState] = useState({\r\n    option: \"loading\",\r\n    display: \"Loading\",\r\n    error: null,\r\n    user: null,\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    // const getUser = () => {\r\n    //   authStore\r\n    //     .get(userDetailsURL)\r\n    //     .then((response) => {\r\n    //       setState({\r\n    //         option: \"account\",\r\n    //         display: \"Account Details\",\r\n    //         user: response.data,\r\n    //       })\r\n    //     })\r\n    //     .catch((error) => setState({ ...state, error: error, option: \"error\" }))\r\n    // }\r\n    setState({\r\n      option: \"buyerOrders\",\r\n      display: \"Buyer Orders\",\r\n      user: token,\r\n    });\r\n\r\n    // getUser()\r\n  }, []);\r\n\r\n  const renderComponent = () => {\r\n    switch (state.option) {\r\n      case \"buyerOrders\":\r\n        return (\r\n          <React.Fragment>\r\n            {/* <Account state={state} /> <h1>Buyer Orders</h1> */}\r\n            <BuyerOrders />\r\n          </React.Fragment>\r\n        );\r\n      case \"sellLaptop\":\r\n        return (\r\n          <React.Fragment>\r\n            {/* <Orders /> <h1>Sell Laptop</h1> */}\r\n            <LaptopForm />\r\n          </React.Fragment>\r\n        );\r\n      case \"sellAccessories\":\r\n        return (\r\n          <React.Fragment>\r\n            {/* <Edit state={state} setState={setState} /> */}{\" \"}\r\n            <Typography variant=\"h5\" component=\"h5\">\r\n              Sell Accessories\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n\r\n      case \"sellerProduct\":\r\n        return (\r\n          <React.Fragment>\r\n            {/* <Password state={state} /> <h1>Your Products</h1> */}\r\n            <SellerProduct />\r\n          </React.Fragment>\r\n        );\r\n      case \"loading\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant=\"body1\">Loading</Typography>\r\n            <CircularProgress color=\"primary\" />\r\n          </React.Fragment>\r\n        );\r\n      case \"error\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography component=\"p\" variant=\"body1\" color=\"error\">\r\n              An error occurred while fetching user details!\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        throw new Error(\"Unknown address\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ minHeight: \"100vh\", backgroundColor: \"white\" }}>\r\n        <CssBaseline />\r\n        <Grid container>\r\n          <Grid container item sm={12} justify=\"flex-start\">\r\n            <Box component=\"div\" mb={5} textAlign=\"left\">\r\n              <Typography variant=\"h2\" component=\"h2\">\r\n                Seller / {state.display}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item sm={12} md={4}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-label=\"account action list\"\r\n              disablePadding\r\n              className={classes.list}\r\n            >\r\n              <Lists state={state} setState={setState} />\r\n            </List>\r\n          </Grid>\r\n          <Grid container item sm={12} md={8} justify=\"center\">\r\n            <Box component=\"div\" className={classes.div}>\r\n              {renderComponent()}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport AdminRoute from \"./components/AdminRoute\";\r\n\r\nimport Hoc from \"./Hoc\";\r\nimport SignIn from \"./containers/Auth/SignIn\";\r\nimport SignUp from \"./containers/Auth/SignUp\";\r\nimport Forgot from \"./containers/Auth/Forgot\";\r\nimport Product from \"./components/Product/Product\";\r\nimport ProductList from \"./components/Product/ProductList\";\r\nimport ResetPassword from \"./containers/Auth/ResetPassword\";\r\nimport Dashboard from \"./containers/Admin/Dashboard\";\r\nimport Checkout from \"./containers/Checkout/Checkout\";\r\nimport UserProfile from \"./containers/Profile/UserProfile\";\r\nimport CartView from \"./containers/CartView\";\r\nimport Home from \"./containers/Home\";\r\nimport Content from \"./containers/Content\";\r\nimport Layout from \"./containers/Layout\";\r\nimport Error from \"./components/Error\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Seller from \"./containers/Seller/Seller\";\r\n\r\nconst BaseRouter = withRouter(({ location }) => {\r\n  const token = useSelector((state) => state.auth.token);\r\n  // console.log(token);\r\n  return (\r\n    <Hoc>\r\n      {/* {location.pathname !== \"/dashboard\" ? ( */}\r\n      <Layout>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/error\" exact component={Error} />\r\n          <Route path=\"/cart\" exact component={CartView} />\r\n          <Route\r\n            path=\"/products/:product\"\r\n            exact\r\n            render={(props) => (\r\n              <ProductList key={props.location.key} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/product/:slug\"\r\n            exact\r\n            render={(props) => <Product key={props.location.key} {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/page/:content\"\r\n            exact\r\n            render={(props) => <Content key={props.location.key} {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/reset/:uid/:token\"\r\n            exact\r\n            render={(props) => (\r\n              <ResetPassword key={props.location.key} {...props} />\r\n            )}\r\n          />\r\n          <PrivateRoute path=\"/checkout\" exact component={Checkout} />\r\n          <PrivateRoute path=\"/account\" exact component={UserProfile} />\r\n          {!token && (\r\n            <>\r\n              <Route path=\"/signin\" exact component={SignIn} />\r\n              <Route path=\"/signup\" exact component={SignUp} />\r\n              <Route path=\"/reset-password\" exact component={Forgot} />\r\n            </>\r\n          )}\r\n          {token?.seller && <Route path=\"/seller\" exact component={Seller} />}\r\n          <Route render={() => <Redirect to=\"/\" />} />\r\n        </Switch>\r\n      </Layout>\r\n      {/* ) : (\r\n        <React.Fragment>\r\n          <AdminRoute path=\"/dashboard\" exact component={Dashboard} />\r\n        </React.Fragment>\r\n      )} */}\r\n    </Hoc>\r\n  );\r\n});\r\n\r\nexport default BaseRouter;\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Router } from \"react-router-dom\"\r\nimport { authCheckState } from \"./store/actions/auth\"\r\nimport { ThemeProvider } from \"@material-ui/core/styles\"\r\nimport theme from \"./theme\"\r\n\r\nimport BackToTop from \"./components/BackToTop\"\r\nimport BaseRouter from \"./routes\"\r\nimport history from \"./history\"\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(authCheckState())\r\n  })\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <Router history={history}>\r\n          <BaseRouter />\r\n        </Router>\r\n        <BackToTop showBelow={250} />\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import {\r\n  AUTH_START,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  AUTH_LOGOUT,\r\n  AUTH_RESET,\r\n} from \"../actions/types\"\r\n\r\nconst INITIAL_STATE = {\r\n  token: null,\r\n  error: null,\r\n  loading: false,\r\n}\r\n\r\nexport const authReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case AUTH_START:\r\n      return { ...state, error: null, loading: true }\r\n    case AUTH_SUCCESS:\r\n      return { ...state, token: action.payload, error: null, loading: false }\r\n    case AUTH_FAIL:\r\n      return { ...state, error: action.payload, loading: false }\r\n    case AUTH_LOGOUT:\r\n      return { ...state, token: null }\r\n    case AUTH_RESET:\r\n      return INITIAL_STATE\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  CART_START,\r\n  CART_SUCCESS,\r\n  CART_FAIL,\r\n  CART_CLEAR,\r\n} from \"../actions/types\"\r\n\r\nconst INITIAL_STATE = {\r\n  shoppingCart: null,\r\n  error: null,\r\n  loading: false,\r\n}\r\n\r\nexport const cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CART_START:\r\n      return { ...state, error: null, loading: true }\r\n    case CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        shoppingCart: action.payload,\r\n      }\r\n    case CART_FAIL:\r\n      return { ...state, error: action.payload, loading: false }\r\n    case CART_CLEAR:\r\n      return INITIAL_STATE\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport { authReducer } from \"./authReducer\"\r\nimport { cartReducer } from \"./cartReducer\"\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  cart: cartReducer,\r\n})\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport { Provider } from \"react-redux\"\r\nimport { createStore, applyMiddleware, compose } from \"redux\"\r\nimport reduxThunk from \"redux-thunk\"\r\n\r\nimport App from \"./App\"\r\nimport reducers from \"./store/reducers\"\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}