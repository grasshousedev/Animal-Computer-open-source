{"version":3,"sources":["setting.js","constants.js","apis/store.js","history.js","store/actions/types.js","store/actions/auth.js","theme.js","components/BackToTop.js","components/PrivateRoute.js","Hoc.js","utils.js","components/Copyright.js","containers/Auth/SignIn.js","containers/Auth/SignUp.js","containers/Auth/Forgot.js","cartLocal.js","components/BreadCrumbs.js","components/Product/AlertDialog.js","components/Product/AddedToCart.js","store/actions/cart.js","components/ScrollToTopOnMount.js","containers/Cart.js","components/Product/Tab.js","components/Product/Product.js","components/Product/ProductCard.js","components/Product/ProductList.js","containers/Auth/ResetPassword.js","containers/Admin/OrderDetail.js","containers/Admin/Orders.js","containers/Admin/Messages.js","containers/Admin/Maintenance.js","containers/Admin/Discount.js","containers/Admin/Dashboard.js","containers/Checkout/CheckoutStyles.js","containers/Checkout/AddressForm.js","containers/Checkout/Address.js","containers/Checkout/Checkout.js","containers/Profile/Edit.js","containers/Profile/Account.js","containers/Profile/Orders.js","containers/Profile/Password.js","containers/Profile/ProfileList.js","containers/Profile/UserProfile.js","containers/CartView.js","components/Product/SpecificList.js","containers/Home.js","containers/Content.js","components/Footer/MessageForm.js","components/Footer/Footer.js","components/LogoutAlertDialog.js","components/Nav/NavList.js","components/Nav/Search.js","components/Nav/SideDrawer.js","logo.png","components/Nav/Nav.js","components/CookieConsent.js","containers/Layout.js","components/Error.js","containers/Seller/Lists.jsx","containers/Seller/BuyerOrders.jsx","containers/Seller/LaptopForm/LaptopForm.jsx","containers/Seller/SellerProduct.jsx","containers/Seller/Accessory/AccessoryForm.jsx","containers/Seller/Seller.jsx","routes.js","App.js","store/reducers/authReducer.js","store/reducers/cartReducer.js","store/reducers/index.js","index.js"],"names":["baseURL","window","location","hostname","split","endpoint","productURL","slug","store","axios","create","authStore","paramsSerializer","params","Qs","stringify","arrayFormat","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","createBrowserHistory","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_RESET","CART_START","CART_SUCCESS","CART_FAIL","CART_CLEAR","authStart","type","authSuccess","payload","authFail","authReset","theme","createMuiTheme","palette","primary","main","secondary","contrastText","typography","h2","fontSize","useStyles","makeStyles","toTop","zIndex","position","bottom","backgroundColor","color","transition","breakpoints","up","right","BackToTop","showBelow","classes","useState","show","setShow","handleScroll","pageYOffset","useEffect","addEventListener","removeEventListener","IconButton","onClick","top","behavior","className","aria-label","component","PrivateRoute","Component","rest","useSelector","state","auth","render","props","pathname","to","from","Hoc","children","showError","response","data","linkText","textDecoration","cursor","Copyright","style","padding","Typography","variant","align","Date","getFullYear","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","width","submit","div","MyCheckbox","label","useField","field","FormControlLabel","control","Checkbox","MyTextfield","autoComplete","autoFocus","meta","errorText","touched","TextField","fullWidth","helperText","required","validationSchema","Yup","email","max","password","min","SignInForm","dispatch","useDispatch","status","scrollTo","Fragment","Container","maxWidth","CssBaseline","Avatar","onSubmit","post","withCredentials","then","res","history","push","catch","err","authLogin","initialValues","validateOnChange","values","id","name","show_password","Button","loading","CircularProgress","FormHelperText","Grid","container","item","xs","Box","mt","MyTextField","firstName","lastName","phoneNumber","address","password1","matches","password2","oneOf","SignUpForm","seller","authSignup","sm","justify","inputProps","Forgot","sending","sent","setState","handleEmailSubmit","shape","renderForm","p","enableReinitialize","cart","loadCart","cartJSON","JSON","parse","e","saveCart","setItem","getCart","link","text","IconBreadcrumbs","Breadcrumbs","icon","React","Children","toArray","map","cloneElement","dialog","AlertDialog","title","content","handleDone","handleDismiss","action","dismiss","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","buttons","justifyContent","checkmarkCircle","strokeDasharray","strokeDashoffset","strokeWidth","strokeMiterlimit","stroke","fill","animation","checkmark","height","borderRadius","boxShadow","checkmarkCheck","transformOrigin","strokeFashoffset","transform","AddedToCart","xmlns","viewBox","cx","cy","r","d","fetchCart","cartSuccess","clearCart","ScrollToTopOnMount","table","minWidth","textTransform","actions","items","minHeight","image","maxHeight","Cart","onDismiss","rough","setRough","message","handleSnackbarClose","event","reason","handleRemove","option","cartIndex","findIndex","cartItem","parseInt","splice","removeCartItem","quantityUpdate","quantity","updateQuantity","handleChange","value","target","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","length","total","forEach","price","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","order_item","Hidden","smDown","src","alt","ram","storage","step","onChange","defaultValue","size","fontWeight","Link","renderCart","root","flexGrow","background","TabPanel","index","role","hidden","tabProps","ProductTab","productID","productTitle","description","manufacturer_url","setValue","AppBar","Tabs","newValue","Tab","List","ListItem","href","img","slider","discount","grey","addToCart","paddingTop","down","Product","product","discountPrice","disabled","setDisabled","dialogOpen","setDialogOpen","setDialog","get","match","_id","productType","handleDisabled","imageURL1","authorId","createCartItem","screen","renderDialog","py","charAt","toUpperCase","slice","lg","dots","imageURL2","imageURL3","imageURL4","dense","ListItemText","brand","Rating","readOnly","precision","processorName","processorDetail","displayDetails","FormControl","FormLabel","RadioGroup","Radio","Divider","selector","renderProduct","varaint","media","cardActions","cardContent","overflowY","listStyleType","overflow","whiteSpace","textOverflow","ProductCard","renderPrice","Card","CardActionArea","CardContent","gutterBottom","Truncate","lines","textAlign","ellipsis","listStyle","paddingLeft","CardActions","marginBottom","grid","ProductList","product_type","products","count","next","previous","list","brands","processors","screenSizes","categories","filters","hideList","sort","ac","AbortController","abort","Math","round","mb","md","heading","breadcrumbs","generateHeader","direction","card","generateCards","new_password1","new_password2","ResetPassword","uid","success","handleTokenSubmit","row","pagination","paddingBottom","paddingRight","listItem","flexWrap","textField","marginLeft","marginRight","toolbar","toolbarIcon","mixins","appBar","drawer","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","drawerPaperClose","overflowX","appBarSpacer","inline","fixedHeight","detail","read","useButtonStyles","button","deliveryAddress","googleLocation","AddressForm","setCart","setStatus","buttonClasses","disablePadding","arrayOfCart","a","result","removeItem","json","assign","startIcon","Address","layout","stepper","Checkout","user","options","useBilling","activeStep","order","selectedBillingAddress","selectedShippingAddress","shippingDetail","billingDetail","checkoutData","setCheckoutData","Paper","checkoutState","setCheckoutState","Edit","saving","formData","details","setDetails","updatedFormData","preventDefault","handleSubmit","Account","scope","Orders","orders","setOrders","changeStatus","elementId","parentElement","orderId","innerText","i","element","Password","setPassword","oldPassword","newPassword1","newPassword2","resetForm","setSubmitting","old_password","errors","isSubmitting","ProfileList","UserProfile","Error","renderComponent","CartView","SpecificList","left","Item","imageURL","Home","setHeaders","autoplay","autoplaySpeed","arrows","mainDiv","Terms","terms","setTerms","contentURL","borderBottomColor","borderColor","input","CssTextField","withStyles","EmailForm","setData","reset","InputProps","InputLabelProps","multiline","footer","Footer","ListItemIcon","MessageForm","LogoutAlertDialog","handleLogout","stopPropagation","DialogContentText","navDisplayFlex","NavList","handleLogoutClick","mdUp","substr","mdDown","Badge","badgeContent","signedIn","search","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","Search","anchor","setResult","setLoading","term","setTerm","resultStyle","setResultStyle","timeoutId","setTimeout","results","clearTimeout","renderListItem","resultContent","discount_price","borderTop","InputBase","placeholder","onFocus","onBlur","innerDiv","searchDiv","SideDrawer","toggleDrawer","edge","Drawer","box","logo","logoButton","first","second","Nav","shoppingCart","Toolbar","weblogo","lgUp","CookieConsent","visible","acceptOnScrollPercentage","handleAccept","Cookies","set","expires","rootNode","document","documentElement","body","scrollTop","scrollHeight","clientHeight","undefined","pageContainer","contentWrap","Layout","Lists","noSpace","BuyerOrders","filter","LaptopForm","myAlert","setMyAlert","productImages","setProductImages","formik","useFormik","FormData","append","method","url","Boolean","InputLabel","Select","labelId","MenuItem","accept","multiple","newImage","files","prevImage","SellerProduct","AccessoryForm","BaseRouter","withRouter","path","exact","key","Content","SignIn","SignUp","Seller","App","ThemeProvider","INITIAL_STATE","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f1e3f022.chunk.js","sourcesContent":["let API_SERVER_VAL = \"\";\r\nconst dev = \"http://localhost:5000\";\r\nconst baseURL =\r\n  window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n\r\nswitch (process.env.NODE_ENV) {\r\n  case \"development\":\r\n    API_SERVER_VAL = baseURL;\r\n    break;\r\n  case \"production\":\r\n    API_SERVER_VAL = baseURL;\r\n    break;\r\n  default:\r\n    API_SERVER_VAL = baseURL;\r\n    break;\r\n}\r\n\r\nexport const API_SERVER = API_SERVER_VAL;\r\nexport default baseURL;\r\n","import { API_SERVER } from \"./setting\";\r\n\r\nexport const endpoint = API_SERVER;\r\n\r\nexport const googleLogin = `/rest-auth/google/`;\r\nexport const addToCartURL = `/add-to-cart/`;\r\nexport const removeFromCartURL = (id) => `/remove-from-cart/${id}/delete/`;\r\nexport const orderSummaryURL = `/order-summary/`;\r\nexport const orderUserListURL = `/api/v1/user/orders/`;\r\nexport const addressURL = `/addresses/`;\r\nexport const addressCreateURL = `/addresses/create/`;\r\nexport const addressUpdateURL = (id) => `/addresses/${id}/update/`;\r\nexport const addressDeleteURL = (id) => `/addresses/${id}/delete/`;\r\nexport const userDetailsURL = `/user-details/`;\r\nexport const updateUserURL = `/api/v1/user/update`;\r\nexport const changePasswordURL = `/api/v1/user/passwordupdate`;\r\nexport const resetPasswordURL = `/rest-auth/password/reset/`;\r\nexport const confirmResetURL = `/rest-auth/password/reset/confirm/`;\r\nexport const brandsURL = (product) => `/brands/${product}/`;\r\nexport const processorsURL = `/processors/`;\r\nexport const displaysURL = `/displays/`;\r\nexport const categoriesURL = `/categories/`;\r\nexport const earningsURL = (when) => `/earnings/${when}/`;\r\nexport const messageCreateURL = `/messages/create/`;\r\nexport const contentURL = (content) => `/content/${content}/`;\r\nexport const checkoutURL = `/checkout/`;\r\nexport const specificListURL = (label) => `/list/${label}/`;\r\nexport const productURL = (slug) => `/product/${slug}/`;\r\nexport const productsListURL = (product_type) => `/products/${product_type}/`;\r\nexport const quantityUpdateURL = `/order/quantity/`;\r\nexport const ratingsURL = `/ratings/`;\r\nexport const ratingCreateURL = `/ratings/create/`;\r\nexport const searchURL = `/api/v1/search/products`;\r\nexport const filterURL = `/filter/products`;\r\nexport const specialURL = `/api/v1/special/products`;\r\nexport const countriesURL = `/countries/`;\r\nexport const headersURL = `/api/v1/auth/headers`;\r\n\r\n// Admin specific\r\nexport const orderListURL = `/orders/`;\r\nexport const orderFilterURL = `/orders/filter`;\r\nexport const orderDetailURL = (id) => `/order/${id}/`;\r\nexport const orderUpdateURL = (id) => `/order/${id}/update/`;\r\nexport const shipmentDetailURL = `/shipment`;\r\nexport const shipmentCreateURL = `/shipment/create/`;\r\nexport const messagesURL = `/messages/`;\r\nexport const messageUpdateURL = (id) => `/messages/${id}/update/`;\r\nexport const messageUnreadURL = `/messages/unread/`;\r\nexport const notificationsURL = `/notifications/`;\r\nexport const notificationUpdateURL = (id) => `/notifications/${id}/update/`;\r\nexport const notificationUpdateAllURL = `/notifications/update/all`;\r\nexport const maintenanceUpdateURL = `/maintenance/1/update/`;\r\nexport const maintenanceURL = `/maintenance/`;\r\nexport const discountURL = `/discount/`;\r\n","import axios from \"axios\";\r\nimport { endpoint } from \"../constants\";\r\nimport Qs from \"qs\";\r\n\r\nexport const store = axios.create({\r\n  baseURL: endpoint,\r\n});\r\n\r\nexport const authStore = axios.create({\r\n  baseURL: endpoint,\r\n});\r\n\r\nexport const productApi = axios.create({\r\n  baseURL: endpoint,\r\n  paramsSerializer: (params) => Qs.stringify(params, { arrayFormat: \"repeat\" }),\r\n});\r\n\r\nauthStore.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Token ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","export const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\nexport const AUTH_RESET = \"AUTH_RESET\";\r\n\r\nexport const CART_START = \"CART_START\";\r\nexport const CART_SUCCESS = \"CART_SUCCESS\";\r\nexport const CART_FAIL = \"CART_FAIL\";\r\nexport const CART_CLEAR = \"CART_CLEAR\";\r\n\r\nexport const SET_NAV = \"SET_NAV\";\r\nexport const SET_PROFILE = \"SET_PROFILE\";\r\n","import { store } from \"../../apis/store\";\r\nimport history from \"../../history\";\r\nimport {\r\n  AUTH_START,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  AUTH_LOGOUT,\r\n  AUTH_RESET,\r\n} from \"./types\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token) => {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    payload: token,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: AUTH_FAIL,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const authReset = () => {\r\n  return {\r\n    type: AUTH_RESET,\r\n  };\r\n};\r\n\r\nexport const logout = (location) => {\r\n  store\r\n    .post(\r\n      \"api/v1/auth/logout\",\r\n      {},\r\n      {\r\n        withCredentials: true,\r\n      }\r\n    )\r\n    .then((res) => {})\r\n    .catch((err) => {});\r\n  history.push(\"/\");\r\n  return {\r\n    type: AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const authLogin = (email, password, from) => (dispatch) => {\r\n  dispatch(authStart());\r\n  store\r\n    .post(\r\n      \"/api/v1/auth/login\",\r\n      {\r\n        email: email,\r\n        password: password,\r\n      },\r\n      {\r\n        withCredentials: true,\r\n      }\r\n    )\r\n    .then((res) => {\r\n      window.scrollTo(0, 0);\r\n      const token = res.data;\r\n      dispatch(authSuccess(token));\r\n      history.push(from);\r\n    })\r\n    .catch((err) => {\r\n      window.scrollTo(0, 0);\r\n      dispatch(authFail(err));\r\n    });\r\n};\r\n\r\nexport const authSignup =\r\n  (\r\n    email,\r\n    password1,\r\n    password2,\r\n    firstName,\r\n    lastName,\r\n    phoneNumber,\r\n    address,\r\n    from,\r\n    seller\r\n  ) =>\r\n  (dispatch) => {\r\n    dispatch(authStart());\r\n    store\r\n      .post(\"/api/v1/auth/signup\", {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        phoneNumber: phoneNumber,\r\n        address: address,\r\n        password1: password1,\r\n        password2: password2,\r\n        seller: seller,\r\n      })\r\n      .then((res) => {\r\n        window.scrollTo(0, 0);\r\n        history.push(from);\r\n      })\r\n      .catch((error) => {\r\n        window.scrollTo(0, 0);\r\n        dispatch(authFail(error));\r\n      });\r\n  };\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    store\r\n      .get(\"/api/v1/tokenverify\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        const token = {\r\n          id: res.data.id,\r\n          firstName: res.data.firstName,\r\n          lastName: res.data.lastName,\r\n          email: res.data.email,\r\n          phoneNumber: res.data.phoneNumber,\r\n          address: res.data.address,\r\n          seller: res.data.seller,\r\n        };\r\n        dispatch(authSuccess(token));\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#2d4059\",\r\n    },\r\n    secondary: {\r\n      main: \"#ea5455\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n  typography: {\r\n    h2: {\r\n      fontSize: \"3.75rem\",\r\n      \"@media (max-width: 960px)\": {\r\n        fontSize: \"2rem\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toTop: {\r\n    zIndex: 2,\r\n    position: \"fixed\",\r\n    bottom: \"2vh\",\r\n    backgroundColor: \"#DCDCDC\",\r\n    color: \"black\",\r\n    \"&:hover, &.Mui-focusVisible\": {\r\n      transition: \"0.3s\",\r\n      color: \"#397BA6\",\r\n      backgroundColor: \"#DCDCDC\",\r\n    },\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      right: \"5%\",\r\n      backgroundColor: \"rgb(220,220,220,0.7)\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      right: \"6.5%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst BackToTop = ({ showBelow }) => {\r\n  const classes = useStyles();\r\n\r\n  const [show, setShow] = useState(showBelow ? false : true);\r\n\r\n  const handleScroll = () => {\r\n    if (window.pageYOffset > showBelow) {\r\n      if (!show) setShow(true);\r\n    } else {\r\n      if (show) setShow(false);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    window[`scrollTo`]({ top: 0, behavior: `smooth` });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showBelow) {\r\n      window.addEventListener(`scroll`, handleScroll);\r\n      return () => window.removeEventListener(`scroll`, handleScroll);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {show && (\r\n        <IconButton\r\n          onClick={handleClick}\r\n          className={classes.toTop}\r\n          aria-label=\"to top\"\r\n          component=\"span\"\r\n        >\r\n          <ExpandLessIcon />\r\n        </IconButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default BackToTop;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const token = useSelector((state) => state.auth.token);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (props.location.pathname === \"/checkout\") {\r\n          props.location.pathname = \"/cart\";\r\n        }\r\n        return token ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","const Hoc = (props) => props.children;\r\n\r\nexport default Hoc;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useTaskBeforeUnmount = (calback, data) => {\r\n  const mounted = useRef(null);\r\n\r\n  useEffect(() => {\r\n    mounted.current = true;\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      if (!mounted.current) {\r\n        calback(data);\r\n      }\r\n    },\r\n    [calback, data]\r\n  );\r\n};\r\n\r\nexport const showError = (error) => {\r\n  try {\r\n    return error.response.data;\r\n  } catch {\r\n    return \"An Error Occurred\";\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  linkText: {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Copyright = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ padding: 10 }}>\r\n      <Typography variant=\"body2\" color=\"inherit\" align=\"center\">\r\n        {\"Copyright © \"}\r\n        <Link to=\"/\" className={classes.linkText}>\r\n          Alamal Computers\r\n        </Link>{\" \"}\r\n        {new Date().getFullYear()}\r\n        {\".\"}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Copyright;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authLogin, authReset } from \"../../store/actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showError } from \"../../utils\";\r\nimport * as Yup from \"yup\";\r\nimport Copyright from \"../../components/Copyright\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  div: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MyCheckbox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nconst MyTextfield = ({ label, autoComplete, autoFocus, type, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n  return (\r\n    <TextField\r\n      margin=\"normal\"\r\n      fullWidth\r\n      autoComplete={autoComplete}\r\n      autoFocus={autoFocus}\r\n      label={label}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      type={type}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string()\r\n    .email(\"This must be a valid email\")\r\n    .required(\"Required\")\r\n    .max(254, \"Can't be more than 254 characters\"),\r\n  password: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"password should be 8 characters long\"),\r\n});\r\n\r\nconst SignInForm = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const status = useSelector((state) => state.auth);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(authReset());\r\n  }, []);\r\n\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const handleSubmit = ({ email, password }) => {\r\n    dispatch(authLogin(email, password, from));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {status.error ? (\r\n            <Typography variant=\"h5\" color=\"error\">\r\n              {showError(status.error)}\r\n            </Typography>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            validateOnChange={true}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({ values }) => (\r\n              <Form className={classes.form}>\r\n                <MyTextfield\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                />\r\n                <MyTextfield\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type={values.show_password ? \"text\" : \"password\"}\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                />\r\n                <MyCheckbox name=\"show_password\" label=\"Show password\" />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  {status.loading ? (\r\n                    <CircularProgress color=\"secondary\" />\r\n                  ) : (\r\n                    \"Sign In\"\r\n                  )}\r\n                </Button>\r\n                {error && <FormHelperText error={true}>{error}</FormHelperText>}\r\n                <div className={classes.div}>\r\n                  <Grid container spacing={6}>\r\n                    <Grid item xs>\r\n                      <Link to=\"/reset-password\" variant=\"body2\">\r\n                        {\"Forgot password?\"}\r\n                      </Link>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Link to=\"/signup\">\r\n                        {\"Don't have an account? Sign Up\"}\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authSignup, authReset } from \"../../store/actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showError } from \"../../utils\";\r\nimport * as Yup from \"yup\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  div: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MyCheckbox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nconst MyTextField = ({ label, autoComplete, autoFocus, type, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  return (\r\n    <TextField\r\n      margin=\"normal\"\r\n      fullWidth\r\n      label={label}\r\n      autoFocus={autoFocus}\r\n      autoComplete={autoComplete}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      type={type}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  firstName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\")\r\n    .min(3, \"First name should be at least 3 characters long\"),\r\n  lastName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\")\r\n    .min(3, \"Last name should be at least 3 characters long\"),\r\n  email: Yup.string()\r\n    .email(\"This must be a valid email\")\r\n    .required(\"Required\")\r\n    .max(254, \"Can't be more than 254 characters\"),\r\n  phoneNumber: Yup.string()\r\n    .required(\"Required\")\r\n    .min(10, \"Phone number should be atleast of 11 numbers \"),\r\n  address: Yup.string()\r\n    .required(\"Required\")\r\n    .min(18, \"Can't be less than 18 characters\"),\r\n  password1: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Must be at least 8 characters long\")\r\n    .matches(\r\n      /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must have at least one number, one lowercase and one uppercase letter\"\r\n    ),\r\n  password2: Yup.string().oneOf(\r\n    [Yup.ref(\"password1\"), null],\r\n    \"Passwords must match\"\r\n  ),\r\n});\r\n\r\nconst SignUpForm = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const status = useSelector((state) => state.auth);\r\n  const [error, setError] = useState(null);\r\n  const { from } = location.state || { from: { pathname: \"/signin\" } };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(authReset());\r\n  }, []);\r\n\r\n  const handleSubmit = ({\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    phoneNumber,\r\n    address,\r\n    password1,\r\n    password2,\r\n    seller,\r\n  }) => {\r\n    dispatch(\r\n      authSignup(\r\n        email,\r\n        password1,\r\n        password2,\r\n        firstName,\r\n        lastName,\r\n        phoneNumber,\r\n        address,\r\n        from,\r\n        seller\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {status.error ? (\r\n            <Typography variant=\"h5\" color=\"error\">\r\n              {showError(status.error)}\r\n            </Typography>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Formik\r\n            onSubmit={handleSubmit}\r\n            validationSchema={validationSchema}\r\n            validateOnChange={true}\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              phoneNumber: \"\",\r\n              address: \"\",\r\n              password1: \"\",\r\n              password2: \"\",\r\n              seller: false,\r\n            }}\r\n          >\r\n            {({ values }) => (\r\n              <Form className={classes.form}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextField\r\n                      autoComplete=\"fname\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"\r\n                      label=\"First Name\"\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <MyTextField\r\n                      id=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      name=\"lastName\"\r\n                      autoComplete=\"lname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      id=\"phoneNumber\"\r\n                      label=\"Phone Number\"\r\n                      name=\"phoneNumber\"\r\n                      type=\"number\"\r\n                      autoComplete=\"phoneNumber\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      type=\"text\"\r\n                      id=\"address\"\r\n                      label=\"Your Address\"\r\n                      name=\"address\"\r\n                      autoComplete=\"address\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      name=\"password1\"\r\n                      label=\"Password\"\r\n                      type={values.show_password ? \"text\" : \"password\"}\r\n                      id=\"password1\"\r\n                      autoComplete=\"current-password\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyTextField\r\n                      name=\"password2\"\r\n                      label=\"Password(again)\"\r\n                      type={values.show_password ? \"text\" : \"password\"}\r\n                      id=\"password2\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyCheckbox name=\"show_password\" label=\"Show password\" />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <MyCheckbox name=\"seller\" label=\"Sign up as a seller\" />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  {status.loading ? (\r\n                    <CircularProgress color=\"secondary\" />\r\n                  ) : (\r\n                    \"Sign Up\"\r\n                  )}\r\n                </Button>\r\n                {error && <FormHelperText error={true}>{error}</FormHelperText>}\r\n                <div className={classes.div}>\r\n                  <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                      <Link to=\"/signin\">Already have an account? Sign in</Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { store } from \"../../apis/store\";\r\nimport { resetPasswordURL } from \"../../constants\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Copyright from \"../../components/Copyright\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst MyTextField = ({\r\n  label,\r\n  autoFocus,\r\n  autoComplete,\r\n  inputProps,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      autoFocus={autoFocus}\r\n      autoComplete={autoComplete}\r\n      inputProps={inputProps}\r\n      fullWidth\r\n    />\r\n  );\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Forgot() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    sending: false,\r\n    sent: false,\r\n    error: null,\r\n    email: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const handleEmailSubmit = (values) => {\r\n    setState({\r\n      ...state,\r\n      sending: true,\r\n    });\r\n    store\r\n      .post(resetPasswordURL, { email: values.email })\r\n      .then((response) => {\r\n        setState({\r\n          sending: false,\r\n          sent: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setState({\r\n          ...state,\r\n          error: error,\r\n        });\r\n      });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"Required\").email(\"Must be a valid email\"),\r\n  });\r\n\r\n  const renderForm = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Box p={2}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Enter Your Email\r\n          </Typography>\r\n        </Box>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={{ email: state.email }}\r\n          onSubmit={handleEmailSubmit}\r\n          validateOnChange={true}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {() => (\r\n            <Form>\r\n              <MyTextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Send\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const renderElements = () => {\r\n    if (state.sending === false && state.sent === false) {\r\n      return <React.Fragment>{renderForm()}</React.Fragment>;\r\n    } else if (state.sending === true && state.sent === false) {\r\n      return <CircularProgress />;\r\n    } else if (state.error) {\r\n      return (\r\n        <React.Fragment>\r\n          <Typography variant=\"h4\" component=\"p\" color=\"error\">\r\n            An error occurred while submitting the request\r\n          </Typography>\r\n          {renderForm()}\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Typography variant=\"h5\" component=\"p\">\r\n          Password Reset Email sent, check your inbox!\r\n        </Typography>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        {renderElements()}\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","let cart = [];\r\n\r\nconst loadCart = () => {\r\n  const cartJSON = localStorage.getItem(\"cart\");\r\n  try {\r\n    return cartJSON !== null ? JSON.parse(cartJSON) : [];\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst saveCart = () => {\r\n  localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n};\r\n\r\nconst getCart = () => {\r\n  return loadCart();\r\n};\r\n\r\nconst createCartItem = (product, option) => {\r\n  const cartIndex = cart.findIndex((cartItem) => {\r\n    return cartItem.id === product._id;\r\n  });\r\n  if (cartIndex === -1) {\r\n    cart.push({\r\n      id: product._id,\r\n      title: product.title,\r\n      price: product.price,\r\n      image: product.imageURL1,\r\n      slug: product._id,\r\n      quantity: 1,\r\n      authorId: product.authorId,\r\n    });\r\n  } else {\r\n    cart[cartIndex].quantity += 1;\r\n  }\r\n  saveCart();\r\n};\r\n\r\nconst updateQuantity = (slug, quantity, config) => {\r\n  const cartIndex = cart.findIndex((cartItem) => {\r\n    if (config) {\r\n      return cartItem.slug === slug && cartItem.config.id === parseInt(config);\r\n    } else {\r\n      return cartItem.slug === slug;\r\n    }\r\n  });\r\n  if (cartIndex > -1) {\r\n    cart[cartIndex].quantity = parseInt(quantity);\r\n    saveCart();\r\n  }\r\n};\r\n\r\nconst removeCartItem = (id, option) => {\r\n  const cartIndex = cart.findIndex((cartItem) => {\r\n    if (option) {\r\n      return cartItem.id === id && cartItem.config.id === parseInt(option);\r\n    } else {\r\n      return cartItem.id === id;\r\n    }\r\n  });\r\n  if (cartIndex > -1) {\r\n    cart.splice(cartIndex, 1);\r\n    saveCart();\r\n  }\r\n};\r\n\r\nconst emptyCart = () => {\r\n  localStorage.setItem(\"cart\", []);\r\n};\r\n\r\ncart = loadCart();\r\n\r\nexport { getCart, createCartItem, removeCartItem, emptyCart, updateQuantity };\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    display: \"flex\",\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n    \"&:hover\": {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function IconBreadcrumbs(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\">\r\n      <Link color=\"inherit\" to=\"/\" className={classes.link}>\r\n        <HomeIcon className={classes.icon} />\r\n        Al-Amal\r\n      </Link>\r\n      {React.Children.toArray(props.children).map((link) =>\r\n        React.cloneElement(link, { className: classes.link })\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialog: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\nconst AlertDialog = ({\r\n  title,\r\n  content,\r\n  handleDone,\r\n  handleDismiss,\r\n  action,\r\n  dismiss,\r\n}) => {\r\n  const [open, setOpen] = useState(true);\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    handleDismiss();\r\n    setOpen(false);\r\n  };\r\n  const handleDoneClick = () => {\r\n    handleDone();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth={true}\r\n        maxWidth=\"lg\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n\r\n        <DialogContent className={classes.dialog}>{content}</DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            {dismiss}\r\n          </Button>\r\n          <Button onClick={handleDoneClick} color=\"primary\" autoFocus>\r\n            {action}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertDialog;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttons: {\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  checkmarkCircle: {\r\n    strokeDasharray: \"166\",\r\n    strokeDashoffset: \"166\",\r\n    strokeWidth: \"2\",\r\n    strokeMiterlimit: \"10\",\r\n    stroke: \"#7ac142\",\r\n    fill: \"none\",\r\n    animation: \"$stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards\",\r\n  },\r\n\r\n  checkmark: {\r\n    width: \"56px\",\r\n    height: \"56px\",\r\n    borderRadius: \"50%\",\r\n    display: \"block\",\r\n    strokeWidth: \"2\",\r\n    stroke: \"#fff\",\r\n    strokeMiterlimit: \"10\",\r\n    margin: \"0 auto 20px auto\",\r\n    boxShadow: \"inset 0px 0px 0px #7ac142\",\r\n    animation:\r\n      \"$fill .4s ease-in-out .4s forwards, scale .3s ease-in-out .9s both\",\r\n  },\r\n\r\n  checkmarkCheck: {\r\n    transformOrigin: \"50% 50%\",\r\n    strokeDasharray: \"48\",\r\n    strokeFashoffset: \"48\",\r\n    animation: \"$stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards\",\r\n  },\r\n\r\n  \"@keyframes stroke\": {\r\n    \"100%\": {\r\n      strokeDashoffset: \"0\",\r\n    },\r\n  },\r\n  \"@keyframes scale\": {\r\n    \"0%, 100%\": {\r\n      transform: \"none\",\r\n    },\r\n    \"50%\": {\r\n      transform: \"scale3d(1.1, 1.1, 1)\",\r\n    },\r\n  },\r\n  \"@keyframes fill\": {\r\n    \"100%\": {\r\n      boxShadow: \"inset 0px 0px 0px 30px #7ac142\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst AddedToCart = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Item Added to Cart</DialogTitle>\r\n      <div>\r\n        <svg\r\n          className={classes.checkmark}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 52 52\"\r\n        >\r\n          <circle\r\n            className={classes.checkmarkCircle}\r\n            cx=\"26\"\r\n            cy=\"26\"\r\n            r=\"25\"\r\n            fill=\"none\"\r\n          />\r\n          <path\r\n            className={classes.checkmarkCheck}\r\n            fill=\"none\"\r\n            d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <div className={classes.buttons}>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddedToCart;\r\n","import { CART_START, CART_SUCCESS, CART_FAIL, CART_CLEAR } from \"./types\";\r\n\r\nexport const cartStart = () => {\r\n  return {\r\n    type: CART_START,\r\n  };\r\n};\r\n\r\nexport const cartSuccess = (data) => {\r\n  return {\r\n    type: CART_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const cartFail = (error) => {\r\n  return {\r\n    type: CART_FAIL,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const cartClear = () => {\r\n  return {\r\n    type: CART_CLEAR,\r\n  };\r\n};\r\n\r\nexport const fetchCart = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(cartSuccess(data));\r\n  };\r\n};\r\n\r\nexport const clearCart = () => {\r\n  return (dispatch) => {\r\n    dispatch(cartClear());\r\n  };\r\n};\r\n","import { useEffect } from \"react\";\r\n\r\nconst ScrollToTopOnMount = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTopOnMount;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCart, removeCartItem, updateQuantity } from \"../cartLocal\";\r\nimport { fetchCart } from \"../store/actions/cart\";\r\nimport ScrollToTopOnMount from \"../components/ScrollToTopOnMount\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { showError } from \"../utils\";\r\nimport { Hidden } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: \"100%\",\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  actions: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  items: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-start\",\r\n      minHeight: 60,\r\n    },\r\n  },\r\n  image: {\r\n    maxWidth: 64,\r\n    maxHeight: 64,\r\n  },\r\n}));\r\n\r\nconst Cart = ({ onDismiss }) => {\r\n  const classes = useStyles();\r\n  // It's just for real time it's rough\r\n  const [rough, setRough] = useState(false);\r\n  let carts = useSelector((state) => state);\r\n\r\n  const cart = getCart();\r\n  const [state, setState] = useState({\r\n    error: false,\r\n    message: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    if (carts) {\r\n      setRough(!rough);\r\n    } else {\r\n      setRough(!rough);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    removeCartItem(id);\r\n    dispatch(fetchCart());\r\n  };\r\n\r\n  const renderActions = () => {\r\n    return (\r\n      <div className={classes.actions}>\r\n        <Grid container justify=\"space-between\">\r\n          <Grid item>\r\n            {onDismiss ? (\r\n              <Button onClick={onDismiss} variant=\"contained\" color=\"default\">\r\n                <NavigateBeforeIcon /> Continue Shopping\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                component={Link}\r\n                to=\"/\"\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n              >\r\n                <NavigateBeforeIcon />\r\n                Continue Shopping\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              component={Link}\r\n              to=\"/checkout\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Checkout\r\n              <NavigateNextIcon />\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const quantityUpdate = (slug, config, quantity) => {\r\n    updateQuantity(slug, config, quantity);\r\n    dispatch(fetchCart());\r\n  };\r\n\r\n  const handleChange = (e, slug, config) => {\r\n    let value = e.target.value;\r\n    quantityUpdate(slug, value, config);\r\n  };\r\n\r\n  const getPrice = (quantity, price) => {\r\n    return quantity * price;\r\n  };\r\n\r\n  const renderEmpty = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Typography variant=\"body1\">The cart is empty.</Typography>\r\n        <Box mt={2}>\r\n          <Link to=\"/\" className={classes.linkText}>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Continue Shopping\r\n            </Button>\r\n          </Link>\r\n        </Box>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderCart = () => {\r\n    if (cart !== null && cart.length > 0) {\r\n      let total = 0;\r\n      cart.forEach((item) => (total += getPrice(item.quantity, item.price)));\r\n      return (\r\n        <React.Fragment>\r\n          <TableContainer>\r\n            <Table aria-label=\"spanning table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Items</TableCell>\r\n                  <TableCell align=\"right\">Quantity</TableCell>\r\n                  <TableCell align=\"right\">Price</TableCell>\r\n                  <TableCell align=\"right\" />\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {cart.map((order_item) => {\r\n                  return (\r\n                    <TableRow key={order_item.id}>\r\n                      <TableCell className={classes.items}>\r\n                        <Hidden smDown>\r\n                          <img\r\n                            src={order_item.image}\r\n                            width=\"64\"\r\n                            height=\"auto\"\r\n                            alt=\"Product\"\r\n                          />\r\n                          &nbsp; &nbsp; &nbsp;\r\n                        </Hidden>\r\n                        <div>\r\n                          {\" \"}\r\n                          {order_item.title}{\" \"}\r\n                          {order_item.config\r\n                            ? `${order_item.config.ram} + ${order_item.config.storage}`\r\n                            : \"\"}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <TextField\r\n                          inputProps={{\r\n                            step: 1,\r\n                            min: 1,\r\n                            max: 50,\r\n                            type: \"number\",\r\n                          }}\r\n                          onChange={(e) => {\r\n                            if (e.target.value < 0) {\r\n                              e.target.value = 1;\r\n                            }\r\n                            if (e.target.value > 50) {\r\n                              e.target.value = 50;\r\n                            }\r\n                            let config = order_item.config;\r\n                            if (config) {\r\n                              handleChange(e, order_item.slug, config.id);\r\n                            } else {\r\n                              handleChange(e, order_item.slug, null);\r\n                            }\r\n                          }}\r\n                          defaultValue={order_item.quantity}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{order_item.price} $</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <IconButton\r\n                          onClick={(e) => handleRemove(order_item.id)}\r\n                        >\r\n                          <ClearIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n                <TableRow>\r\n                  <TableCell align=\"right\" />\r\n                  <TableCell align=\"right\" style={{ fontWeight: 500 }}>\r\n                    Total\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{total} $</TableCell>\r\n                  <TableCell align=\"right\" />\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {renderActions()}\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return renderEmpty();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={state.error}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        message=\"Error removing item\"\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {showError(state.message)}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container>{renderCart()}</Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState } from \"react\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    background: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst TabPanel = ({ children, value, index }) => {\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simpel-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tabProps = (index = 1) => {\r\n  return {\r\n    id: `tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nconst ProductTab = ({\r\n  productID,\r\n  productTitle,\r\n  description,\r\n  manufacturer_url,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"Rating, Specs Tab\"\r\n        >\r\n          <Tab label=\"Specifications\" {...tabProps(0)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <List>\r\n          <ListItem>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              {description}\r\n            </Typography>\r\n          </ListItem>\r\n          <ListItem>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              For more details, head over to the{\" \"}\r\n              <span>\r\n                <a target=\"_blank\" href={manufacturer_url}>\r\n                  official website {productTitle}\r\n                </a>\r\n              </span>\r\n              .\r\n            </Typography>\r\n          </ListItem>\r\n        </List>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductTab;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { store } from \"../../apis/store\";\r\nimport { createCartItem } from \"../../cartLocal\";\r\nimport BreadCrumbs from \"../BreadCrumbs\";\r\nimport AlertDialog from \"./AlertDialog\";\r\nimport AddedToCart from \"./AddedToCart\";\r\nimport Slider from \"infinite-react-carousel\";\r\nimport history from \"../../history\";\r\nimport Cart from \"../../containers/Cart\";\r\nimport ProductTab from \"./Tab\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { showError } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    maxWidth: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  slider: {\r\n    maxHeight: \"400px\",\r\n  },\r\n  discount: {\r\n    textDecoration: \"line-through\",\r\n    color: theme.palette.grey[600],\r\n  },\r\n  addToCart: {\r\n    paddingTop: theme.spacing(2),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Product(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    product: null,\r\n    price: null,\r\n    discountPrice: null,\r\n    option: null,\r\n    error: null,\r\n  });\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialog, setDialog] = useState({\r\n    render: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    const getProduct = () => {\r\n      store\r\n        .get(\r\n          \"/api/v1/product\",\r\n          {\r\n            params: props.match.params.slug,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.data) {\r\n            setState({\r\n              ...state,\r\n              product: response.data,\r\n              option: response.data._id,\r\n              price: response.data.price,\r\n              discountPrice: response.data.discountPrice,\r\n            });\r\n          } else {\r\n            setState({\r\n              ...state,\r\n              product: response.data,\r\n              option: 0,\r\n              price: response.data.price,\r\n              discountPrice: response.data.discountPrice,\r\n            });\r\n            if (response.data.quantity > 0) {\r\n              setDisabled(false);\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setState({ ...state, error });\r\n        });\r\n    };\r\n    getProduct();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleDisabled = () => {\r\n      if (state?.product?.productType === \"Laptop\") {\r\n        if (state.option) {\r\n          setDisabled(false);\r\n        }\r\n      }\r\n    };\r\n    handleDisabled();\r\n    // eslint-disable-next-line\r\n  }, [state.option]);\r\n\r\n  // Slider\r\n  const generateImages = () => {\r\n    if (state.product.imageURL1) {\r\n      return [\r\n        state.product.imageURL1,\r\n        state.product.imageURL2,\r\n        state.product.imageURL3,\r\n        state.product.imageURL4,\r\n      ].map((image, id) => (\r\n        <img key={id} className={classes.img} src={image} alt=\"Product\" />\r\n      ));\r\n    } else {\r\n      return (\r\n        <img\r\n          className={classes.img}\r\n          src={\r\n            \"https://media.istockphoto.com/vectors/no-image-vector-symbol-missing-available-icon-no-gallery-for-this-vector-id1128826884?k=20&m=1128826884&s=170667a&w=0&h=_cx7HW9R4Uc_OLLxg2PcRXno4KERpYLi5vCz-NEyhi0=\"\r\n          }\r\n          alt=\"missing product\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n  const simpleSlider = () => (\r\n    <Slider dots className={classes.slider}>\r\n      {generateImages()}\r\n    </Slider>\r\n  );\r\n\r\n  const generateDetails = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary={\r\n              <Typography variant=\"h6\">\r\n                Processor:\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                  {` ${state.product.processorName} ${\r\n                    state.product.processorDetail\r\n                      ? state.product.processorDetail\r\n                      : \"\"\r\n                  }`}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary={\r\n              <Typography variant=\"h6\">\r\n                Display:\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                  {` ${state.product.display} ${\r\n                    state.product.displayDetails\r\n                      ? state.product.displayDetails\r\n                      : \"\"\r\n                  }`}\r\n                </Typography>\r\n              </Typography>\r\n            }\r\n          />\r\n        </ListItem>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const renderConfigs = () => {\r\n    if (state.product) {\r\n      return (\r\n        <ListItem>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Configurations</FormLabel>\r\n            <RadioGroup aria-label=\"config\" name=\"config\" value={state.option}>\r\n              {state.product.ram ? (\r\n                <React.Fragment>\r\n                  <FormControlLabel\r\n                    value={state.option}\r\n                    control={<Radio />}\r\n                    label={`${state.product.ram} RAM + ${state.product.storage} STORAGE`}\r\n                    key={state.option}\r\n                  />\r\n                </React.Fragment>\r\n              ) : (\r\n                \"Out of Stock\"\r\n              )}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </ListItem>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const renderPrice = (discountPrice, price) => {\r\n    return (\r\n      <React.Fragment>\r\n        {discountPrice ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\">\r\n              <Box\r\n                fontWeight=\"fontWeightBold\"\r\n                fontSize=\"1.25rem\"\r\n                component=\"span\"\r\n              >\r\n                Price:{\" \"}\r\n              </Box>{\" \"}\r\n              {discountPrice} $ &nbsp;\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.discount}>\r\n              {price} $\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            <Box\r\n              fontWeight=\"fontWeightBold\"\r\n              fontSize=\"1.25rem\"\r\n              component=\"span\"\r\n            >\r\n              Price:{\" \"}\r\n            </Box>\r\n            {price} $\r\n          </Typography>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  // Cart Section\r\n\r\n  const renderDialog = () => {\r\n    const onCheckout = () => {\r\n      setDialog({\r\n        render: false,\r\n      });\r\n      history.push(\"/checkout\");\r\n    };\r\n\r\n    const onDismiss = () => {\r\n      setDialog({\r\n        render: false,\r\n      });\r\n    };\r\n    return (\r\n      <AlertDialog\r\n        content={<Cart onDismiss={onDismiss} />}\r\n        handleDone={onCheckout}\r\n        handleDismiss={onDismiss}\r\n        title={\"Cart\"}\r\n        action=\"\"\r\n        dismiss=\"\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const addToCart = (slug) => {\r\n    createCartItem(state.product, state.option);\r\n    if (window.screen.width > 960) {\r\n      setDialog({\r\n        render: true,\r\n      });\r\n    } else {\r\n      setDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const renderProduct = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Box py={3}>\r\n          <BreadCrumbs>\r\n            <Link to={`/products/${state.product.productType}`}>\r\n              {state.product.productType.charAt(0).toUpperCase() +\r\n                state.product.productType.slice(1)}\r\n            </Link>\r\n            <Link to={`/product/${props.match.params.slug}`}>\r\n              {state.product.title}\r\n            </Link>\r\n          </BreadCrumbs>\r\n        </Box>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3} lg={4}>\r\n            {simpleSlider()}\r\n          </Grid>\r\n          <Grid item xs={12} sm={9} lg={8}>\r\n            <List dense>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"h2\" component=\"h1\">\r\n                      {state.product.title} &#40;{state.product.brand}&#41;\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <Rating name=\"read-only\" value={5} readOnly precision={0.5} />\r\n                <span>({5})</span>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={renderPrice(state.discountPrice, state.price)}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography variant=\"body1\" component=\"p\">\r\n                      {state.product.description}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n\r\n              {state.product.color ? (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"h6\">\r\n                        Color:\r\n                        <Typography variant=\"body1\" component=\"span\">\r\n                          {` ${state.product.color}`}\r\n                        </Typography>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {state.product && state.product.productType === \"Laptop\"\r\n                ? generateDetails()\r\n                : \"\"}\r\n              {state.product && state.product.productType === \"Laptop\"\r\n                ? renderConfigs()\r\n                : \"\"}\r\n              <Divider variant=\"middle\" />\r\n              <ListItem>\r\n                <div className={classes.addToCart}>\r\n                  {state.product.quantity === 0 ? (\r\n                    <Typography variant=\"subtitle1\" component=\"p\">\r\n                      Out of stock\r\n                    </Typography>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => addToCart(state.option)}\r\n                    disabled={disabled}\r\n                    className={classes.selector}\r\n                  >\r\n                    Add To Cart\r\n                  </Button>\r\n                </div>\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n        {state.product.productType === \"Laptop\" ? (\r\n          <Box mt={4}>\r\n            <ProductTab\r\n              productID={state.option}\r\n              productTitle={state.product.title}\r\n              description={state.product.description}\r\n              manufacturer_url={state.product.manufacturer_url}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <AddedToCart open={dialogOpen} setOpen={setDialogOpen} />\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={open}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {showError(state.error)}\r\n          </Alert>\r\n        </Snackbar>\r\n        {dialog.render ? renderDialog() : \"\"}\r\n        {state.product ? (\r\n          renderProduct()\r\n        ) : state.error ? (\r\n          <Typography varaint=\"body1\" component=\"p\" color=\"error\">\r\n            Error in fetching the data\r\n          </Typography>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { productURL } from \"../../constants\";\r\nimport Truncate from \"react-truncate\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    padding: theme.spacing(1),\r\n    height: 150,\r\n  },\r\n  image: {\r\n    maxHeight: 150,\r\n    maxWidth: 200,\r\n  },\r\n  cardActions: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  cardContent: {\r\n    height: 125,\r\n    overflowY: \"hidden\",\r\n  },\r\n  description: {\r\n    height: 50,\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  actions: {\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  discount: {\r\n    textDecoration: \"line-through\",\r\n    color: theme.palette.grey[600],\r\n  },\r\n  title: {\r\n    display: \"block\",\r\n    maxWidth: 345,\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n}));\r\n\r\nexport default function ProductCard({ product }) {\r\n  const classes = useStyles();\r\n\r\n  const renderPrice = (discountPrice, price) => {\r\n    return (\r\n      <React.Fragment>\r\n        {discountPrice ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\">\r\n              <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n                Price:{\" \"}\r\n              </Box>{\" \"}\r\n              {discountPrice} $ &nbsp;\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.discount}>\r\n              {price} $\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n              Price:{\" \"}\r\n            </Box>\r\n            {price} $\r\n          </Typography>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCardLink = () => {\r\n    if (product) {\r\n      return (\r\n        <Link to={productURL(product._id)} className={classes.link}>\r\n          <CardActionArea>\r\n            <CardContent>\r\n              <div className={classes.media}>\r\n                <img\r\n                  alt=\"ProductImg\"\r\n                  src={product.imageURL1}\r\n                  className={classes.image}\r\n                />\r\n              </div>\r\n              <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                <span className={classes.title}>{product.title}</span>\r\n              </Typography>\r\n              {product.productType === \"Laptop\" ? (\r\n                <div className={classes.cardContent}>\r\n                  <div className={classes.description}>\r\n                    <Truncate\r\n                      lines={2}\r\n                      style={{ textAlign: \"left\" }}\r\n                      ellipsis={<span>...</span>}\r\n                    >\r\n                      {product.description}\r\n                    </Truncate>\r\n                  </div>\r\n                  {product.productType === \"Laptop\" ? (\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"flex-start\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <ul\r\n                        style={{\r\n                          listStyle: \"square\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          alignItems: \"flex-start\",\r\n                          justifyContent: \"flex-start\",\r\n                          paddingLeft: 20,\r\n                          textAlign: \"left\",\r\n                        }}\r\n                      >\r\n                        <li>{`${product.processorName} ${product.processorDetail}`}</li>\r\n                        <li>{`${product.display} ${product.displayDetails}`}</li>\r\n\r\n                        <React.Fragment>\r\n                          <li>{product.ram}</li>\r\n                          <li>{product.storage}</li>\r\n                        </React.Fragment>\r\n                      </ul>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div className={classes.description}>\r\n                    <Truncate\r\n                      lines={2}\r\n                      style={{ textAlign: \"left\" }}\r\n                      ellipsis={<span>...</span>}\r\n                    >\r\n                      {product.description}\r\n                    </Truncate>\r\n                  </div>\r\n                  {product.productType === \"Laptop\" ? (\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"flex-start\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <ul\r\n                        style={{\r\n                          listStyle: \"square\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          alignItems: \"flex-start\",\r\n                          justifyContent: \"flex-start\",\r\n                          paddingLeft: 20,\r\n                          textAlign: \"left\",\r\n                        }}\r\n                      >\r\n                        <li>{`${product.processorName} ${product.processorDetail}`}</li>\r\n                        <li>{`${product.display} ${product.displayDetails}`}</li>\r\n\r\n                        <React.Fragment>\r\n                          <li>{product.ram}</li>\r\n                          <li>{product.storage}</li>\r\n                        </React.Fragment>\r\n                      </ul>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Link>\r\n      );\r\n    } else {\r\n      return (\r\n        <Typography color=\"primary\" component=\"h2\" variant=\"h2\">\r\n          A fatal error has occurred!\r\n        </Typography>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item>\r\n      <Card className={classes.root}>\r\n        {renderCardLink()}\r\n        <CardActions className={classes.cardActions}>\r\n          <ul className={classes.actions}>\r\n            <li>\r\n              {product.productType === \"Laptop\"\r\n                ? renderPrice(product.discountPrice, product.price)\r\n                : product.price.length > 0\r\n                ? renderPrice(product.discountPrice, product.price)\r\n                : \"Out of stock\"}\r\n            </li>\r\n            <li>\r\n              <Link to={productURL(product._id)} className={classes.link}>\r\n                <Button color=\"secondary\">View Details</Button>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { store } from \"../../apis/store\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport _ from \"lodash\";\r\nimport ScrollToTopOnMount from \"../ScrollToTopOnMount\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BreadCrumbs from \"../BreadCrumbs\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    grid: {\r\n      marginTop: theme.spacing(4),\r\n      display: \"none\",\r\n    },\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  list: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n  card: {\r\n    marginTop: theme.spacing(1),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  breadcrumbs: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  container: {\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProductList = (props) => {\r\n  const classes = useStyles();\r\n  const product_type = props.match.params.product;\r\n  const [state, setState] = useState({\r\n    products: [],\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n    list: {\r\n      brands: null,\r\n      processors: null,\r\n      screenSizes: null,\r\n      categories: null,\r\n    },\r\n    filters: [],\r\n    hideList: true,\r\n    loading: true,\r\n    sort: \"price\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    const ac = new AbortController();\r\n    return () => {\r\n      ac.abort();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    const getSpecialProducts = () => {\r\n      store\r\n        .get(\"/api/v1/params/products\", {\r\n          params: {\r\n            product_type: product_type,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          let products = response.data;\r\n          let count = Math.round(response.data.count / 10);\r\n          let next = response.data.next;\r\n          let previous = response.data.previous;\r\n\r\n          setState({\r\n            ...state,\r\n            products: products,\r\n            count: count,\r\n            next: next,\r\n            previous: previous,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            loading: false,\r\n          });\r\n        });\r\n    };\r\n    getSpecialProducts();\r\n    return () => {\r\n      ac.abort();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [state.filters, state.sort]);\r\n\r\n  const generateCards = () => {\r\n    if (state?.products?.length > 0) {\r\n      return state?.products?.map((product) => {\r\n        return (\r\n          <Grid\r\n            key={product._id}\r\n            item\r\n            align=\"center\"\r\n            xs={12}\r\n            sm={6}\r\n            lg={4}\r\n            md={4}\r\n            className={classes.card}\r\n          >\r\n            <ProductCard product={product} />\r\n          </Grid>\r\n        );\r\n      });\r\n    } else {\r\n      return <CircularProgress />;\r\n    }\r\n  };\r\n\r\n  const generateHeader = () => {\r\n    const heading =\r\n      product_type.charAt(0).toUpperCase() + product_type.slice(1);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"h1\" variant=\"h2\">\r\n            {product_type === \"Laptop\"\r\n              ? `${heading}s`\r\n              : `${heading.slice(0, 8)}ies`}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} container className={classes.breadcrumbs}>\r\n          <BreadCrumbs>\r\n            <Link to={`/products/${product_type}`}>{heading}</Link>\r\n          </BreadCrumbs>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      <Container maxWidth=\"lg\">\r\n        <Box component=\"div\" mb={{ md: 4 }}>\r\n          <Grid container spacing={2}>\r\n            {generateHeader()}\r\n          </Grid>\r\n        </Box>\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            lg={3}\r\n            className={state.hideList ? classes.grid : \"\"}\r\n          >\r\n            <Box component=\"div\" className={classes.list}></Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={12} lg={9}>\r\n            {state?.products?.length > 0 ? (\r\n              <React.Fragment>\r\n                <Grid container spacing={4} justify=\"flex-end\"></Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  className={classes.container}\r\n                >\r\n                  {state.loading ? (\r\n                    <Grid item xs={12}>\r\n                      <CircularProgress />\r\n                    </Grid>\r\n                  ) : (\r\n                    generateCards()\r\n                  )}\r\n                </Grid>\r\n              </React.Fragment>\r\n            ) : state.loading ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <Typography variant=\"h6\" component=\"p\">\r\n                No products available\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { store } from \"../../apis/store\";\r\nimport { confirmResetURL } from \"../../constants\";\r\nimport { showError } from \"../../utils\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Copyright from \"../../components/Copyright\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst MyTextField = ({\r\n  label,\r\n  autoFocus,\r\n  autoComplete,\r\n  inputProps,\r\n  type,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      autoFocus={autoFocus}\r\n      autoComplete={autoComplete}\r\n      inputProps={inputProps}\r\n      type={type}\r\n      fullWidth\r\n    />\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n      {...field}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  new_password1: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Must be at least 8 characters long\")\r\n    .matches(\r\n      /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must have at least one number, one lowercase and one uppercase letter\"\r\n    ),\r\n  new_password2: Yup.string().oneOf(\r\n    [Yup.ref(\"new_password1\"), null],\r\n    \"Passwords must match\"\r\n  ),\r\n});\r\n\r\nexport default function ResetPassword(props) {\r\n  const classes = useStyles();\r\n  const uid = props.match.params.uid;\r\n  const token = props.match.params.token;\r\n\r\n  const [state, setState] = useState({\r\n    sending: false,\r\n    success: false,\r\n    error: null,\r\n    payload: {\r\n      uid: uid,\r\n      token: token,\r\n      new_password1: \"\",\r\n      new_password2: \"\",\r\n      show_password: false,\r\n    },\r\n  });\r\n\r\n  const handleTokenSubmit = (values) => {\r\n    setState({\r\n      ...state,\r\n      sending: true,\r\n    });\r\n    store\r\n      .post(confirmResetURL, values)\r\n      .then((response) => {\r\n        setState({\r\n          ...state,\r\n          sending: false,\r\n          success: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setState({\r\n          ...state,\r\n          sending: false,\r\n          success: false,\r\n          error: error,\r\n        });\r\n      });\r\n  };\r\n\r\n  const renderForm = () => {\r\n    if (state.sending === true && state.success === false) {\r\n      return <CircularProgress />;\r\n    } else if (state.sending === false && state.success === false) {\r\n      return (\r\n        <React.Fragment>\r\n          {state.error ? (\r\n            <Typography variant=\"h5\" component=\"p\" color=\"error\">\r\n              {showError(state.error)}\r\n            </Typography>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Set New Password\r\n          </Typography>\r\n          <Formik\r\n            enableReinitialize\r\n            initialValues={state.payload}\r\n            onSubmit={handleTokenSubmit}\r\n            validateOnChange={true}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({ values }) => (\r\n              <Form className={classes.form}>\r\n                <MyTextField\r\n                  required\r\n                  id=\"newPassword1\"\r\n                  name=\"new_password1\"\r\n                  label=\"New Password\"\r\n                  type={values.show_password ? \"text\" : \"password\"}\r\n                  fullWidth\r\n                />\r\n                <MyTextField\r\n                  required\r\n                  id=\"newPassword2\"\r\n                  name=\"new_password2\"\r\n                  label=\"New Password (again)\"\r\n                  type={values.show_password ? \"text\" : \"password\"}\r\n                  fullWidth\r\n                />\r\n                <MyCheckbox name=\"show_password\" label=\"Show password\" />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Box p={3}>\r\n            <Typography variant=\"h5\" component=\"p\">\r\n              Password Reset Success!\r\n            </Typography>\r\n          </Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component={Link}\r\n            to=\"/signin\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        {renderForm()}\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\n\r\nimport { authStore } from \"../../apis/store\"\r\nimport {\r\n  orderDetailURL,\r\n  orderUpdateURL,\r\n  shipmentCreateURL,\r\n  shipmentDetailURL,\r\n} from \"../../constants\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport Title from \"./Title\"\r\n\r\nimport CustomAlert from \"./CustomAlert\"\r\n\r\nconst OrderDetail = ({ id, state, setState }) => {\r\n  const [order, setOrder] = useState({\r\n    loading: true,\r\n    error: null,\r\n    data: null,\r\n  })\r\n  const [sent, setSent] = useState({\r\n    status: false,\r\n    message: \"\",\r\n  })\r\n  const [error, setError] = useState({\r\n    status: false,\r\n    message: \"\",\r\n  })\r\n  const [form, setForm] = useState({\r\n    saving: false,\r\n    error: null,\r\n    formData: {\r\n      id: \"\",\r\n      order: id,\r\n      courier_name: \"\",\r\n      tracking_id: \"\",\r\n      web_address: \"\",\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController()\r\n    const getOrderDetail = () => {\r\n      authStore\r\n        .get(orderDetailURL(id))\r\n        .then((response) => {\r\n          const orderData = response.data\r\n          setOrder({\r\n            ...order,\r\n            loading: false,\r\n            data: orderData,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setOrder({\r\n            ...order,\r\n            loading: false,\r\n            error: error,\r\n          })\r\n        })\r\n    }\r\n    getOrderDetail()\r\n\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController()\r\n    const getShipmentDetail = () => {\r\n      authStore\r\n        .get(shipmentDetailURL, {\r\n          params: {\r\n            id: id,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setForm({\r\n            ...form,\r\n            formData: {\r\n              ...response.data,\r\n            },\r\n          })\r\n        })\r\n        .catch((error) => setForm({ ...form, error: error }))\r\n    }\r\n\r\n    getShipmentDetail()\r\n    return () => {\r\n      ac.abort()\r\n    }\r\n  }, [])\r\n\r\n  const { formData } = form\r\n\r\n  const handleChange = (e) => {\r\n    const { formData } = form\r\n    const updatedFormData = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    }\r\n    setForm({\r\n      ...form,\r\n      formData: updatedFormData,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    setForm({\r\n      ...form,\r\n      saving: true,\r\n    })\r\n    authStore\r\n      .post(shipmentCreateURL, form.formData)\r\n      .then((response) => {\r\n        setSent({\r\n          status: true,\r\n          message: \"Shipment details sent successfully!\",\r\n        })\r\n        setForm({\r\n          ...form,\r\n          saving: false,\r\n          formData: {\r\n            ...response.data,\r\n          },\r\n        })\r\n        setOrder({\r\n          ...order,\r\n          data: {\r\n            ...order.data,\r\n            status: \"Dispatched\",\r\n          },\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setError({\r\n          status: true,\r\n          message: \"Shipment detail creation failed!\",\r\n        })\r\n        setForm({\r\n          ...form,\r\n          saving: false,\r\n          error: error,\r\n        })\r\n      })\r\n  }\r\n\r\n  const handleComplete = () => {\r\n    setOrder({\r\n      ...order,\r\n      loading: true,\r\n    })\r\n    authStore\r\n      .patch(orderUpdateURL(id), { id: id, status: \"Completed\" })\r\n      .then((response) => {\r\n        setSent({\r\n          status: true,\r\n          message: \"Order status updated successfully!\",\r\n        })\r\n        setOrder({\r\n          data: response.data,\r\n          loading: false,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setError({\r\n          status: true,\r\n          message: \"Order status update failed!\",\r\n        })\r\n        setOrder({\r\n          ...order,\r\n          loading: false,\r\n          error: error,\r\n        })\r\n      })\r\n  }\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return\r\n    }\r\n\r\n    if (sent.status === true) {\r\n      setSent({\r\n        message: \"\",\r\n        status: false,\r\n      })\r\n    } else {\r\n      setError({\r\n        message: \"\",\r\n        status: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const renderItem = (item) => {\r\n    return (\r\n      <TableRow key={item.id}>\r\n        <TableCell align=\"left\">{item.item.title}</TableCell>\r\n        <TableCell align=\"left\">\r\n          {item.config\r\n            ? `${item.config.ram} RAM + ${item.config.storage}`\r\n            : \"N/A\"}\r\n        </TableCell>\r\n        <TableCell align=\"left\">{item.quantity}</TableCell>\r\n      </TableRow>\r\n    )\r\n  }\r\n\r\n  const renderShipment = () => {\r\n    return (\r\n      <List dense>\r\n        <ListItem>\r\n          <Typography variant=\"h5\" component=\"h5\">\r\n            Courier Details\r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"shipment table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell style={{ fontWeight: 500 }}>\r\n                    Courier Name:\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{` ${form.formData.courier_name}`}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ fontWeight: 500 }}>\r\n                    Tracking Id:\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {` ${form.formData.tracking_id}`}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ fontWeight: 500 }}>\r\n                    Courier Website:\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{` ${form.formData.web_address}`}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </ListItem>\r\n      </List>\r\n    )\r\n  }\r\n\r\n  const renderForm = () => {\r\n    return (\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <Grid container justify=\"center\" spacing={2}>\r\n          <Grid container item xs={11} alignItems=\"start\" justify=\"flex-start\">\r\n            <Typography\r\n              component=\"p\"\r\n              variant=\"body1\"\r\n              style={{ fontWeight: 600 }}\r\n            >\r\n              Add Shipment Details:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"courierName\"\r\n              name=\"courier_name\"\r\n              label=\"Courier Name\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              value={formData.courier_name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"trackingId\"\r\n              name=\"tracking_id\"\r\n              label=\"Tracking Id\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              value={formData.tracking_id}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"webAddress\"\r\n              name=\"web_address\"\r\n              label=\"Web Address\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              value={formData.web_address}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            {form.saving ? (\r\n              <CircularProgress color=\"secondary\" />\r\n            ) : (\r\n              <CustomAlert\r\n                handleProcess={handleSubmit}\r\n                content={\r\n                  <React.Fragment>\r\n                    <p>Save the following shipment details?</p>\r\n                    {renderShipment()}\r\n                  </React.Fragment>\r\n                }\r\n                button=\"SAVE\"\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    )\r\n  }\r\n  const renderDetail = () => {\r\n    if (order.loading === true) {\r\n      return <CircularProgress />\r\n    } else if (order.data !== null) {\r\n      return (\r\n        <React.Fragment>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={12}>\r\n              <List>\r\n                <ListItem>\r\n                  <TableContainer component={Paper}>\r\n                    <Table aria-label=\"order table\">\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Order No:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {` ${order.data.id}`}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Ordered Date:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {` ${new Date(\r\n                              order.data.ordered_date\r\n                            ).toLocaleDateString(\"en-US\", {\r\n                              day: \"numeric\",\r\n                              month: \"short\",\r\n                              year: \"numeric\",\r\n                              hour: \"numeric\",\r\n                              minute: \"numeric\",\r\n                            })}`}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Username:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {` ${order.data.user.first_name} ${order.data.user.last_name}`}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: 500 }}>\r\n                            Status:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {order.data.status}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography\r\n                        style={{ fontWeight: 600 }}\r\n                        variant=\"body1\"\r\n                        component=\"p\"\r\n                      >\r\n                        Items:\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <TableContainer component={Paper}>\r\n                    <Table aria-label=\"items table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Title</TableCell>\r\n                          <TableCell align=\"left\">Config</TableCell>\r\n                          <TableCell align=\"left\">Quantity</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {order.data.items.map((item) => renderItem(item))}\r\n                        <TableRow>\r\n                          <TableCell />\r\n                          <TableCell align=\"left\" style={{ fontWeight: 500 }}>\r\n                            Total Amount:\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{` ${order.data.total} AED`}</TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </ListItem>\r\n              </List>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {form.formData.id !== \"\" && form.formData.id !== null\r\n                ? renderShipment()\r\n                : renderForm()}\r\n            </Grid>\r\n            {order.data.status === \"Dispatched\" ? (\r\n              <Grid item xs={12}>\r\n                {order.loading ? (\r\n                  <CircularProgress color=\"secondary\" />\r\n                ) : (\r\n                  <CustomAlert\r\n                    handleProcess={handleComplete}\r\n                    title=\"Complete Order\"\r\n                    content={<p>Set the order status as complete?</p>}\r\n                    button=\"COMPLETE ORDER\"\r\n                  />\r\n                )}\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Grid item xs={12}>\r\n              <Button\r\n                fullWidth\r\n                onClick={() => setState({ ...state, tab: \"Orders\" })}\r\n                variant=\"contained\"\r\n              >\r\n                Back\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      return <Typography>Error in fetching the data</Typography>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Order Detail</Title>\r\n      {renderDetail()}\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={sent.status}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n          {sent.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={error.status}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {error.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default OrderDetail\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { authStore } from \"../../apis/store\"\r\nimport { orderListURL, orderFilterURL } from \"../../constants\"\r\n\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Title from \"./Title\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  row: {\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  pagination: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  control: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      paddingLeft: theme.spacing(10),\r\n      paddingRight: theme.spacing(10),\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: theme.spacing(1),\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function Orders({ state, setState }) {\r\n  const classes = useStyles()\r\n  const [orders, setOrders] = useState({\r\n    loading: true,\r\n    error: null,\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n    items: [],\r\n    status: \"All\",\r\n  })\r\n  const [page, setPage] = useState(1)\r\n\r\n  const getOrders = (url) => {\r\n    authStore\r\n      .get(url, {\r\n        params: {\r\n          status: orders.status,\r\n          orderding: \"ordered_date\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const count = Math.round(response.data.count / 10)\r\n        setOrders({\r\n          ...orders,\r\n          loading: false,\r\n          items: response.data.results,\r\n          count: count,\r\n          next: response.data.next,\r\n          previous: response.data.previous,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        setOrders({\r\n          ...orders,\r\n          loading: false,\r\n          error: true,\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getAllOrders = () => {\r\n      authStore\r\n        .get(orderListURL)\r\n        .then((response) => {\r\n          const count = Math.round(response.data.count / 10)\r\n          setOrders({\r\n            ...orders,\r\n            loading: false,\r\n            items: response.data.results,\r\n            count: count,\r\n            next: response.data.next,\r\n            previous: response.data.previous,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          setOrders({\r\n            ...orders,\r\n            loading: false,\r\n            error: true,\r\n          })\r\n        })\r\n    }\r\n\r\n    if (orders.status === \"All\") {\r\n      getAllOrders()\r\n    } else {\r\n      getOrders(orderFilterURL)\r\n    }\r\n  }, [orders.status])\r\n\r\n  const handleSelectChange = (e) => {\r\n    setOrders({\r\n      ...orders,\r\n      status: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value > page) {\r\n      setPage(value)\r\n      getOrders(orders.next)\r\n    } else if (value < page) {\r\n      setPage(value)\r\n      getOrders(orders.previous)\r\n    } else {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return (\r\n        <TableRow>\r\n          <TableCell align=\"center\" colSpan={5}>\r\n            <CircularProgress />\r\n          </TableCell>\r\n        </TableRow>\r\n      )\r\n    } else if (\r\n      orders.loading === false &&\r\n      orders.items !== null &&\r\n      orders.items.length === 0\r\n    ) {\r\n      return (\r\n        <TableRow>\r\n          <TableCell align=\"center\" colSpan={5}>\r\n            <Typography color=\"secondary\">No orders</Typography>\r\n          </TableCell>\r\n        </TableRow>\r\n      )\r\n    } else if (\r\n      orders.loading === false &&\r\n      orders.items !== null &&\r\n      orders.items.length > 0\r\n    ) {\r\n      return orders.items.map((order) => {\r\n        const date = new Date(order.ordered_date).toLocaleDateString(\"en-US\", {\r\n          day: \"numeric\",\r\n          month: \"short\",\r\n          year: \"numeric\",\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n        })\r\n        return (\r\n          <TableRow\r\n            key={order.id}\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                orderId: order.id,\r\n                tab: \"OrderDetail\",\r\n              })\r\n            }}\r\n            hover\r\n            className={classes.row}\r\n          >\r\n            <TableCell align=\"left\">{order.id}</TableCell>\r\n            <TableCell align=\"left\">{`${order.user.first_name} ${order.user.last_name}`}</TableCell>\r\n            <TableCell align=\"left\">{date}</TableCell>\r\n            <TableCell align=\"left\">{order.total} $</TableCell>\r\n            <TableCell align=\"left\">{order.status}</TableCell>\r\n          </TableRow>\r\n        )\r\n      })\r\n    } else {\r\n      return (\r\n        <Typography color=\"secondary\">\r\n          There was an error retrieving the data\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <Title>Orders</Title>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={classes.control}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"order-status-label\">Select status: </InputLabel>\r\n              <Select\r\n                labelId=\"order-status-label\"\r\n                id=\"order-status\"\r\n                value={orders.status}\r\n                onChange={handleSelectChange}\r\n              >\r\n                <MenuItem value=\"All\">All</MenuItem>\r\n                <MenuItem value=\"Processing\">Processing</MenuItem>\r\n                <MenuItem value=\"Dispatched\">Dispatched</MenuItem>\r\n                <MenuItem value=\"Completed\">Completed</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"spanning table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Order #</TableCell>\r\n                  <TableCell align=\"left\">Customer</TableCell>\r\n                  <TableCell align=\"left\">Date</TableCell>\r\n                  <TableCell align=\"left\">Amount</TableCell>\r\n                  <TableCell align=\"left\">Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{renderOrders()}</TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {orders.count !== 0 ? (\r\n            <div className={classes.pagination}>\r\n              <Pagination\r\n                count={orders.count}\r\n                shape=\"rounded\"\r\n                onChange={handleChange}\r\n                page={page}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { authStore } from \"../../apis/store\"\r\nimport { messagesURL, messageUnreadURL } from \"../../constants\"\r\n\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport Title from \"./Title\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    color: theme.palette.grey[500],\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  pagination: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}))\r\n\r\nconst Messages = ({ state, setState }) => {\r\n  const classes = useStyles()\r\n\r\n  const [messages, setMessages] = useState({\r\n    loading: true,\r\n    payload: [],\r\n    count: 1,\r\n    next: null,\r\n    previous: null,\r\n    unread: null,\r\n  })\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const fetchMessages = (url) => {\r\n    authStore\r\n      .get(url, {\r\n        params: {\r\n          ordering: \"read\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        authStore\r\n          .get(messageUnreadURL)\r\n          .then((res) => {\r\n            const unread = res.data.unread\r\n            const count = Math.round(response.data.count / 10)\r\n            setMessages({\r\n              ...messages,\r\n              loading: false,\r\n              payload: response.data.results,\r\n              count: count,\r\n              next: response.data.next,\r\n              previous: response.data.previous,\r\n              unread: unread,\r\n            })\r\n          })\r\n          .catch((error) => {\r\n            setMessages({\r\n              ...messages,\r\n              loading: false,\r\n            })\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        setMessages({\r\n          ...messages,\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMessages(messagesURL)\r\n  }, [])\r\n\r\n  const handleChange = (event, value) => {\r\n    if (value > page) {\r\n      setPage(value)\r\n      fetchMessages(messages.next)\r\n    } else if (value < page) {\r\n      setPage(value)\r\n      fetchMessages(messages.previous)\r\n    } else {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  const generateList = () => {\r\n    if (messages.payload && messages.payload.length === 1) {\r\n      const message = messages.payload[0]\r\n      return (\r\n        <React.Fragment>\r\n          <ListItem\r\n            button\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                message: message,\r\n                tab: \"MessageDetail\",\r\n              })\r\n            }}\r\n          >\r\n            <ListItemText\r\n              primary={message.email}\r\n              className={message.read ? classes.listItem : \"\"}\r\n            />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      )\r\n    } else if (messages.payload && messages.payload.length > 1) {\r\n      return messages.payload.map((message) => {\r\n        return (\r\n          <ListItem\r\n            divider\r\n            button\r\n            key={message.id}\r\n            onClick={() => {\r\n              setState({\r\n                ...state,\r\n                tab: \"MessageDetail\",\r\n                message: message,\r\n              })\r\n            }}\r\n          >\r\n            <ListItemText\r\n              primary={message.email}\r\n              className={message.read ? classes.listItem : \"\"}\r\n            />\r\n          </ListItem>\r\n        )\r\n      })\r\n    } else if (messages.loading === true) {\r\n      return <CircularProgress />\r\n    } else {\r\n      return (\r\n        <Typography variant=\"h4\" component=\"p\" color=\"secondary\">\r\n          You don't have any messages\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Messages</Title>\r\n      <div>\r\n        <Typography variant=\"body1\" component=\"p\">\r\n          Unread Messages: {messages.unread ? messages.unread : 0}\r\n        </Typography>\r\n      </div>\r\n      <List>{generateList()}</List>\r\n      {messages.count !== 0 ? (\r\n        <div className={classes.pagination}>\r\n          <Pagination\r\n            count={messages.count}\r\n            shape=\"rounded\"\r\n            onChange={handleChange}\r\n            page={page}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Messages\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { authStore } from '../../apis/store'\r\nimport { maintenanceURL, maintenanceUpdateURL } from '../../constants'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Button from '@material-ui/core/Button'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Title from './Title'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n        width: 300,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nconst Maintenance = () => {\r\n    const classes = useStyles()\r\n    const [state, setState] = useState({\r\n        under_maintenance: false,\r\n        start_time: null,\r\n        end_time: null,\r\n        sending: false,\r\n        sent: false,\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        authStore.get(maintenanceURL)\r\n            .then(response => {\r\n                setState({\r\n                    ...state,\r\n                    ...response.data.results[0]\r\n                })\r\n            })\r\n            .catch(error => error)\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        setState({\r\n            ...state,\r\n            sending: true\r\n        })\r\n        authStore.patch(maintenanceUpdateURL, state)\r\n        .then(response => {\r\n            setState({\r\n                ...response.data,\r\n                sending: false,\r\n                sent: true\r\n            })\r\n        })\r\n        .catch(error => setState({...state, sending: false}))\r\n    } \r\n\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    const handleCheck = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.checked\r\n        })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            sent: false\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>\r\n                Maintenance\r\n            </Title>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={state.sent}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Maintenance notification updated!\"\r\n            >\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Maintenance notification updated!\r\n                </Alert>\r\n            </Snackbar>\r\n            <form onSubmit={onSubmit}>\r\n                <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={state ? state.under_maintenance : false} name=\"under_maintenance\" onChange={handleCheck} inputProps={{ 'aria-label': 'primary checkbox' }} />}\r\n                            label=\"Set to under maintenance?\"\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"start-time\"\r\n                            label=\"Start Time\"\r\n                            name=\"start_time\"\r\n                            onChange={handleChange}\r\n                            type=\"datetime-local\"\r\n                            value={state ? state.start_time ? state.start_time.slice(0, 16) : \"2021-05-25T10:30\" : \"\"}\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"end-time\"\r\n                            label=\"End Time\"\r\n                            type=\"datetime-local\"\r\n                            name=\"end_time\"\r\n                            onChange={handleChange}\r\n                            value={state ? state.end_time ? state.end_time.slice(0, 16) : \"2021-05-25T10:30\" : \"\"}\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            {state.sending ? (<CircularProgress />) : 'Save'}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Maintenance","import React, { useState } from \"react\"\r\n\r\nimport { authStore } from \"../../apis/store\"\r\nimport { discountURL } from \"../../constants\"\r\nimport CustomAlert from \"../Admin/CustomAlert\"\r\n\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport Title from \"./Title\"\r\nimport { Box } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    marginTop: theme.spacing(1),\r\n    width: 300,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst Discount = () => {\r\n  const classes = useStyles()\r\n  const [state, setState] = useState({\r\n    percentage: 0,\r\n    sending: false,\r\n    sent: false,\r\n    error: false,\r\n    message: \"\",\r\n  })\r\n\r\n  const handleSubmit = () => {\r\n    setState({\r\n      ...state,\r\n      sending: true,\r\n    })\r\n    authStore\r\n      .post(discountURL, { discount: state.percentage })\r\n      .then((response) => {\r\n        setState({\r\n          ...state,\r\n          sending: false,\r\n          sent: true,\r\n          message: response.data.message,\r\n        })\r\n      })\r\n      .catch((error) =>\r\n        setState({\r\n          ...state,\r\n          sending: false,\r\n          error: true,\r\n        })\r\n      )\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({\r\n      ...state,\r\n      percentage: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return\r\n    }\r\n\r\n    if (state.sent === true) {\r\n      setState({\r\n        ...state,\r\n        sent: false,\r\n      })\r\n    } else if (state.error === true) {\r\n      setState({\r\n        ...state,\r\n        error: false,\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        error: false,\r\n        sent: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Discount</Title>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={state.sent}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message={state.message}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {state.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={state.error}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Failed to apply the discount\"\r\n      >\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          Failed to apply the discount\r\n        </Alert>\r\n      </Snackbar>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"discount\"\r\n            label=\"Discount Percentage\"\r\n            name=\"discount\"\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n            value={state.percentage}\r\n            className={classes.textField}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box p={4}>\r\n            <CustomAlert\r\n              button={state.sending ? <CircularProgress /> : \"Apply Discount\"}\r\n              title=\"Apply Discount\"\r\n              content={`Are you sure you want to apply ${state.percentage}% discount to all the products?`}\r\n              handleProcess={handleSubmit}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Discount\r\n","import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport clsx from \"clsx\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport Drawer from \"@material-ui/core/Drawer\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"\r\nimport Home from \"@material-ui/icons/Home\"\r\n\r\nimport Chart from \"./Chart\"\r\nimport Deposits from \"./Deposits\"\r\nimport OrderDetail from \"./OrderDetail\"\r\nimport Orders from \"./Orders\"\r\nimport ListItems from \"./ListItems\"\r\nimport Messages from \"./Messages\"\r\nimport MessageDetail from \"./MessageDetail\"\r\nimport Maintenance from \"./Maintenance\"\r\nimport Discount from \"./Discount\"\r\nimport Copyright from \"../../components/Copyright\"\r\n\r\nimport ScrollToTopOnMount from \"../../components/ScrollToTopOnMount\"\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  detail: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  list: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  div: {\r\n    position: \"relative\",\r\n  },\r\n  read: {\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n}))\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles()\r\n  const [state, setState] = useState({\r\n    tab: \"Dashboard\",\r\n    open: false,\r\n    orderId: null,\r\n    message: null,\r\n  })\r\n\r\n  const handleDrawerOpen = () => {\r\n    setState({ ...state, open: true })\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setState({ ...state, open: false })\r\n  }\r\n\r\n  const renderTab = () => {\r\n    if (state.tab === \"Dashboard\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={fixedHeightPaper}>\r\n            <Chart />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"Orders\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Orders state={state} setState={setState} />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"Deposits\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={fixedHeightPaper}>\r\n            <Deposits />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"Messages\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Messages state={state} setState={setState} />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"MessageDetail\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.detail}>\r\n            <MessageDetail\r\n              message={state.message}\r\n              state={state}\r\n              setState={setState}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"Maintenance\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Maintenance />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else if (state.tab === \"Discount\") {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Discount />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    } else {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.detail}>\r\n            <OrderDetail id={state.orderId} state={state} setState={setState} />\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    }\r\n  }\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <ScrollToTopOnMount />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, state.open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              state.open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\" component={Link} to=\"/\">\r\n            <Home style={{ color: \"white\" }} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(\r\n            classes.drawerPaper,\r\n            !state.open && classes.drawerPaperClose\r\n          ),\r\n        }}\r\n        open={state.open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItems state={state} setState={setState} />\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {renderTab()}\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useButtonStyles = makeStyles((theme) => ({\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useButtonStyles } from \"./CheckoutStyles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport baseURL from \"../../setting\";\r\nimport axios from \"axios\";\r\n\r\nconst MyTextField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  return (\r\n    <TextField\r\n      {...field}\r\n      label={label}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      fullWidth\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  firstName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\"),\r\n  lastName: Yup.string()\r\n    .required(\"Required\")\r\n    .max(100, \"Can't be more than 100 characters\"),\r\n  phoneNumber: Yup.string()\r\n    .required(\"Required\")\r\n    .max(20, \"Can't be more than 20 numbers\"),\r\n  deliveryAddress: Yup.string()\r\n    .required(\"Required\")\r\n    .max(200, \"Can't be more than 200 characters\"),\r\n  googleLocation: Yup.string()\r\n    .required(\"Required\")\r\n    .max(200, \"Can't be more than 200 characters\"),\r\n});\r\nconst getPrice = (quantity, price) => {\r\n  return quantity * price;\r\n};\r\n\r\nexport default function AddressForm() {\r\n  const [cart, setCart] = useState([]);\r\n  const [status, setStatus] = useState({\r\n    loading: false,\r\n  });\r\n  const buttonClasses = useButtonStyles();\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  let total = 0;\r\n  cart.forEach((item) => (total += getPrice(item.quantity, item.price)));\r\n\r\n  useEffect(() => {\r\n    const getCart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    setCart(getCart);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (values) => {\r\n    setStatus({ loading: true });\r\n    const {\r\n      deliveryAddress,\r\n      firstName,\r\n      googleLocation,\r\n      lastName,\r\n      phoneNumber,\r\n    } = values;\r\n\r\n    axios\r\n      .post(\r\n        `${baseURL}/api/v1/paypal`,\r\n        {\r\n          deliveryAddress: deliveryAddress,\r\n          firstName: firstName,\r\n          googleLocation: googleLocation,\r\n          lastName: lastName,\r\n          phoneNumber: phoneNumber,\r\n          total: total,\r\n          arrayOfCart: cart,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then(async (result) => {\r\n        await localStorage.removeItem(\"cart\");\r\n        const json = await result.data.link;\r\n        window.location.assign(json);\r\n        setStatus({ loading: false });\r\n      })\r\n      .catch((err) => {\r\n        setStatus({ loading: false });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List disablePadding>\r\n        {cart.map((product) => (\r\n          <ListItem key={product.id}>\r\n            <ListItemText\r\n              primary={<React.Fragment>{product.title}</React.Fragment>}\r\n            />\r\n            <Typography variant=\"body2\">\r\n              {product.quantity} x {product.price} $\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem>\r\n          <ListItemText\r\n            primary={<Typography variant=\"subtitle1\">Total</Typography>}\r\n          />\r\n          <Typography variant=\"subtitle1\"> {total} $</Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Address\r\n      </Typography>\r\n      <Formik\r\n        enableReinitialize\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n        validateOnChange={true}\r\n        initialValues={{\r\n          firstName: token.firstName,\r\n          lastName: token.lastName,\r\n          phoneNumber: token.phoneNumber,\r\n          deliveryAddress: token.address,\r\n          googleLocation: \"\",\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <MyTextField name=\"firstName\" label=\"First name\" />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <MyTextField name=\"lastName\" label=\"Last name\" fullWidth />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MyTextField\r\n                  name=\"phoneNumber\"\r\n                  label=\"Phone Number\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MyTextField\r\n                  required\r\n                  name=\"deliveryAddress\"\r\n                  label=\"Delivery Address\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MyTextField\r\n                  name=\"googleLocation\"\r\n                  label=\"Google Pin Location URL\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div className={buttonClasses.buttons}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className={buttonClasses.button}\r\n                  variant=\"contained\"\r\n                  disabled={true}\r\n                  // disabled={status.loading}\r\n                  startIcon={\r\n                    <Avatar\r\n                      src={\r\n                        \"https://cdn.dribbble.com/users/1525393/screenshots/6448182/comp_3.gif\"\r\n                      }\r\n                    />\r\n                  }\r\n                >\r\n                  {status.loading ? (\r\n                    <CircularProgress color=\"secondary\" />\r\n                  ) : (\r\n                    \"checkout\"\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport default function Address() {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <AddressForm />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Address from \"./Address\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const [user] = useState(null);\r\n  const [options] = useState(null);\r\n  const [state, setState] = useState({\r\n    error: null,\r\n    loading: false,\r\n    useBilling: true,\r\n    activeStep: 0,\r\n    order: null,\r\n  });\r\n  const [checkoutData, setCheckoutData] = useState({\r\n    selectedBillingAddress: null,\r\n    selectedShippingAddress: null,\r\n    shippingDetail: null,\r\n    billingDetail: null,\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <React.Fragment>\r\n            <Address\r\n              user={user}\r\n              options={options}\r\n              checkoutState={state}\r\n              setCheckoutState={setState}\r\n              checkoutData={checkoutData}\r\n              setCheckoutData={setCheckoutData}\r\n            />\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport { updateUserURL } from \"../../constants\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Edit = ({ state, setState }) => {\r\n  const classes = useStyles();\r\n  const [details, setDetails] = useState({\r\n    saving: false,\r\n    success: null,\r\n    error: null,\r\n    formData: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      phoneNumber: \"\",\r\n      address: \"\",\r\n    },\r\n  });\r\n\r\n  const { formData } = details;\r\n\r\n  useEffect(() => {\r\n    setDetails({\r\n      ...details,\r\n      formData: {\r\n        id: state.user.id || \"\",\r\n        firstName: state.user.firstName || \"\",\r\n        lastName: state.user.lastName || \"\",\r\n        phoneNumber: state.user.phoneNumber || \"\",\r\n        address: state.user.address || \"\",\r\n      },\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setDetails({\r\n      ...details,\r\n      saving: true,\r\n    });\r\n    authStore\r\n      .post(\r\n        updateUserURL,\r\n        {\r\n          firstName: details.formData.firstName,\r\n          lastName: details.formData.lastName,\r\n          phoneNumber: details.formData.phoneNumber,\r\n          address: details.formData.address,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setState({\r\n          option: \"account\",\r\n          user: { ...response.data },\r\n        });\r\n        setDetails({\r\n          ...details,\r\n          success: true,\r\n          saving: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setDetails({\r\n          ...details,\r\n          success: false,\r\n          saving: false,\r\n          error: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { formData } = details;\r\n    const updatedFormData = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    setDetails({\r\n      ...details,\r\n      formData: updatedFormData,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {details.success === true ? (\r\n        <Typography variant=\"h4\" color=\"primary\">\r\n          Your information has been successfully updated!\r\n        </Typography>\r\n      ) : details.success === false ? (\r\n        <Typography variant=\"h4\" color=\"secondary\">\r\n          There was an error in updating the data\r\n        </Typography>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <form className={classes.form} onSubmit={(e) => handleSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              value={formData.firstName}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              value={formData.lastName}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              type=\"number\"\r\n              id=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              label=\"Phone Number\"\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              value={formData.phoneNumber}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"address\"\r\n              name=\"address\"\r\n              label=\"Address\"\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              value={formData.address}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          {details.saving === true ? (\r\n            <CircularProgress color=\"primary\" />\r\n          ) : (\r\n            \"Save\"\r\n          )}\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst Account = ({ state }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Box fontWeight=\"fontWeightMedium\">Name</Box>\r\n              </TableCell>\r\n              <TableCell>\r\n                {`${state.user.firstName} ${state.user.lastName}`}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Box fontWeight=\"fontWeightMedium\">Email</Box>\r\n              </TableCell>\r\n              <TableCell>{state.user.email}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Box fontWeight=\"fontWeightMedium\">Phone Number</Box>\r\n              </TableCell>\r\n              <TableCell>+92 {state.user.phoneNumber}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Box fontWeight=\"fontWeightMedium\">Address</Box>\r\n              </TableCell>\r\n              <TableCell>{state.user.address}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport { orderUserListURL } from \"../../constants\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport baseURL from \"../../setting\";\r\nimport axios from \"axios\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState({\r\n    error: null,\r\n    loading: true,\r\n    payload: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    authStore\r\n      .get(orderUserListURL, {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        setOrders({ ...orders, payload: response.data, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        setOrders({ ...orders, error: error.response, loading: false });\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const changeStatus = (e) => {\r\n    const elementId = e.target.parentElement.parentElement.parentElement.id;\r\n    axios\r\n      .post(\r\n        `${baseURL}/api/v1/changestatus`,\r\n        {\r\n          orderId: elementId,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((result) => {\r\n        if (result) {\r\n          e.target.innerText = result.data;\r\n        }\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return <CircularProgress />;\r\n    } else if (orders.error && orders.error.status === 500) {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          There was an error loading the data: ( &nbsp; {orders.error.data}{\" \"}\r\n        </Typography>\r\n      );\r\n    } else if (orders.payload !== null && orders.payload.length > 0) {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell> Product </TableCell>\r\n                <TableCell align=\"left\"> Quantity </TableCell>\r\n                <TableCell align=\"left\"> Total </TableCell>\r\n                <TableCell align=\"left\"> Status </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.payload.map((item, i) => (\r\n                <TableRow\r\n                  key={orders.payload[i]._id}\r\n                  id={orders.payload[i]._id}\r\n                >\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart.map((element) => {\r\n                      return `${element.title}, `;\r\n                    })}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart.map((element) => {\r\n                      return `${element.quantity}, `;\r\n                    })}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{item.total} $</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={changeStatus}\r\n                    >\r\n                      {item.status}\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    } else {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          You haven't ordered anything yet.\r\n        </Typography>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        {renderOrders()}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport { changePasswordURL } from \"../../constants\";\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { showError } from \"../../utils\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Password = () => {\r\n  const classes = useStyles();\r\n\r\n  const [password, setPassword] = useState({\r\n    saving: false,\r\n    success: null,\r\n    error: null,\r\n    message: null,\r\n  });\r\n\r\n  const handleSubmit = (values, { resetForm, setSubmitting }) => {\r\n    const { oldPassword, newPassword1, newPassword2 } = values;\r\n    setPassword({\r\n      ...password,\r\n      saving: true,\r\n    });\r\n    authStore\r\n      .post(\r\n        changePasswordURL,\r\n        {\r\n          old_password: oldPassword,\r\n          new_password1: newPassword1,\r\n          new_password2: newPassword2,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPassword({\r\n          saving: false,\r\n          success: true,\r\n        });\r\n        setSubmitting(false);\r\n        resetForm();\r\n      })\r\n      .catch((error) => {\r\n        setPassword({\r\n          ...password,\r\n          saving: false,\r\n          success: false,\r\n          error: true,\r\n          message: error,\r\n        });\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    if (password.success === true) {\r\n      setPassword({\r\n        ...password,\r\n        success: false,\r\n      });\r\n    } else {\r\n      setPassword({\r\n        ...password,\r\n        error: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const MyTextField = ({ label, autoFocus, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n    return (\r\n      <TextField\r\n        {...field}\r\n        label={label}\r\n        autoFocus={autoFocus}\r\n        helperText={errorText}\r\n        error={!!errorText}\r\n        fullWidth\r\n        type=\"password\"\r\n        required\r\n      />\r\n    );\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    oldPassword: Yup.string()\r\n      .min(8, \"Must be more than 8 characters\")\r\n      .required(\"Required\")\r\n      .matches(\r\n        /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/,\r\n        \"Must have at least one number, one lowercase and one uppercase letter\"\r\n      ),\r\n    newPassword1: Yup.string()\r\n      .min(8, \"Must be more than 8 characters\")\r\n      .required(\"Required\")\r\n      .matches(\r\n        /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])/,\r\n        \"Must have at least one number, one lowercase and one uppercase letter\"\r\n      ),\r\n    newPassword2: Yup.string().oneOf(\r\n      [Yup.ref(\"newPassword1\"), null],\r\n      \"Passwords must match\"\r\n    ),\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={password.success}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n          Password changed successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={password.error}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {showError(password.message)}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Formik\r\n        onSubmit={handleSubmit}\r\n        validateOnChange={true}\r\n        validationSchema={validationSchema}\r\n        initialValues={{\r\n          oldPassword: \"\",\r\n          newPassword1: \"\",\r\n          newPassword2: \"\",\r\n        }}\r\n      >\r\n        {({ values, errors, isSubmitting }) => (\r\n          <Form className={classes.form}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <MyTextField name=\"oldPassword\" label=\"Old Password\" required />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MyTextField\r\n                  name=\"newPassword1\"\r\n                  label=\"New Password\"\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MyTextField\r\n                  name=\"newPassword2\"\r\n                  label=\"New Password (again)\"\r\n                  required\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={isSubmitting}\r\n            >\r\n              {password.saving ? <CircularProgress color=\"primary\" /> : \"Save\"}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    color: \"black\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    linkText: {\r\n      textDecoration: \"none\",\r\n      textTransform: \"uppercase\",\r\n      color: \"black\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProfileList = ({ state, setState }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem\r\n        button\r\n        onClick={() =>\r\n          setState({ ...state, option: \"account\", display: \"Account Details\" })\r\n        }\r\n      >\r\n        <ListItemText className={classes.linkText} primary=\"Account Details\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        onClick={() =>\r\n          setState({ ...state, option: \"orders\", display: \"Orders\" })\r\n        }\r\n      >\r\n        <ListItemText className={classes.linkText} primary=\"Orders\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        onClick={() =>\r\n          setState({ ...state, option: \"edit\", display: \"Edit Details\" })\r\n        }\r\n      >\r\n        <ListItemText className={classes.linkText} primary=\"Edit Details\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        onClick={() =>\r\n          setState({ ...state, option: \"password\", display: \"Change Password\" })\r\n        }\r\n      >\r\n        <ListItemText className={classes.linkText} primary=\"Change Password\" />\r\n      </ListItem>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Edit from \"./Edit\";\r\nimport Account from \"./Account\";\r\nimport Orders from \"./Orders\";\r\nimport Password from \"./Password\";\r\nimport ProfileList from \"./ProfileList\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  div: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    width: \"100%\",\r\n  },\r\n  list: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UserProfile() {\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const [state, setState] = useState({\r\n    option: \"loading\",\r\n    display: \"Loading\",\r\n    error: null,\r\n    user: null,\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      option: \"account\",\r\n      display: \"Account Details\",\r\n      user: token,\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const renderComponent = () => {\r\n    switch (state.option) {\r\n      case \"account\":\r\n        return (\r\n          <React.Fragment>\r\n            <Account state={state} />\r\n          </React.Fragment>\r\n        );\r\n      case \"orders\":\r\n        return (\r\n          <React.Fragment>\r\n            <Orders />\r\n          </React.Fragment>\r\n        );\r\n      case \"edit\":\r\n        return (\r\n          <React.Fragment>\r\n            <Edit state={state} setState={setState} />\r\n          </React.Fragment>\r\n        );\r\n      case \"password\":\r\n        return (\r\n          <React.Fragment>\r\n            <Password state={state} />\r\n          </React.Fragment>\r\n        );\r\n      case \"loading\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant=\"body1\">Loading</Typography>\r\n            <CircularProgress color=\"primary\" />\r\n          </React.Fragment>\r\n        );\r\n      case \"error\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography component=\"p\" variant=\"body1\" color=\"error\">\r\n              An error occurred while fetching user details!\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        throw new Error(\"Unknown address\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ minHeight: \"100vh\", backgroundColor: \"white\" }}>\r\n        <CssBaseline />\r\n        <Grid container>\r\n          <Grid container item sm={12} justify=\"flex-start\">\r\n            <Box component=\"div\" mb={5} textAlign=\"left\">\r\n              <Typography variant=\"h2\" component=\"h2\">\r\n                User Profile / {state.display}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item sm={12} md={4}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-label=\"account action list\"\r\n              disablePadding\r\n              className={classes.list}\r\n            >\r\n              <ProfileList state={state} setState={setState} />\r\n            </List>\r\n          </Grid>\r\n          <Grid container item sm={12} md={8} justify=\"center\">\r\n            <Box component=\"div\" className={classes.div}>\r\n              {renderComponent()}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Cart from \"./Cart\";\r\n\r\nconst CartView = () => {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Box component=\"div\" mb={4}>\r\n          <Typography variant=\"h2\" component=\"h2\">\r\n            Cart\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Cart />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CartView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { store } from \"../../apis/store\";\r\nimport { specialURL } from \"../../constants\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    marginTop: theme.spacing(2),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: theme.spacing(2),\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  card: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst SpecificList = ({ label }) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    loading: true,\r\n    products: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getProducts = () => {\r\n      store\r\n        .get(specialURL, {\r\n          params: {\r\n            label: label,\r\n          },\r\n          withCredentials: true,\r\n        })\r\n        .then((response) => {\r\n          setState({\r\n            loading: false,\r\n            products: response.data,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setState({\r\n            ...state,\r\n            loading: false,\r\n          });\r\n        });\r\n    };\r\n    getProducts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const generateCards = () => {\r\n    return state.products.map((product) => {\r\n      return (\r\n        <Grid\r\n          key={product._id}\r\n          item\r\n          align=\"center\"\r\n          xs={12}\r\n          sm={6}\r\n          md={4}\r\n          lg={3}\r\n          className={classes.card}\r\n        >\r\n          <ProductCard product={product} />\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {state.products && state.products.length > 0 ? (\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          spacing={2}\r\n          className={classes.list}\r\n        >\r\n          {state.loading ? <CircularProgress /> : generateCards()}\r\n        </Grid>\r\n      ) : state.loading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Typography variant=\"h6\" component=\"p\">\r\n          No products available\r\n        </Typography>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SpecificList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { store } from \"../apis/store\";\r\nimport { headersURL } from \"../constants\";\r\nimport Slider from \"infinite-react-carousel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SpecificList from \"../components/Product/SpecificList\";\r\nimport ScrollToTopOnMount from \"../components/ScrollToTopOnMount\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5),\r\n    textAlign: \"center\",\r\n    minHeight: \"500px\",\r\n  },\r\n  image: {\r\n    maxWidth: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    top: \"80%\",\r\n    left: \"47%\",\r\n  },\r\n  title: {\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Item = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <img\r\n        width=\"1600 px\"\r\n        height=\"400 px\"\r\n        alt=\"Product Header\"\r\n        src={props.item.imageURL}\r\n        className={classes.image}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const [headers, setHeaders] = useState({\r\n    loading: false,\r\n    error: false,\r\n    payload: [],\r\n  });\r\n  useEffect(() => {\r\n    const getHeaders = () => {\r\n      setHeaders({\r\n        ...headers,\r\n        loading: true,\r\n      });\r\n      store\r\n        .get(headersURL, {\r\n          withCredentials: true,\r\n        })\r\n        .then((response) => {\r\n          setHeaders({\r\n            ...headers,\r\n            loading: false,\r\n            payload: response.data,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setHeaders({\r\n            ...headers,\r\n            loading: false,\r\n            error: true,\r\n          });\r\n        });\r\n    };\r\n    getHeaders();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      <Container maxWidth=\"lg\" style={{ backgroundColor: \"white\" }}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            {headers.loading ? (\r\n              <CircularProgress />\r\n            ) : headers.payload && headers.payload.length > 0 ? (\r\n              <Slider autoplay={true} autoplaySpeed={8500} arrows={false} dots>\r\n                {headers.payload.map((item, i) => (\r\n                  <Item key={i} item={item} />\r\n                ))}\r\n              </Slider>\r\n            ) : (\r\n              \"No images Available\"\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.title}>\r\n            <Typography variant=\"h2\" component=\"h2\">\r\n              Featured Products\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <SpecificList label=\"Featured\" />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.title}>\r\n            <Typography variant=\"h2\" component=\"h2\">\r\n              New Products\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <SpecificList label=\"New\" />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { store } from \"../apis/store\";\r\nimport { contentURL } from \"../constants\";\r\nimport ScrollToTopOnMount from \"../components/ScrollToTopOnMount\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainDiv: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n}));\r\n\r\nconst Terms = (props) => {\r\n  const classes = useStyles();\r\n  const content = props.match.params.content;\r\n\r\n  const [terms, setTerms] = useState({\r\n    loading: true,\r\n    data: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    store\r\n      .get(contentURL(content))\r\n      .then((response) => {\r\n        setTerms({\r\n          loading: false,\r\n          data: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setTerms({\r\n          loading: false,\r\n        });\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const renderTerms = () => {\r\n    if (terms.loading === true) {\r\n      return <CircularProgress />;\r\n    } else {\r\n      return (\r\n        <Container style={{ backgroundColor: \"white\" }}>\r\n          <div className={classes.mainDiv}>\r\n            <ReactMarkdown children={terms.data ? terms.data.content : \"\"} />\r\n          </div>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ScrollToTopOnMount />\r\n      {renderTerms()}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Terms;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"green\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"green\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"red\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"yellow\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"green\",\r\n      },\r\n    },\r\n  },\r\n  input: {\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"white\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst EmailForm = () => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({\r\n    sending: false,\r\n    sent: false,\r\n    error: null,\r\n    formData: {\r\n      email: null,\r\n      content: null,\r\n    },\r\n  });\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setData({\r\n      ...data,\r\n      sending: true,\r\n    });\r\n    setData({\r\n      ...data,\r\n      sending: false,\r\n      sent: true,\r\n    });\r\n    e.target.reset();\r\n    // store\r\n    //   .post(messageCreateURL, data.formData)\r\n    //   .then((response) => {\r\n    //     setData({\r\n    //       ...data,\r\n    //       sending: false,\r\n    //       sent: true,\r\n    //     });\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     setData({\r\n    //       ...data,\r\n    //       sending: false,\r\n    //       error: error,\r\n    //     });\r\n    //   });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { formData } = data;\r\n    const updatedFormData = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    setData({\r\n      ...data,\r\n      formData: updatedFormData,\r\n    });\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setData({\r\n      ...data,\r\n      sent: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={data.sent}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Email sent!\"\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Message Sent!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <CssTextField\r\n              required\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ className: classes.input }}\r\n              InputLabelProps={{ className: classes.input }}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <CssTextField\r\n              required\r\n              id=\"content\"\r\n              name=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              InputProps={{ className: classes.input }}\r\n              InputLabelProps={{ className: classes.input }}\r\n              fullWidth\r\n              multiline\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n              {data.sending ? <CircularProgress /> : \"Send\"}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EmailForm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport Copyright from \"../Copyright\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: \"white\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  item: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.footer}>\r\n        <Container maxWidth=\"lg\">\r\n          <div style={{ paddingTop: 20 }}>\r\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\r\n              <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                <List dense>\r\n                  <ListItem>\r\n                    <Typography variant=\"h5\" component=\"h4\">\r\n                      Links\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/team\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Our Team\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/about\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"About Al-amal\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/terms\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Terms of Service\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/cookies\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Cookie Policy\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/privacy\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Privacy Policy\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/page/license\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"License Details\" />\r\n                  </ListItem>\r\n                </List>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={2} lg={3}>\r\n                <List dense>\r\n                  <ListItem>\r\n                    <Typography variant=\"h5\" component=\"h4\">\r\n                      Products\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/products/Laptop\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Laptops\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    component={Link}\r\n                    to=\"/products/Accessory\"\r\n                    className={classes.linkText}\r\n                  >\r\n                    <ListItemText primary=\"Accessories\" />\r\n                  </ListItem>\r\n                </List>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <List dense>\r\n                  <ListItem>\r\n                    <Typography variant=\"h5\" component=\"h4\">\r\n                      Contact Us\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemIcon>\r\n                      <PhoneIcon style={{ color: \"white\" }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"+971 65 340509\" />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemIcon>\r\n                      <WhatsAppIcon style={{ color: \"white\" }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"+971 55 443 5313\" />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemIcon>\r\n                      <RoomIcon style={{ color: \"white\" }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"PO Box 60501\" />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemIcon>\r\n                      <EmailIcon style={{ color: \"white\" }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"info@alamalcomputers.com\" />\r\n                  </ListItem>\r\n                </List>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                <List dense>\r\n                  <ListItem>\r\n                    <Typography variant=\"h5\" component=\"h4\">\r\n                      Email Us\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <MessageForm />\r\n                  </ListItem>\r\n                </List>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Copyright />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nexport default function LogoutAlertDialog({ handleLogout }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (e) => {\r\n    e.stopPropagation();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleLogoutClose = (e) => {\r\n    handleLogout();\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    e.stopPropagation();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem button onClick={handleClickOpen}>\r\n        <ListItemText primary=\"LOGOUT\" />\r\n      </ListItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Logout\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to logout?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleLogoutClose} color=\"primary\" autoFocus>\r\n            Logout\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/auth\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport LogoutAlertDialog from \"../LogoutAlertDialog\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { clearCart } from \"../../store/actions/cart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navDisplayFlex: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    color: \"white\",\r\n  },\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    navDisplayFlex: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavList = ({ cart }) => {\r\n  const dispatch = useDispatch();\r\n  const status = useSelector((state) => state.auth);\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(clearCart());\r\n    dispatch(logout(window.location.pathname));\r\n  };\r\n\r\n  const handleLogoutClick = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const signedOut = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Hidden mdUp>\r\n          <Link to=\"/\" className={classes.linkText}>\r\n            <ListItem button>\r\n              <ListItemText primary=\"Home\" />\r\n            </ListItem>\r\n          </Link>\r\n        </Hidden>\r\n        <Link to=\"/products/Laptop\" className={classes.linkText}>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Laptops\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/products/Accessory\" className={classes.linkText}>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Accessories\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/signin\" className={classes.linkText}>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Sign In\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Hidden mdUp>\r\n          <Link to=\"/signup\" className={classes.linkText}>\r\n            <ListItem button>\r\n              <ListItemText primary=\"Sign Up\" />\r\n            </ListItem>\r\n          </Link>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Link to=\"/cart\" className={classes.linkText}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <Badge\r\n                  badgeContent={cart ? cart.length : null}\r\n                  color=\"secondary\"\r\n                >\r\n                  <ShoppingCartOutlinedIcon style={{ color: \"white\" }} />\r\n                </Badge>\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Cart\" />\r\n            </ListItem>\r\n          </Link>\r\n        </Hidden>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const signedIn = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Hidden mdUp>\r\n          <ListItem button component={Link} to=\"/\" className={classes.linkText}>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n        </Hidden>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to=\"/products/Laptop\"\r\n          className={classes.linkText}\r\n        >\r\n          <ListItemText primary=\"Laptops\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to=\"/products/Accessory\"\r\n          className={classes.linkText}\r\n        >\r\n          <ListItemText primary=\"Accessories\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to=\"/account\"\r\n          className={classes.linkText}\r\n        >\r\n          <ListItemText primary={status?.token?.firstName.substr(0, 8)} />\r\n        </ListItem>\r\n        {token?.seller && (\r\n          <ListItem\r\n            button\r\n            component={Link}\r\n            to=\"/seller\"\r\n            className={classes.linkText}\r\n          >\r\n            <ListItemText primary=\"Seller\" />\r\n          </ListItem>\r\n        )}\r\n        <LogoutAlertDialog\r\n          handleLogout={handleLogout}\r\n          onClick={handleLogoutClick}\r\n        />\r\n        <Hidden mdDown>\r\n          <ListItem\r\n            button\r\n            component={Link}\r\n            to=\"/cart\"\r\n            className={classes.linkText}\r\n          >\r\n            <ListItemIcon>\r\n              <Badge badgeContent={cart ? cart.length : null} color=\"secondary\">\r\n                <ShoppingCartOutlinedIcon style={{ color: \"white\" }} />\r\n              </Badge>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Cart\" />\r\n          </ListItem>\r\n        </Hidden>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"main navigation\"\r\n        className={classes.navDisplayFlex}\r\n      >\r\n        {status?.token ? signedIn() : signedOut()}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { searchURL } from \"../../constants\";\r\nimport { store } from \"../../apis/store\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  navDisplayFlex: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n    zIndex: 100,\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n    results: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    result: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    resultContent: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Search = ({ setState, state, anchor }) => {\r\n  const classes = useStyles();\r\n\r\n  const [result, setResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [term, setTerm] = useState(\"\");\r\n  const [resultStyle, setResultStyle] = useState({\r\n    position: \"absolute\",\r\n    display: \"none\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      if (term) {\r\n        setLoading(true);\r\n        store\r\n          .get(searchURL, {\r\n            params: {\r\n              search: term,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            const results = response.data;\r\n            if (results.length > 0) {\r\n              setResult(results);\r\n            } else {\r\n              setResult(null);\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            setResult(null);\r\n          });\r\n      } else {\r\n        setLoading(false);\r\n        setResult([]);\r\n      }\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [term]);\r\n\r\n  const renderListItem = (item) => {\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem\r\n          component={Link}\r\n          to={`/product/${item._id}/`}\r\n          className={classes.item}\r\n          button\r\n        >\r\n          <div className={classes.result}>\r\n            <img src={item.imageURL1} height=\"32px\" alt=\"search result\" />\r\n            <div style={{ display: \"inline-block\", paddingLeft: \"10px\" }}>\r\n              <div className={classes.resultContent}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"p\"\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  {item.title}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  display=\"block\"\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  Price:{\" \"}\r\n                  {item?.discount_price ? item.discount_price : item.price} $\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ListItem>\r\n        <div>\r\n          <hr\r\n            style={{\r\n              borderTop: \"1px solid black\",\r\n              padding: 0,\r\n              marginTop: \"2px\",\r\n            }}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const renderResults = () => {\r\n    if (result !== null) {\r\n      if (result.length > 1) {\r\n        return (\r\n          <List className={classes.root}>\r\n            {result?.map((item) => {\r\n              return (\r\n                <React.Fragment key={item._id}>\r\n                  {renderListItem(item)}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </List>\r\n        );\r\n      } else if (result.length !== 0) {\r\n        return (\r\n          <List className={classes.root}>{renderListItem(result[0])}</List>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <List className={classes.root}>\r\n          <ListItem>\r\n            {loading ? (\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            ) : (\r\n              <ListItemText\r\n                primary={\r\n                  <Typography\r\n                    component=\"span\"\r\n                    varaint=\"body2\"\r\n                    className={classes.inline}\r\n                    style={{ color: \"black\" }}\r\n                  >\r\n                    No products found\r\n                  </Typography>\r\n                }\r\n              />\r\n            )}\r\n          </ListItem>\r\n        </List>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setTimeout(() => {\r\n      setResultStyle({\r\n        ...resultStyle,\r\n        display: \"none\",\r\n      });\r\n      if (setState) {\r\n        setState({ ...state, [anchor]: false });\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search…\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={(e) => setTerm(e.target.value)}\r\n        onFocus={() =>\r\n          setResultStyle({\r\n            ...resultStyle,\r\n            display: \"block\",\r\n          })\r\n        }\r\n        onBlur={handleBlur}\r\n        onClick={(e) => e.stopPropagation()}\r\n      />\r\n      <div\r\n        className={classes.results}\r\n        style={{\r\n          position: resultStyle.position,\r\n          display: resultStyle.display,\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {renderResults()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport NavList from \"./NavList\";\r\nimport Search from \"./Search\";\r\nimport Menu from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  paper: {\r\n    background: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  innerDiv: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    textTransform: \"uppercase\",\r\n    padding: theme.spacing(1),\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  searchDiv: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SideDrawer = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({ left: false });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const sideDrawerList = (anchor) => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n    >\r\n      <Link\r\n        to=\"/\"\r\n        style={{\r\n          textDecoration: \"none\",\r\n        }}\r\n      >\r\n        <div className={classes.innerDiv}>\r\n          <Typography variant=\"h6\" component=\"p\" color=\"secondary\">\r\n            Alamal Computers\r\n          </Typography>\r\n        </div>\r\n      </Link>\r\n      <div className={classes.searchDiv}>\r\n        <Search setState={setState} state={state} anchor={anchor} />\r\n      </div>\r\n      <NavList />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton\r\n        edge=\"start\"\r\n        aria-label=\"menu\"\r\n        onClick={toggleDrawer(\"left\", true)}\r\n      >\r\n        <Menu fontSize=\"large\" style={{ color: \"white\" }} />\r\n      </IconButton>\r\n      <Drawer\r\n        classes={{ paper: classes.paper }}\r\n        className={classes.drawer}\r\n        anchor=\"left\"\r\n        open={state.left}\r\n        onClose={toggleDrawer(\"left\", false)}\r\n      >\r\n        {sideDrawerList(\"left\")}\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","export default __webpack_public_path__ + \"static/media/logo.4f3e972f.png\";","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCart } from \"../../cartLocal\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport NavList from \"./NavList\";\r\nimport Search from \"./Search\";\r\nimport weblogo from \"../../logo.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navDisplayFlex: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(1),\r\n    paddingLeft: \"20px\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  logo: {\r\n    maxHeight: 60,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      maxHeight: 50,\r\n    },\r\n  },\r\n  logoButton: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: 0,\r\n      margin: 0,\r\n    },\r\n  },\r\n  div: {\r\n    color: \"#E5E5E5\",\r\n    textTransform: \"none\",\r\n  },\r\n  first: {\r\n    fontSize: \"0.90rem\",\r\n  },\r\n  second: {\r\n    fontSize: \"0.50rem\",\r\n  },\r\n}));\r\n\r\nconst Nav = () => {\r\n  const classes = useStyles();\r\n  const token = localStorage.getItem(\"token\");\r\n  let cart = useSelector((state) =>\r\n    state.cart && state.cart.shoppingCart ? state.cart.shoppingCart.items : null\r\n  );\r\n  // Only for updating upon fetch cart\r\n  let updateCart = useSelector((state) => state.cart);\r\n  if (!token) {\r\n    cart = getCart();\r\n  }\r\n\r\n  return (\r\n    <div className=\"NavBar\" style={{ marginBottom: \"100px\" }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar className={classes.navDisplayFlex}>\r\n          <Link to=\"/\" className={classes.linkText}>\r\n            <Box className={classes.box} component=\"div\">\r\n              <img className={classes.logo} alt=\"Site logo\" src={weblogo} />\r\n              <div className={classes.div}>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color=\"secondary\"\r\n                  className={classes.first}\r\n                >\r\n                  ALAMAL COMPUTERS\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" className={classes.second}>\r\n                  Computers and Mobile Phones Trading\r\n                </Typography>\r\n              </div>\r\n            </Box>\r\n          </Link>\r\n\r\n          <Hidden lgUp>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <Link to=\"/cart\">\r\n                <IconButton>\r\n                  <Badge\r\n                    badgeContent={cart ? cart.length : null}\r\n                    color=\"secondary\"\r\n                  >\r\n                    <ShoppingCartOutlinedIcon style={{ color: \"white\" }} />\r\n                  </Badge>\r\n                </IconButton>\r\n              </Link>\r\n              <SideDrawer />\r\n            </div>\r\n          </Hidden>\r\n          <Hidden mdDown>\r\n            <div className={classes.navDisplayFlex}>\r\n              <Search />\r\n              <NavList cart={cart} />\r\n            </div>\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst CookieConsent = () => {\r\n  const [state, setState] = useState({\r\n    visible: false,\r\n    acceptOnScrollPercentage: 25,\r\n  });\r\n\r\n  const handleAccept = () => {\r\n    Cookies.set(\"AlamalConsentCookies\", \"Given\", { expires: 365 });\r\n    setState({\r\n      ...state,\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    const rootNode = document.documentElement || document.body;\r\n\r\n    if (rootNode) {\r\n      const percentage =\r\n        (rootNode.scrollTop / (rootNode.scrollHeight - rootNode.clientHeight)) *\r\n        100;\r\n\r\n      if (percentage > state.acceptOnScrollPercentage) {\r\n        handleAccept();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    if (Cookies.get(\"AlamalConsentCookies\") === undefined) {\r\n      setState({\r\n        ...state,\r\n        visible: true,\r\n      });\r\n    }\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const action = (\r\n    <Button color=\"secondary\" size=\"small\" key=\"accept\" onClick={handleAccept}>\r\n      Accept\r\n    </Button>\r\n  );\r\n\r\n  const message = (\r\n    <React.Fragment>\r\n      <Typography varaint=\"subtitle1\" component=\"p\">\r\n        This site uses cookies to improve the user experience.\r\n      </Typography>\r\n      <Link to=\"/page/cookies\" target=\"_blank\" style={{ color: \"white\" }}>\r\n        <Typography varaint=\"subtitle1\" component=\"p\">\r\n          Read cookie policy\r\n        </Typography>\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n      open={state.visible}\r\n      message={message}\r\n      action={action}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CookieConsent;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport history from \"../history\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Nav from \"../components/Nav/Nav\";\r\nimport CookieConsent from \"../components/CookieConsent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContainer: {\r\n    minHeight: \"100vh\",\r\n    position: \"relative\",\r\n  },\r\n  contentWrap: {\r\n    height: \"100%\",\r\n    paddingBottom: \"25rem\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      paddingBottom: \"60rem\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingBottom: \"40rem\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingBottom: \"25rem\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingBottom: \"25rem\",\r\n    },\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n      paddingBottom: \"22.5rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Layout = (props) => {\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.auth.token);\r\n  if (window.location === \"/account\" || window.location === \"/checkout\") {\r\n    if (!token) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <div className={classes.pageContainer}>\r\n        <div className={classes.contentWrap}>\r\n          {props.children}\r\n          <CookieConsent />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Error = ({ message }) => {\r\n  return (\r\n    <Grid container spacing={4}>\r\n      <Grid item xs={12}>\r\n        <ErrorOutlineIcon color=\"error\" />\r\n        <Typography color=\"error\">Oops! An error has occurred :-/</Typography>\r\n        {message ? <Typography color=\"error\">{message}</Typography> : \"\"}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/\">\r\n          Go to homepage\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    color: \"black\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    linkText: {\r\n      textDecoration: \"none\",\r\n      textTransform: \"uppercase\",\r\n      color: \"black\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Lists = ({ state, setState }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem\r\n        button\r\n        onClick={() =>\r\n          setState({ ...state, option: \"buyerOrders\", display: \"Buyer Orders\" })\r\n        }\r\n      >\r\n        <ListItemText className={classes.linkText} primary=\"Buyer Orders\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        onClick={() =>\r\n          setState({ ...state, option: \"sellLaptop\", display: \"Sell Laptop\" })\r\n        }\r\n      >\r\n        <ListItemText className={classes.linkText} primary=\"Sell Laptop\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        onClick={() =>\r\n          setState({\r\n            ...state,\r\n            option: \"sellAccessories\",\r\n            display: \"Sell Accessories\",\r\n          })\r\n        }\r\n      >\r\n        <ListItemText className={classes.linkText} primary=\"Sell Accessories\" />\r\n      </ListItem>\r\n      <ListItem\r\n        button\r\n        onClick={() =>\r\n          setState({\r\n            ...state,\r\n            option: \"sellerProduct\",\r\n            display: \"Seller Product\",\r\n          })\r\n        }\r\n      >\r\n        <ListItemText className={classes.linkText} primary=\"Seller Product\" />\r\n      </ListItem>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  noSpace: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n}));\r\n\r\nconst BuyerOrders = () => {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState({\r\n    error: null,\r\n    loading: true,\r\n    payload: null,\r\n  });\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    authStore\r\n      .get(\"/api/v1/getclientorders\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        setOrders({ ...orders, payload: response.data, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        setOrders({ ...orders, error: error.response, loading: false });\r\n        // eslint-disable-next-line\r\n      });\r\n  }, []);\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return <CircularProgress />;\r\n    } else if (orders.error && orders.error.status === 500) {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          There was an error loading the data: ( &nbsp; {orders.error.data}{\" \"}\r\n        </Typography>\r\n      );\r\n    } else if (orders.payload !== null && orders.payload.length > 0) {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow className={classes.noSpace}>\r\n                <TableCell>Client Name</TableCell>\r\n                <TableCell align=\"left\"> Phone Number </TableCell>\r\n                <TableCell align=\"left\"> Delivery Address </TableCell>\r\n                <TableCell align=\"left\"> Google Pin Location </TableCell>\r\n                <TableCell align=\"left\"> Products </TableCell>\r\n                <TableCell align=\"left\"> Quantity </TableCell>\r\n                <TableCell align=\"left\"> Total </TableCell>\r\n                <TableCell align=\"left\">Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.payload.map((item, i) => (\r\n                <TableRow\r\n                  key={orders.payload[i]._id}\r\n                  id={orders.payload[i]._id}\r\n                  className={classes.noSpace}\r\n                >\r\n                  <TableCell align=\"left\">\r\n                    {item.firstName} {item.lastName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{item.phoneNumber}</TableCell>\r\n                  <TableCell align=\"left\">{item.deliveryAddress}</TableCell>\r\n                  <TableCell align=\"left\">{item.googleLocation}</TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart\r\n                      .filter((element) => element.authorId === token.id)\r\n                      .map((params) => `${params.title}, `)}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart\r\n                      .filter((element) => element.authorId === token.id)\r\n                      .map((params) => `${params.quantity}, `)}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.arrayOfCart\r\n                      .filter((element) => element.authorId === token.id)\r\n                      .map((params) => `${params.price} $ `)}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <strong>{item.status}</strong>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    } else {\r\n      return <Typography variant=\"body1\">You haven't got any order</Typography>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" component=\"h5\">\r\n        Buyer Orders\r\n      </Typography>\r\n      <br />\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          {renderOrders()}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BuyerOrders;\r\n","import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Snackbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { showError } from \"../../../utils\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nfunction LaptopForm() {\r\n  const state = useSelector((state) => state.auth.token);\r\n  const dev = \"http://localhost:5000\";\r\n  const baseURL =\r\n    window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n  const [myAlert, setMyAlert] = useState({\r\n    saving: false,\r\n    success: null,\r\n    error: null,\r\n    message: null,\r\n  });\r\n  const [productImages, setProductImages] = useState([]);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      brand: \"\",\r\n      color: \"\",\r\n      productType: \"Laptop\",\r\n      processorName: \"\",\r\n      processorDetail: \"\",\r\n      price: \"\",\r\n      display: \"\",\r\n      displayDetails: \"\",\r\n      ram: \"\",\r\n      storage: \"\",\r\n      label: \"Featured\",\r\n    },\r\n\r\n    onSubmit: (values, { resetForm }) => {\r\n      if (productImages.length > 4 || productImages.length < 4) {\r\n        let err = {\r\n          response: {\r\n            data: \"4 pictures required\",\r\n          },\r\n        };\r\n        return setMyAlert({\r\n          ...myAlert,\r\n          saving: false,\r\n          success: false,\r\n          error: true,\r\n          message: err,\r\n        });\r\n      }\r\n      var formData = new FormData();\r\n      for (let i = 0; i < productImages.length; i++) {\r\n        formData.append(\"myfile\", productImages[i]);\r\n      }\r\n      formData.append(\"authorId\", state.id);\r\n      formData.append(\"authorName\", state.firstName + \" \" + state.lastName);\r\n      formData.append(\"title\", values.title);\r\n      formData.append(\"description\", values.description);\r\n      formData.append(\"brand\", values.brand);\r\n      formData.append(\"color\", values.color);\r\n      formData.append(\"productType\", \"Laptop\");\r\n      formData.append(\"processorName\", values.processorName);\r\n      formData.append(\"processorDetail\", values.processorDetail);\r\n      formData.append(\"price\", values.price);\r\n      formData.append(\"display\", values.display);\r\n      formData.append(\"displayDetails\", values.displayDetails);\r\n      formData.append(\"ram\", values.ram);\r\n      formData.append(\"storage\", values.storage);\r\n      formData.append(\"label\", values.label);\r\n\r\n      setMyAlert({\r\n        ...myAlert,\r\n        saving: true,\r\n      });\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: `${baseURL}/api/v1/post/product`,\r\n        data: formData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        withCredentials: true,\r\n      })\r\n        .then((result) => {\r\n          setMyAlert({\r\n            saving: false,\r\n            success: true,\r\n          });\r\n          resetForm({ values: \"\" });\r\n        })\r\n        .catch((err) => {\r\n          setMyAlert({\r\n            ...myAlert,\r\n            saving: false,\r\n            success: false,\r\n            error: true,\r\n            message: err,\r\n          });\r\n        });\r\n    },\r\n  });\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    if (myAlert.success === true) {\r\n      setMyAlert({\r\n        ...myAlert,\r\n        success: false,\r\n      });\r\n    } else {\r\n      setMyAlert({\r\n        ...myAlert,\r\n        error: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={myAlert.success}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n          Product Created Successfully\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={myAlert.error}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {showError(myAlert.message)}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container>\r\n        <Typography variant=\"h5\" component=\"h5\">\r\n          Sell your Laptops\r\n        </Typography>\r\n        <br />\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"title\"\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                value={formik.values.title}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.title && Boolean(formik.errors.title)}\r\n                helperText={formik.touched.title && formik.errors.title}\r\n                placeholder=\"Macbook Air 13\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"brand\"\r\n                name=\"brand\"\r\n                label=\"Brand Name\"\r\n                variant=\"outlined\"\r\n                value={formik.values.brand}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.brand && Boolean(formik.errors.brand)}\r\n                helperText={formik.touched.brand && formik.errors.brand}\r\n                required\r\n                placeholder=\"Apple\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"description\"\r\n                name=\"description\"\r\n                label=\"Title Descrpition\"\r\n                variant=\"outlined\"\r\n                value={formik.values.description}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.description &&\r\n                  Boolean(formik.errors.description)\r\n                }\r\n                helperText={\r\n                  formik.touched.description && formik.errors.description\r\n                }\r\n                placeholder=\"The Apple MacBook Air Core i5 1.6 13-Inch (Early 2015/Broadwell) features a 14-nm Broadwell ULT 1.6 GHz Intel Core i5 processor (5250U) with two independent processor cores on a single chip, a 3 MB shared level 3 cache, 4 GB or 8 GB of onboard 1600 MHz LPDDR3 SDRAM (4 GB of RAM originally with the option to upgrade to 8 GB at the time of purchase only, and 8 GB standard starting April 19, 2016), 128 GB or 256 GB of 4 Lane PCIe-based flash storage, and an integrated Intel HD Graphics 60\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"color\"\r\n                name=\"color\"\r\n                label=\"Laptop color\"\r\n                variant=\"outlined\"\r\n                value={formik.values.color}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.color && Boolean(formik.errors.color)}\r\n                helperText={formik.touched.color && formik.errors.color}\r\n                required\r\n                placeholder=\"white\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"productType\"\r\n                name=\"productType\"\r\n                label=\"Product Type\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                value={formik.values.productType}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.productType &&\r\n                  Boolean(formik.errors.productType)\r\n                }\r\n                helperText={\r\n                  formik.touched.productType && formik.errors.productType\r\n                }\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"processorName\"\r\n                name=\"processorName\"\r\n                label=\"Processor Name\"\r\n                variant=\"outlined\"\r\n                value={formik.values.processorName}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.processorName &&\r\n                  Boolean(formik.errors.processorName)\r\n                }\r\n                helperText={\r\n                  formik.touched.processorName && formik.errors.processorName\r\n                }\r\n                required\r\n                placeholder=\"Core i5\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"processorDetail\"\r\n                name=\"processorDetail\"\r\n                label=\"Processor Details\"\r\n                variant=\"outlined\"\r\n                value={formik.values.processorDetail}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.processorDetail &&\r\n                  Boolean(formik.errors.processorDetail)\r\n                }\r\n                helperText={\r\n                  formik.touched.processorDetail &&\r\n                  formik.errors.processorDetail\r\n                }\r\n                required\r\n                placeholder=\"5250U\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={formik.values.price}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.price && Boolean(formik.errors.price)}\r\n                helperText={formik.touched.price && formik.errors.price}\r\n                required\r\n                placeholder=\"600\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"display\"\r\n                name=\"display\"\r\n                label=\"Display\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={formik.values.display}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.display && Boolean(formik.errors.display)}\r\n                helperText={formik.touched.display && formik.errors.display}\r\n                required\r\n                placeholder=\"13.3\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"displayDetails\"\r\n                name=\"displayDetails\"\r\n                label=\"Display Details\"\r\n                variant=\"outlined\"\r\n                value={formik.values.displayDetails}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.displayDetails &&\r\n                  Boolean(formik.errors.displayDetails)\r\n                }\r\n                helperText={\r\n                  formik.touched.displayDetails && formik.errors.displayDetails\r\n                }\r\n                required\r\n                placeholder=\"TFT LED backlit active-matrix glossy display (1440x900 native resolution)\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"ram\"\r\n                name=\"ram\"\r\n                label=\"RAM\"\r\n                variant=\"outlined\"\r\n                value={formik.values.ram}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.ram && Boolean(formik.errors.ram)}\r\n                helperText={formik.touched.ram && formik.errors.ram}\r\n                required\r\n                placeholder=\"8GB DDR3 RAM\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"storage\"\r\n                name=\"storage\"\r\n                label=\"Storage\"\r\n                variant=\"outlined\"\r\n                value={formik.values.storage}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.storage && Boolean(formik.errors.storage)}\r\n                helperText={formik.touched.storage && formik.errors.storage}\r\n                required\r\n                placeholder=\"1000GB HDD STORAGE\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel id=\"label\">Label</InputLabel>\r\n              <Select\r\n                labelId=\"label\"\r\n                id=\"label\"\r\n                name=\"label\"\r\n                label=\"Label\"\r\n                variant=\"outlined\"\r\n                defaultValue=\"Featured\"\r\n                value={formik.values.label}\r\n                onChange={formik.handleChange}\r\n                fullWidth\r\n                required\r\n              >\r\n                <MenuItem value=\"Featured\">Featured</MenuItem>\r\n                <MenuItem value=\"New\">New</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} lg={12}>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"file\"\r\n                id=\"file\"\r\n                variant=\"outlined\"\r\n                multiple\r\n                style={{\r\n                  marginTop: \"20px\",\r\n                  marginBottom: \"14px\",\r\n                  width: \"100%\",\r\n                }}\r\n                onChange={(e) => {\r\n                  setProductImages([]);\r\n                  for (let i = 0; i < e.target.files.length; i++) {\r\n                    const newImage = e.target.files[i];\r\n                    setProductImages((prevImage) => [...prevImage, newImage]);\r\n                  }\r\n                }}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n              {myAlert.saving ? (\r\n                <CircularProgress color=\"secondary\" />\r\n              ) : (\r\n                \"Submit\"\r\n              )}\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LaptopForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { authStore } from \"../../apis/store\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  noSpace: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n}));\r\n\r\nconst SellerProduct = () => {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState({\r\n    error: null,\r\n    loading: true,\r\n    payload: null,\r\n  });\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    authStore\r\n      .get(\"/api/v1/getsellerproducts\", {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        setOrders({ ...orders, payload: response.data, loading: false });\r\n      })\r\n      .catch((error) => {\r\n        setOrders({ ...orders, error: error.response, loading: false });\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const renderOrders = () => {\r\n    if (orders.loading === true) {\r\n      return <CircularProgress />;\r\n    } else if (orders.error && orders.error.status === 500) {\r\n      return (\r\n        <Typography variant=\"body1\">\r\n          There was an error loading the data: ( &nbsp; {orders.error.data}{\" \"}\r\n        </Typography>\r\n      );\r\n    } else if (orders.payload !== null && orders.payload.length > 0) {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"spanning table\">\r\n            <TableHead>\r\n              <TableRow className={classes.noSpace}>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell align=\"left\"> Title </TableCell>\r\n                <TableCell align=\"left\"> Price </TableCell>\r\n                <TableCell align=\"left\"> Brand </TableCell>\r\n                <TableCell align=\"left\"> Color </TableCell>\r\n                <TableCell align=\"left\"> Details </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.payload.map((item, i) => (\r\n                <TableRow\r\n                  key={orders.payload[i]._id}\r\n                  id={orders.payload[i]._id}\r\n                  className={classes.noSpace}\r\n                >\r\n                  <TableCell align=\"left\">{item.productType}</TableCell>\r\n                  <TableCell align=\"left\">{item.title}</TableCell>\r\n                  <TableCell align=\"left\">{item.price}</TableCell>\r\n                  <TableCell align=\"left\">{item.brand}</TableCell>\r\n                  <TableCell align=\"left\">{item.color}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {item.processorName} {item.ram} {item.storage}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    } else {\r\n      return <Typography variant=\"body1\">You haven't Post Products</Typography>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" component=\"h5\">\r\n        Your Products\r\n      </Typography>\r\n      <br />\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          {renderOrders()}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SellerProduct;\r\n","import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Snackbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { showError } from \"../../../utils\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nfunction AccessoryForm() {\r\n  const state = useSelector((state) => state.auth.token);\r\n  const dev = \"http://localhost:5000\";\r\n  const baseURL =\r\n    window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n  const [myAlert, setMyAlert] = useState({\r\n    saving: false,\r\n    success: null,\r\n    error: null,\r\n    message: null,\r\n  });\r\n  const [productImages, setProductImages] = useState([]);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      brand: \"\",\r\n      description: \"\",\r\n      color: \"\",\r\n      productType: \"Accessory\",\r\n      price: \"\",\r\n    },\r\n\r\n    onSubmit: (values, { resetForm }) => {\r\n      if (productImages.length > 4 || productImages.length < 4) {\r\n        let err = {\r\n          response: {\r\n            data: \"4 pictures required\",\r\n          },\r\n        };\r\n        return setMyAlert({\r\n          ...myAlert,\r\n          saving: false,\r\n          success: false,\r\n          error: true,\r\n          message: err,\r\n        });\r\n      }\r\n      var formData = new FormData();\r\n      for (let i = 0; i < productImages.length; i++) {\r\n        formData.append(\"myfile\", productImages[i]);\r\n      }\r\n      formData.append(\"authorId\", state.id);\r\n      formData.append(\"authorName\", state.firstName + \" \" + state.lastName);\r\n      formData.append(\"title\", values.title);\r\n      formData.append(\"description\", values.description);\r\n      formData.append(\"brand\", values.brand);\r\n      formData.append(\"color\", values.color);\r\n      formData.append(\"productType\", \"Accessory\");\r\n      formData.append(\"price\", values.price);\r\n\r\n      setMyAlert({\r\n        ...myAlert,\r\n        saving: true,\r\n      });\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: `${baseURL}/api/v1/post/product`,\r\n        data: formData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        withCredentials: true,\r\n      })\r\n        .then((result) => {\r\n          setMyAlert({\r\n            saving: false,\r\n            success: true,\r\n          });\r\n          resetForm({ values: \"\" });\r\n        })\r\n        .catch((err) => {\r\n          setMyAlert({\r\n            ...myAlert,\r\n            saving: false,\r\n            success: false,\r\n            error: true,\r\n            message: err,\r\n          });\r\n        });\r\n    },\r\n  });\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    if (myAlert.success === true) {\r\n      setMyAlert({\r\n        ...myAlert,\r\n        success: false,\r\n      });\r\n    } else {\r\n      setMyAlert({\r\n        ...myAlert,\r\n        error: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={myAlert.success}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n          Product Created Successfully\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={myAlert.error}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {showError(myAlert.message)}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Container>\r\n        <Typography variant=\"h5\" component=\"h5\">\r\n          Sell Accessories\r\n        </Typography>\r\n        <br />\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"title\"\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                value={formik.values.title}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.title && Boolean(formik.errors.title)}\r\n                helperText={formik.touched.title && formik.errors.title}\r\n                placeholder=\"Keyboard\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"brand\"\r\n                name=\"brand\"\r\n                label=\"Brand Name\"\r\n                variant=\"outlined\"\r\n                value={formik.values.brand}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.brand && Boolean(formik.errors.brand)}\r\n                helperText={formik.touched.brand && formik.errors.brand}\r\n                required\r\n                placeholder=\"Dell\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"description\"\r\n                name=\"description\"\r\n                label=\"Title Descrpition\"\r\n                variant=\"outlined\"\r\n                value={formik.values.description}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.description &&\r\n                  Boolean(formik.errors.description)\r\n                }\r\n                helperText={\r\n                  formik.touched.description && formik.errors.description\r\n                }\r\n                placeholder=\"Dell new wireless Keyboard with USB connectivity \"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"color\"\r\n                name=\"color\"\r\n                label=\"Accessory color\"\r\n                variant=\"outlined\"\r\n                value={formik.values.color}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.color && Boolean(formik.errors.color)}\r\n                helperText={formik.touched.color && formik.errors.color}\r\n                required\r\n                placeholder=\"Dark Black\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"productType\"\r\n                name=\"productType\"\r\n                label=\"Product Type\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                value={formik.values.productType}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.productType &&\r\n                  Boolean(formik.errors.productType)\r\n                }\r\n                helperText={\r\n                  formik.touched.productType && formik.errors.productType\r\n                }\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"price\"\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={formik.values.price}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.price && Boolean(formik.errors.price)}\r\n                helperText={formik.touched.price && formik.errors.price}\r\n                required\r\n                placeholder=\"30\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} lg={12}>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"file\"\r\n                id=\"file\"\r\n                variant=\"outlined\"\r\n                multiple\r\n                style={{\r\n                  marginTop: \"20px\",\r\n                  marginBottom: \"14px\",\r\n                  width: \"100%\",\r\n                }}\r\n                onChange={(e) => {\r\n                  setProductImages([]);\r\n                  for (let i = 0; i < e.target.files.length; i++) {\r\n                    const newImage = e.target.files[i];\r\n                    setProductImages((prevImage) => [...prevImage, newImage]);\r\n                  }\r\n                }}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n              {myAlert.saving ? (\r\n                <CircularProgress color=\"secondary\" />\r\n              ) : (\r\n                \"Submit\"\r\n              )}\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AccessoryForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Lists from \"./Lists\";\r\nimport BuyerOrders from \"./BuyerOrders\";\r\nimport LaptopForm from \"./LaptopForm/LaptopForm\";\r\nimport SellerProduct from \"./SellerProduct\";\r\nimport AccessoryForm from \"./Accessory/AccessoryForm\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  div: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    width: \"100%\",\r\n  },\r\n  list: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UserProfile() {\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [state, setState] = useState({\r\n    option: \"loading\",\r\n    display: \"Loading\",\r\n    error: null,\r\n    user: null,\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    setState({\r\n      option: \"buyerOrders\",\r\n      display: \"Buyer Orders\",\r\n      user: token,\r\n    });\r\n    // eslint-disable-next-line()\r\n  }, []);\r\n\r\n  const renderComponent = () => {\r\n    switch (state.option) {\r\n      case \"buyerOrders\":\r\n        return (\r\n          <React.Fragment>\r\n            <BuyerOrders />\r\n          </React.Fragment>\r\n        );\r\n      case \"sellLaptop\":\r\n        return (\r\n          <React.Fragment>\r\n            <LaptopForm />\r\n          </React.Fragment>\r\n        );\r\n      case \"sellAccessories\":\r\n        return (\r\n          <React.Fragment>\r\n            <AccessoryForm />\r\n          </React.Fragment>\r\n        );\r\n\r\n      case \"sellerProduct\":\r\n        return (\r\n          <React.Fragment>\r\n            <SellerProduct />\r\n          </React.Fragment>\r\n        );\r\n      case \"loading\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant=\"body1\">Loading</Typography>\r\n            <CircularProgress color=\"primary\" />\r\n          </React.Fragment>\r\n        );\r\n      case \"error\":\r\n        return (\r\n          <React.Fragment>\r\n            <Typography component=\"p\" variant=\"body1\" color=\"error\">\r\n              An error occurred while fetching user details!\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        throw new Error(\"Unknown address\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ minHeight: \"100vh\", backgroundColor: \"white\" }}>\r\n        <CssBaseline />\r\n        <Grid container>\r\n          <Grid container item sm={12} justify=\"flex-start\">\r\n            <Box component=\"div\" mb={5} textAlign=\"left\">\r\n              <Typography variant=\"h2\" component=\"h2\">\r\n                Seller / {state.display}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item sm={12} md={4}>\r\n            <List\r\n              component=\"nav\"\r\n              aria-label=\"account action list\"\r\n              disablePadding\r\n              className={classes.list}\r\n            >\r\n              <Lists state={state} setState={setState} />\r\n            </List>\r\n          </Grid>\r\n          <Grid container item sm={12} md={8} justify=\"center\">\r\n            <Box component=\"div\" className={classes.div}>\r\n              {renderComponent()}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport AdminRoute from \"./components/AdminRoute\";\r\n\r\nimport Hoc from \"./Hoc\";\r\nimport SignIn from \"./containers/Auth/SignIn\";\r\nimport SignUp from \"./containers/Auth/SignUp\";\r\nimport Forgot from \"./containers/Auth/Forgot\";\r\nimport Product from \"./components/Product/Product\";\r\nimport ProductList from \"./components/Product/ProductList\";\r\nimport ResetPassword from \"./containers/Auth/ResetPassword\";\r\nimport Dashboard from \"./containers/Admin/Dashboard\";\r\nimport Checkout from \"./containers/Checkout/Checkout\";\r\nimport UserProfile from \"./containers/Profile/UserProfile\";\r\nimport CartView from \"./containers/CartView\";\r\nimport Home from \"./containers/Home\";\r\nimport Content from \"./containers/Content\";\r\nimport Layout from \"./containers/Layout\";\r\nimport Error from \"./components/Error\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Seller from \"./containers/Seller/Seller\";\r\n\r\nconst BaseRouter = withRouter(({ location }) => {\r\n  const token = useSelector((state) => state.auth.token);\r\n  // console.log(token);\r\n  return (\r\n    <Hoc>\r\n      {/* {location.pathname !== \"/dashboard\" ? ( */}\r\n      <Layout>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/error\" exact component={Error} />\r\n          <Route path=\"/cart\" exact component={CartView} />\r\n          <Route\r\n            path=\"/products/:product\"\r\n            exact\r\n            render={(props) => (\r\n              <ProductList key={props.location.key} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/product/:slug\"\r\n            exact\r\n            render={(props) => <Product key={props.location.key} {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/page/:content\"\r\n            exact\r\n            render={(props) => <Content key={props.location.key} {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/reset/:uid/:token\"\r\n            exact\r\n            render={(props) => (\r\n              <ResetPassword key={props.location.key} {...props} />\r\n            )}\r\n          />\r\n          <PrivateRoute path=\"/checkout\" exact component={Checkout} />\r\n          <PrivateRoute path=\"/account\" exact component={UserProfile} />\r\n          {!token && (\r\n            <>\r\n              <Route path=\"/signin\" exact component={SignIn} />\r\n              <Route path=\"/signup\" exact component={SignUp} />\r\n              <Route path=\"/reset-password\" exact component={Forgot} />\r\n            </>\r\n          )}\r\n          {token?.seller && <Route path=\"/seller\" exact component={Seller} />}\r\n          <Route render={() => <Redirect to=\"/\" />} />\r\n        </Switch>\r\n      </Layout>\r\n      {/* ) : (\r\n        <React.Fragment>\r\n          <AdminRoute path=\"/dashboard\" exact component={Dashboard} />\r\n        </React.Fragment>\r\n      )} */}\r\n    </Hoc>\r\n  );\r\n});\r\n\r\nexport default BaseRouter;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { authCheckState } from \"./store/actions/auth\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"./theme\";\r\n\r\nimport BackToTop from \"./components/BackToTop\";\r\nimport BaseRouter from \"./routes\";\r\nimport history from \"./history\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(authCheckState());\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <Router history={history}>\r\n          <BaseRouter />\r\n        </Router>\r\n        <BackToTop showBelow={250} />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n  AUTH_START,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  AUTH_LOGOUT,\r\n  AUTH_RESET,\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  token: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport const authReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case AUTH_START:\r\n      return { ...state, error: null, loading: true };\r\n    case AUTH_SUCCESS:\r\n      return { ...state, token: action.payload, error: null, loading: false };\r\n    case AUTH_FAIL:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case AUTH_LOGOUT:\r\n      return { ...state, token: null };\r\n    case AUTH_RESET:\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_START,\r\n  CART_SUCCESS,\r\n  CART_FAIL,\r\n  CART_CLEAR,\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  shoppingCart: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport const cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CART_START:\r\n      return { ...state, error: null, loading: true };\r\n    case CART_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        shoppingCart: action.payload,\r\n      };\r\n    case CART_FAIL:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CART_CLEAR:\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { cartReducer } from \"./cartReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  cart: cartReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport App from \"./App\";\r\nimport reducers from \"./store/reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}